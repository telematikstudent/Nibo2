
defaultCProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000386  00800100  00003b48  00003bdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003b48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035f  00800486  00800486  00003f62  2**0
                  ALLOC
  3 .stab         000066c0  00000000  00000000  00003f64  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000021ff  00000000  00000000  0000a624  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__ctors_end>
       4:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
       8:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
       c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      10:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      14:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      18:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      1c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      20:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      24:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      28:	0c 94 9c 03 	jmp	0x738	; 0x738 <__vector_10>
      2c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      30:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      34:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      38:	0c 94 28 13 	jmp	0x2650	; 0x2650 <__vector_14>
      3c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      40:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      44:	0c 94 23 0a 	jmp	0x1446	; 0x1446 <__vector_17>
      48:	0c 94 01 03 	jmp	0x602	; 0x602 <__vector_18>
      4c:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__vector_19>
      50:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      54:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      58:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      5c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      60:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      64:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      68:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      6c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      70:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      74:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      78:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      7c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      80:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      84:	0c 94 71 19 	jmp	0x32e2	; 0x32e2 <__vector_33>
      88:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>

0000008c <logo_bits>:
	...
      a8:	00 80 56 01 00 02 00 00 fe ff ff 03 03 00 c0 ff     ..V.............
      b8:	ff ff bf 01 00 e0 0f 00 c4 ff 01 00 e0 03 00 00     ................
      c8:	f0 03 00 e0 7f 00 00 e0 03 00 c0 fc ff ff ff 03     ................
      d8:	00 c0 81 ff ff bf 01 00 80 03 00 00 df 01 00 00     ................
      e8:	03 00 80 fb 00 00 00 07 00 c0 7f 00 00 00 0e 00     ................
      f8:	c0 3f 00 00 00 0c 00 e0 3f 00 00 00 1c 00 f8 0f     .?......?.......
     108:	00 00 00 38 00 dc 0e 00 00 00 70 00 fc 07 00 00     ...8......p.....
     118:	00 e0 00 fe 03 00 00 00 c0 80 ff 01 00 00 00 c0     ................
     128:	c1 ff 00 00 00 00 80 e3 3c 00 00 00 00 00 e7 3f     ........<......?
     138:	00 00 00 00 00 e6 0f 00 00 00 00 00 ee 07 00 00     ................
     148:	00 00 00 dc 07 00 00 00 00 00 b8 03 00 00 00 00     ................
     158:	00 f8 01 00 00 00 00 00 f0 01 00 00 00 00 00 f0     ................
     168:	00 00 00 00 00 00 f0 00 00 00 00 00 00 f0 00 00     ................
     178:	00 00 00 00 f0 00 00 00 00 00 00 f0 00 00 00 00     ................
     188:	00 00 f0 00 00 00 00 00 00 70 00 00 00 00 00 00     .........p......
     198:	e0 00 00 00 00 00 00 f0 00 00 00 00 00 00 f0 00     ................
     1a8:	00 00 00 00 00 70 00 00 00 00 00 00 e0 00 00 00     .....p..........
     1b8:	00 00 00 70 00 00 00 00 00 00 70 00 00 00 00 00     ...p......p.....
     1c8:	00 70 00 00 00 00 00 00 60 00 00 00 00 00 00 70     .p......`......p
     1d8:	00 00 00 00 00 00 70 00 00 00 00 00 00 60 00 00     ......p......`..
     1e8:	00 00 00 00 70 00 00 00 00 00 80 ff 07 00 00 00     ....p...........
     1f8:	00 f0 ff 3f 00 00 00 00 70 f8 7c 00 00 00 00 38     ...?....p.|....8
     208:	fc e1 00 00 00 00 f0 01 f8 00 00 00 00 e0 ff 7f     ................
     218:	00 00 00 00 00 ff 0f 00 00 00 00 00 00 00 00 00     ................
	...

00000230 <bot_lib_revision>:
     230:	31 36 33 00                                         163.

00000234 <bot_lib_version>:
     234:	32 2e 31 31 00                                      2.11.

00000239 <__c.1769>:
     239:	6e 61 6e 00                                         nan.

0000023d <__c.1767>:
     23d:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     24d:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     25d:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     26d:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     27d:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     28d:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     29d:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     2ad:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     2bd:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     2cd:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2dd:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2ed:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2fd:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     30d:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     31d:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     32d:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

0000033c <__ctors_end>:
     33c:	11 24       	eor	r1, r1
     33e:	1f be       	out	0x3f, r1	; 63
     340:	cf ef       	ldi	r28, 0xFF	; 255
     342:	d0 e1       	ldi	r29, 0x10	; 16
     344:	de bf       	out	0x3e, r29	; 62
     346:	cd bf       	out	0x3d, r28	; 61

00000348 <__do_copy_data>:
     348:	14 e0       	ldi	r17, 0x04	; 4
     34a:	a0 e0       	ldi	r26, 0x00	; 0
     34c:	b1 e0       	ldi	r27, 0x01	; 1
     34e:	e8 e4       	ldi	r30, 0x48	; 72
     350:	fb e3       	ldi	r31, 0x3B	; 59
     352:	00 e0       	ldi	r16, 0x00	; 0
     354:	0b bf       	out	0x3b, r16	; 59
     356:	02 c0       	rjmp	.+4      	; 0x35c <__do_copy_data+0x14>
     358:	07 90       	elpm	r0, Z+
     35a:	0d 92       	st	X+, r0
     35c:	a6 38       	cpi	r26, 0x86	; 134
     35e:	b1 07       	cpc	r27, r17
     360:	d9 f7       	brne	.-10     	; 0x358 <__do_copy_data+0x10>

00000362 <__do_clear_bss>:
     362:	17 e0       	ldi	r17, 0x07	; 7
     364:	a6 e8       	ldi	r26, 0x86	; 134
     366:	b4 e0       	ldi	r27, 0x04	; 4
     368:	01 c0       	rjmp	.+2      	; 0x36c <.do_clear_bss_start>

0000036a <.do_clear_bss_loop>:
     36a:	1d 92       	st	X+, r1

0000036c <.do_clear_bss_start>:
     36c:	a5 3e       	cpi	r26, 0xE5	; 229
     36e:	b1 07       	cpc	r27, r17
     370:	e1 f7       	brne	.-8      	; 0x36a <.do_clear_bss_loop>
     372:	0e 94 63 04 	call	0x8c6	; 0x8c6 <main>
     376:	0c 94 a2 1d 	jmp	0x3b44	; 0x3b44 <_exit>

0000037a <__bad_interrupt>:
     37a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000037e <niboCom_getCMD>:
}


uint8_t niboCom_getCMD(){

	uint8_t tmp = lastCMD;
     37e:	80 91 87 04 	lds	r24, 0x0487
	if(tmp != niboCom_cmd_none){
     382:	88 23       	and	r24, r24
     384:	11 f0       	breq	.+4      	; 0x38a <niboCom_getCMD+0xc>
		lastCMD = niboCom_cmd_none;
     386:	10 92 87 04 	sts	0x0487, r1
	}

	return tmp;
}
     38a:	08 95       	ret

0000038c <niboCom_getchar>:
	uart0_putchar(c);
	delay(2);
}

uint8_t niboCom_getchar(){
	if(uart0_rxempty()==false) return uart0_getchar();
     38c:	90 91 48 06 	lds	r25, 0x0648
     390:	80 91 49 06 	lds	r24, 0x0649
     394:	98 17       	cp	r25, r24
     396:	11 f4       	brne	.+4      	; 0x39c <niboCom_getchar+0x10>
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	08 95       	ret
     39c:	0e 94 97 02 	call	0x52e	; 0x52e <uart0_getchar>
	return 0;
}
     3a0:	08 95       	ret

000003a2 <niboCom_uartInterrupt>:
	return tmp;
}


void niboCom_uartInterrupt(){
	while(uart0_rxempty() == true);
     3a2:	90 91 48 06 	lds	r25, 0x0648
     3a6:	80 91 49 06 	lds	r24, 0x0649
     3aa:	98 17       	cp	r25, r24
     3ac:	21 f1       	breq	.+72     	; 0x3f6 <niboCom_uartInterrupt+0x54>
	uint8_t c = niboCom_getchar();
     3ae:	0e 94 c6 01 	call	0x38c	; 0x38c <niboCom_getchar>
     3b2:	98 2f       	mov	r25, r24

//	char output[21] = "";
//	sprintf(output, "sign: %1i", c);
//	advDisplay_append_line(output);

	if(c == 0x68){
     3b4:	88 36       	cpi	r24, 0x68	; 104
     3b6:	21 f4       	brne	.+8      	; 0x3c0 <niboCom_uartInterrupt+0x1e>
		startSign = true;
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	80 93 86 04 	sts	0x0486, r24
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <niboCom_uartInterrupt+0x26>
	}
	else if(startSign != true){
     3c0:	80 91 86 04 	lds	r24, 0x0486
     3c4:	88 23       	and	r24, r24
     3c6:	c1 f0       	breq	.+48     	; 0x3f8 <niboCom_uartInterrupt+0x56>
		return;
	}

	buffer[bufferPos++] = c;
     3c8:	80 91 88 04 	lds	r24, 0x0488
     3cc:	e8 2f       	mov	r30, r24
     3ce:	f0 e0       	ldi	r31, 0x00	; 0
     3d0:	ed 5b       	subi	r30, 0xBD	; 189
     3d2:	fa 4f       	sbci	r31, 0xFA	; 250
     3d4:	90 83       	st	Z, r25
     3d6:	8f 5f       	subi	r24, 0xFF	; 255
     3d8:	80 93 88 04 	sts	0x0488, r24

	if(bufferPos == 4){
     3dc:	84 30       	cpi	r24, 0x04	; 4
     3de:	61 f4       	brne	.+24     	; 0x3f8 <niboCom_uartInterrupt+0x56>
		bufferPos = 0;
     3e0:	10 92 88 04 	sts	0x0488, r1
		startSign = false;
     3e4:	10 92 86 04 	sts	0x0486, r1
		if(c == 0x16){
     3e8:	96 31       	cpi	r25, 0x16	; 22
     3ea:	31 f4       	brne	.+12     	; 0x3f8 <niboCom_uartInterrupt+0x56>
			lastCMD = buffer[1];
     3ec:	80 91 44 05 	lds	r24, 0x0544
     3f0:	80 93 87 04 	sts	0x0487, r24
     3f4:	08 95       	ret
     3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <niboCom_uartInterrupt+0x54>
     3f8:	08 95       	ret

000003fa <niboCom_putchar>:
		uart0_set_baudrate(baudrate);
		uart0_enable();
}


void niboCom_putchar(uint8_t c){
     3fa:	98 2f       	mov	r25, r24
	while(uart0_txfull() == true);
     3fc:	80 91 4a 06 	lds	r24, 0x064A
     400:	88 3c       	cpi	r24, 0xC8	; 200
     402:	41 f0       	breq	.+16     	; 0x414 <niboCom_putchar+0x1a>
	uart0_putchar(c);
     404:	89 2f       	mov	r24, r25
     406:	0e 94 b0 02 	call	0x560	; 0x560 <uart0_putchar>
	delay(2);
     40a:	82 e0       	ldi	r24, 0x02	; 2
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
}
     412:	08 95       	ret
     414:	ff cf       	rjmp	.-2      	; 0x414 <niboCom_putchar+0x1a>

00000416 <niboCom_putPackage>:
	if(uart0_rxempty()==false) return uart0_getchar();
	return 0;
}


void niboCom_putPackage(uint8_t cmd, uint8_t size, uint8_t *data){
     416:	ef 92       	push	r14
     418:	ff 92       	push	r15
     41a:	0f 93       	push	r16
     41c:	1f 93       	push	r17
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	18 2f       	mov	r17, r24
     424:	06 2f       	mov	r16, r22
     426:	7a 01       	movw	r14, r20
	int i = 0;

	niboCom_putchar(0x68);
     428:	88 e6       	ldi	r24, 0x68	; 104
     42a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
	niboCom_putchar(cmd);
     42e:	81 2f       	mov	r24, r17
     430:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
	niboCom_putchar(size);
     434:	80 2f       	mov	r24, r16
     436:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
     43a:	c0 e0       	ldi	r28, 0x00	; 0
     43c:	d0 e0       	ldi	r29, 0x00	; 0
	for(i = 0; i < size;i++){
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	07 c0       	rjmp	.+14     	; 0x450 <niboCom_putPackage+0x3a>
		niboCom_putchar(data[i]);
     442:	f7 01       	movw	r30, r14
     444:	ec 0f       	add	r30, r28
     446:	fd 1f       	adc	r31, r29
     448:	80 81       	ld	r24, Z
     44a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
	int i = 0;

	niboCom_putchar(0x68);
	niboCom_putchar(cmd);
	niboCom_putchar(size);
	for(i = 0; i < size;i++){
     44e:	21 96       	adiw	r28, 0x01	; 1
     450:	c0 17       	cp	r28, r16
     452:	d1 07       	cpc	r29, r17
     454:	b4 f3       	brlt	.-20     	; 0x442 <niboCom_putPackage+0x2c>
		niboCom_putchar(data[i]);
	}
	niboCom_putchar(0x16);
     456:	86 e1       	ldi	r24, 0x16	; 22
     458:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
}
     45c:	df 91       	pop	r29
     45e:	cf 91       	pop	r28
     460:	1f 91       	pop	r17
     462:	0f 91       	pop	r16
     464:	ff 90       	pop	r15
     466:	ef 90       	pop	r14
     468:	08 95       	ret

0000046a <niboCom_putDistance>:
void niboCom_putDircetionChange(uint8_t direction){
	niboCom_putPackage(direction,0,0);
}


void niboCom_putDistance(uint8_t ticks){
     46a:	df 93       	push	r29
     46c:	cf 93       	push	r28
     46e:	0f 92       	push	r0
     470:	cd b7       	in	r28, 0x3d	; 61
     472:	de b7       	in	r29, 0x3e	; 62
     474:	89 83       	std	Y+1, r24	; 0x01
	niboCom_putPackage(niboCom_cmd_nibo_distance,1,&ticks);
     476:	85 e0       	ldi	r24, 0x05	; 5
     478:	61 e0       	ldi	r22, 0x01	; 1
     47a:	ae 01       	movw	r20, r28
     47c:	4f 5f       	subi	r20, 0xFF	; 255
     47e:	5f 4f       	sbci	r21, 0xFF	; 255
     480:	0e 94 0b 02 	call	0x416	; 0x416 <niboCom_putPackage>
}
     484:	0f 90       	pop	r0
     486:	cf 91       	pop	r28
     488:	df 91       	pop	r29
     48a:	08 95       	ret

0000048c <niboCom_putDircetionChange>:
	niboCom_putPackage(niboCom_cmd_nds_distance,size, data);
}


void niboCom_putDircetionChange(uint8_t direction){
	niboCom_putPackage(direction,0,0);
     48c:	60 e0       	ldi	r22, 0x00	; 0
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	50 e0       	ldi	r21, 0x00	; 0
     492:	0e 94 0b 02 	call	0x416	; 0x416 <niboCom_putPackage>
}
     496:	08 95       	ret

00000498 <niboCom_putNDSDistance>:
	}

	niboCom_putPackage(niboCom_cmd_ir_distance,5, distance);
}

void niboCom_putNDSDistance(uint8_t size, uint8_t *data){
     498:	98 2f       	mov	r25, r24
     49a:	ab 01       	movw	r20, r22
	niboCom_putPackage(niboCom_cmd_nds_distance,size, data);
     49c:	84 e0       	ldi	r24, 0x04	; 4
     49e:	69 2f       	mov	r22, r25
     4a0:	0e 94 0b 02 	call	0x416	; 0x416 <niboCom_putPackage>
}
     4a4:	08 95       	ret

000004a6 <niboCom_putIRDistance>:
		niboCom_putchar(data[i]);
	}
	niboCom_putchar(0x16);
}

void niboCom_putIRDistance(uint16_t *data){
     4a6:	df 93       	push	r29
     4a8:	cf 93       	push	r28
     4aa:	00 d0       	rcall	.+0      	; 0x4ac <niboCom_putIRDistance+0x6>
     4ac:	00 d0       	rcall	.+0      	; 0x4ae <niboCom_putIRDistance+0x8>
     4ae:	0f 92       	push	r0
     4b0:	cd b7       	in	r28, 0x3d	; 61
     4b2:	de b7       	in	r29, 0x3e	; 62
     4b4:	dc 01       	movw	r26, r24
     4b6:	fe 01       	movw	r30, r28
     4b8:	31 96       	adiw	r30, 0x01	; 1
	int i = 0;
	uint8_t distance[5];
	for(i = 0; i < 5;i++){
     4ba:	9e 01       	movw	r18, r28
     4bc:	2a 5f       	subi	r18, 0xFA	; 250
     4be:	3f 4f       	sbci	r19, 0xFF	; 255
		distance[i] = data[i]/256;
     4c0:	11 96       	adiw	r26, 0x01	; 1
     4c2:	8c 91       	ld	r24, X
     4c4:	11 97       	sbiw	r26, 0x01	; 1
     4c6:	81 93       	st	Z+, r24
     4c8:	12 96       	adiw	r26, 0x02	; 2
}

void niboCom_putIRDistance(uint16_t *data){
	int i = 0;
	uint8_t distance[5];
	for(i = 0; i < 5;i++){
     4ca:	e2 17       	cp	r30, r18
     4cc:	f3 07       	cpc	r31, r19
     4ce:	c1 f7       	brne	.-16     	; 0x4c0 <niboCom_putIRDistance+0x1a>
		distance[i] = data[i]/256;
	}

	niboCom_putPackage(niboCom_cmd_ir_distance,5, distance);
     4d0:	83 e0       	ldi	r24, 0x03	; 3
     4d2:	65 e0       	ldi	r22, 0x05	; 5
     4d4:	ae 01       	movw	r20, r28
     4d6:	4f 5f       	subi	r20, 0xFF	; 255
     4d8:	5f 4f       	sbci	r21, 0xFF	; 255
     4da:	0e 94 0b 02 	call	0x416	; 0x416 <niboCom_putPackage>
}
     4de:	0f 90       	pop	r0
     4e0:	0f 90       	pop	r0
     4e2:	0f 90       	pop	r0
     4e4:	0f 90       	pop	r0
     4e6:	0f 90       	pop	r0
     4e8:	cf 91       	pop	r28
     4ea:	df 91       	pop	r29
     4ec:	08 95       	ret

000004ee <niboCom_init_with_baud>:
	niboCom_init_with_baud(niboCom_default_baudrate);
}


void niboCom_init_with_baud(uint16_t baudrate){
		uart0_set_baudrate(baudrate);
     4ee:	0e 94 81 02 	call	0x502	; 0x502 <uart0_set_baudrate>
		uart0_enable();
     4f2:	0e 94 cd 02 	call	0x59a	; 0x59a <uart0_enable>
}
     4f6:	08 95       	ret

000004f8 <niboCom_init>:




void niboCom_init(){
	niboCom_init_with_baud(niboCom_default_baudrate);
     4f8:	80 e8       	ldi	r24, 0x80	; 128
     4fa:	95 e2       	ldi	r25, 0x25	; 37
     4fc:	0e 94 77 02 	call	0x4ee	; 0x4ee <niboCom_init_with_baud>
}
     500:	08 95       	ret

00000502 <uart0_set_baudrate>:
uint8_t uart0_rxbuf_end;



void uart0_set_baudrate(uint16_t baud) {
  baud = ((uint32_t)(F_CPU))/((uint32_t)baud*16) - 1;
     502:	9c 01       	movw	r18, r24
     504:	40 e0       	ldi	r20, 0x00	; 0
     506:	50 e0       	ldi	r21, 0x00	; 0
     508:	84 e0       	ldi	r24, 0x04	; 4
     50a:	22 0f       	add	r18, r18
     50c:	33 1f       	adc	r19, r19
     50e:	44 1f       	adc	r20, r20
     510:	55 1f       	adc	r21, r21
     512:	8a 95       	dec	r24
     514:	d1 f7       	brne	.-12     	; 0x50a <uart0_set_baudrate+0x8>
     516:	60 e0       	ldi	r22, 0x00	; 0
     518:	74 e2       	ldi	r23, 0x24	; 36
     51a:	84 ef       	ldi	r24, 0xF4	; 244
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	0e 94 a1 1b 	call	0x3742	; 0x3742 <__udivmodsi4>
     522:	21 50       	subi	r18, 0x01	; 1
     524:	30 40       	sbci	r19, 0x00	; 0
  UBRR0H = (uint8_t)(baud>>8);
     526:	30 93 90 00 	sts	0x0090, r19
  UBRR0L = (uint8_t)(baud&0xff);
     52a:	29 b9       	out	0x09, r18	; 9
}
     52c:	08 95       	ret

0000052e <uart0_getchar>:


char uart0_getchar() {
  cli();
     52e:	f8 94       	cli
  uint8_t result = uart0_rxbuf[uart0_rxbuf_begin];
     530:	90 91 48 06 	lds	r25, 0x0648
     534:	e9 2f       	mov	r30, r25
     536:	f0 e0       	ldi	r31, 0x00	; 0
     538:	e2 5b       	subi	r30, 0xB2	; 178
     53a:	fa 4f       	sbci	r31, 0xFA	; 250
     53c:	e0 81       	ld	r30, Z
  if (uart0_rxbuf_end==UART0_RXBUF_SIZE) {
     53e:	80 91 49 06 	lds	r24, 0x0649
     542:	82 33       	cpi	r24, 0x32	; 50
     544:	11 f4       	brne	.+4      	; 0x54a <uart0_getchar+0x1c>
    uart0_rxbuf_end=uart0_rxbuf_begin;
     546:	90 93 49 06 	sts	0x0649, r25
  }
  
  if (++uart0_rxbuf_begin>=UART0_RXBUF_SIZE) {
     54a:	89 2f       	mov	r24, r25
     54c:	8f 5f       	subi	r24, 0xFF	; 255
     54e:	80 93 48 06 	sts	0x0648, r24
     552:	82 33       	cpi	r24, 0x32	; 50
     554:	10 f0       	brcs	.+4      	; 0x55a <uart0_getchar+0x2c>
    uart0_rxbuf_begin=0;
     556:	10 92 48 06 	sts	0x0648, r1
  }
  sei();
     55a:	78 94       	sei
  return result;
}
     55c:	8e 2f       	mov	r24, r30
     55e:	08 95       	ret

00000560 <uart0_putchar>:


char uart0_putchar(char c) {
     560:	28 2f       	mov	r18, r24
  cli();
     562:	f8 94       	cli
  uart0_txbuf[uart0_txbuf_end] = c;
     564:	80 91 4a 06 	lds	r24, 0x064A
     568:	e8 2f       	mov	r30, r24
     56a:	f0 e0       	ldi	r31, 0x00	; 0
     56c:	e0 58       	subi	r30, 0x80	; 128
     56e:	fa 4f       	sbci	r31, 0xFA	; 250
     570:	20 83       	st	Z, r18
  if (++uart0_txbuf_end>=UART0_TXBUF_SIZE) {
     572:	8f 5f       	subi	r24, 0xFF	; 255
     574:	80 93 4a 06 	sts	0x064A, r24
     578:	88 3c       	cpi	r24, 0xC8	; 200
     57a:	10 f0       	brcs	.+4      	; 0x580 <uart0_putchar+0x20>
    uart0_txbuf_end=0;
     57c:	10 92 4a 06 	sts	0x064A, r1
  }
  if (uart0_txbuf_end==uart0_txbuf_begin) {
     580:	90 91 4a 06 	lds	r25, 0x064A
     584:	80 91 4d 05 	lds	r24, 0x054D
     588:	98 17       	cp	r25, r24
     58a:	19 f4       	brne	.+6      	; 0x592 <uart0_putchar+0x32>
    uart0_txbuf_end=UART0_TXBUF_SIZE;
     58c:	88 ec       	ldi	r24, 0xC8	; 200
     58e:	80 93 4a 06 	sts	0x064A, r24
  }
  // reenable transmit register empty interrupt
  UCSR0B |= _BV(UDRIE0);
     592:	55 9a       	sbi	0x0a, 5	; 10
  sei();
     594:	78 94       	sei
  return c;
}
     596:	82 2f       	mov	r24, r18
     598:	08 95       	ret

0000059a <uart0_enable>:
  return c;
}


void uart0_enable() {
  UCSR0B = _BV(RXCIE0) + _BV(UDRIE0) + _BV(RXEN0) + _BV(TXEN0);
     59a:	88 eb       	ldi	r24, 0xB8	; 184
     59c:	8a b9       	out	0x0a, r24	; 10
}
     59e:	08 95       	ret

000005a0 <uart0_disable>:


void uart0_disable() {
  UCSR0B = 0;
     5a0:	1a b8       	out	0x0a, r1	; 10
}
     5a2:	08 95       	ret

000005a4 <__vector_19>:
  }
  niboCom_uartInterrupt();
}


ISR(USART0_UDRE_vect) {
     5a4:	1f 92       	push	r1
     5a6:	0f 92       	push	r0
     5a8:	0f b6       	in	r0, 0x3f	; 63
     5aa:	0f 92       	push	r0
     5ac:	0b b6       	in	r0, 0x3b	; 59
     5ae:	0f 92       	push	r0
     5b0:	11 24       	eor	r1, r1
     5b2:	8f 93       	push	r24
     5b4:	9f 93       	push	r25
     5b6:	ef 93       	push	r30
     5b8:	ff 93       	push	r31

/*!
 * Liefert true wenn der Sendepuffer leer ist.
 */
static inline char uart0_txempty() {
  return uart0_txbuf_begin==uart0_txbuf_end;
     5ba:	80 91 4d 05 	lds	r24, 0x054D
     5be:	90 91 4a 06 	lds	r25, 0x064A
  if (!uart0_txempty()) {
     5c2:	89 17       	cp	r24, r25
     5c4:	91 f0       	breq	.+36     	; 0x5ea <__vector_19+0x46>
  return c;
}


static char uart0_tx_getchar() {
  uint8_t result = uart0_txbuf[uart0_txbuf_begin];
     5c6:	e8 2f       	mov	r30, r24
     5c8:	f0 e0       	ldi	r31, 0x00	; 0
     5ca:	e0 58       	subi	r30, 0x80	; 128
     5cc:	fa 4f       	sbci	r31, 0xFA	; 250
     5ce:	e0 81       	ld	r30, Z
  if (uart0_txbuf_end==UART0_TXBUF_SIZE) {
     5d0:	98 3c       	cpi	r25, 0xC8	; 200
     5d2:	11 f4       	brne	.+4      	; 0x5d8 <__vector_19+0x34>
    uart0_txbuf_end=uart0_txbuf_begin;
     5d4:	80 93 4a 06 	sts	0x064A, r24
  }
  
  if (++uart0_txbuf_begin>=UART0_TXBUF_SIZE) {
     5d8:	8f 5f       	subi	r24, 0xFF	; 255
     5da:	80 93 4d 05 	sts	0x054D, r24
     5de:	88 3c       	cpi	r24, 0xC8	; 200
     5e0:	10 f0       	brcs	.+4      	; 0x5e6 <__vector_19+0x42>
    uart0_txbuf_begin=0;
     5e2:	10 92 4d 05 	sts	0x054D, r1
}


ISR(USART0_UDRE_vect) {
  if (!uart0_txempty()) {
    UDR0 = uart0_tx_getchar();
     5e6:	ec b9       	out	0x0c, r30	; 12
     5e8:	01 c0       	rjmp	.+2      	; 0x5ec <__vector_19+0x48>
  } else {
    UCSR0B &= ~_BV(UDRIE0);
     5ea:	55 98       	cbi	0x0a, 5	; 10
  }
}
     5ec:	ff 91       	pop	r31
     5ee:	ef 91       	pop	r30
     5f0:	9f 91       	pop	r25
     5f2:	8f 91       	pop	r24
     5f4:	0f 90       	pop	r0
     5f6:	0b be       	out	0x3b, r0	; 59
     5f8:	0f 90       	pop	r0
     5fa:	0f be       	out	0x3f, r0	; 63
     5fc:	0f 90       	pop	r0
     5fe:	1f 90       	pop	r1
     600:	18 95       	reti

00000602 <__vector_18>:
void uart0_disable() {
  UCSR0B = 0;
}


ISR(USART0_RX_vect) {
     602:	1f 92       	push	r1
     604:	0f 92       	push	r0
     606:	0f b6       	in	r0, 0x3f	; 63
     608:	0f 92       	push	r0
     60a:	0b b6       	in	r0, 0x3b	; 59
     60c:	0f 92       	push	r0
     60e:	11 24       	eor	r1, r1
     610:	2f 93       	push	r18
     612:	3f 93       	push	r19
     614:	4f 93       	push	r20
     616:	5f 93       	push	r21
     618:	6f 93       	push	r22
     61a:	7f 93       	push	r23
     61c:	8f 93       	push	r24
     61e:	9f 93       	push	r25
     620:	af 93       	push	r26
     622:	bf 93       	push	r27
     624:	ef 93       	push	r30
     626:	ff 93       	push	r31
  uint8_t c = UDR0;
     628:	9c b1       	in	r25, 0x0c	; 12

/*!
 * Liefert true wenn der Empfangspuffer voll ist.
 */
static inline char uart0_rxfull() {
  return uart0_rxbuf_end==UART0_RXBUF_SIZE;
     62a:	80 91 49 06 	lds	r24, 0x0649
  if (!uart0_rxfull()) {
     62e:	82 33       	cpi	r24, 0x32	; 50
     630:	a9 f0       	breq	.+42     	; 0x65c <__vector_18+0x5a>
  return result;
}


static char uart0_rx_putchar(char c) {
  uart0_rxbuf[uart0_rxbuf_end] = c;
     632:	e8 2f       	mov	r30, r24
     634:	f0 e0       	ldi	r31, 0x00	; 0
     636:	e2 5b       	subi	r30, 0xB2	; 178
     638:	fa 4f       	sbci	r31, 0xFA	; 250
     63a:	90 83       	st	Z, r25
  if (++uart0_rxbuf_end>=UART0_RXBUF_SIZE) {
     63c:	8f 5f       	subi	r24, 0xFF	; 255
     63e:	80 93 49 06 	sts	0x0649, r24
     642:	82 33       	cpi	r24, 0x32	; 50
     644:	10 f0       	brcs	.+4      	; 0x64a <__vector_18+0x48>
    uart0_rxbuf_end=0;
     646:	10 92 49 06 	sts	0x0649, r1
  }
  if (uart0_rxbuf_end==uart0_rxbuf_begin) {
     64a:	90 91 49 06 	lds	r25, 0x0649
     64e:	80 91 48 06 	lds	r24, 0x0648
     652:	98 17       	cp	r25, r24
     654:	19 f4       	brne	.+6      	; 0x65c <__vector_18+0x5a>
    uart0_rxbuf_end=UART0_RXBUF_SIZE;
     656:	82 e3       	ldi	r24, 0x32	; 50
     658:	80 93 49 06 	sts	0x0649, r24
ISR(USART0_RX_vect) {
  uint8_t c = UDR0;
  if (!uart0_rxfull()) {
    uart0_rx_putchar(c);
  }
  niboCom_uartInterrupt();
     65c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <niboCom_uartInterrupt>
}
     660:	ff 91       	pop	r31
     662:	ef 91       	pop	r30
     664:	bf 91       	pop	r27
     666:	af 91       	pop	r26
     668:	9f 91       	pop	r25
     66a:	8f 91       	pop	r24
     66c:	7f 91       	pop	r23
     66e:	6f 91       	pop	r22
     670:	5f 91       	pop	r21
     672:	4f 91       	pop	r20
     674:	3f 91       	pop	r19
     676:	2f 91       	pop	r18
     678:	0f 90       	pop	r0
     67a:	0b be       	out	0x3b, r0	; 59
     67c:	0f 90       	pop	r0
     67e:	0f be       	out	0x3f, r0	; 63
     680:	0f 90       	pop	r0
     682:	1f 90       	pop	r1
     684:	18 95       	reti

00000686 <niboStartScout>:
	return points;
}

void niboStartScout(int winkel){

	nds3_move(winkel);
     686:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <nds3_move>
}
     68a:	08 95       	ret

0000068c <checkObjektsOnDistance>:
}

/**
 * This fuctions returns the distance for the selected deegres
 */
uint8_t *checkObjektsOnDistance(uint8_t degrees) {
     68c:	0f 93       	push	r16
     68e:	1f 93       	push	r17
     690:	08 2f       	mov	r16, r24
     692:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t winkel = 0;
	static uint8_t points[180] = {};

	for(winkel = 0; winkel < 180; winkel = winkel + degrees){

		nds3_move(winkel);
     694:	81 2f       	mov	r24, r17
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <nds3_move>

		//saving time for the movement of the servoengine, more for the first move
		if(winkel == 0){
     69c:	11 23       	and	r17, r17
     69e:	19 f4       	brne	.+6      	; 0x6a6 <checkObjektsOnDistance+0x1a>
			delay(300);
     6a0:	8c e2       	ldi	r24, 0x2C	; 44
     6a2:	91 e0       	ldi	r25, 0x01	; 1
     6a4:	02 c0       	rjmp	.+4      	; 0x6aa <checkObjektsOnDistance+0x1e>
		}else {
			delay(100);
     6a6:	84 e6       	ldi	r24, 0x64	; 100
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
		}

		//updating the coprozessor, for the realtime value of the sensor
		copro_update();
     6ae:	0e 94 96 10 	call	0x212c	; 0x212c <copro_update>
		points[winkel / degrees] = nds3_get_dist();
     6b2:	0e 94 1d 1b 	call	0x363a	; 0x363a <nds3_get_dist>
     6b6:	28 2f       	mov	r18, r24
     6b8:	81 2f       	mov	r24, r17
     6ba:	60 2f       	mov	r22, r16
     6bc:	0e 94 82 1b 	call	0x3704	; 0x3704 <__udivmodqi4>
     6c0:	e8 2f       	mov	r30, r24
     6c2:	f0 e0       	ldi	r31, 0x00	; 0
     6c4:	e7 57       	subi	r30, 0x77	; 119
     6c6:	fb 4f       	sbci	r31, 0xFB	; 251
     6c8:	20 83       	st	Z, r18
uint8_t *checkObjektsOnDistance(uint8_t degrees) {

	uint8_t winkel = 0;
	static uint8_t points[180] = {};

	for(winkel = 0; winkel < 180; winkel = winkel + degrees){
     6ca:	10 0f       	add	r17, r16
     6cc:	14 3b       	cpi	r17, 0xB4	; 180
     6ce:	10 f3       	brcs	.-60     	; 0x694 <checkObjektsOnDistance+0x8>
	return points;
}

void niboStartScout(int winkel){

	nds3_move(winkel);
     6d0:	8a e5       	ldi	r24, 0x5A	; 90
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <nds3_move>
		points[winkel / degrees] = nds3_get_dist();
	}

	niboStartScout(90);
	return points;
}
     6d8:	89 e8       	ldi	r24, 0x89	; 137
     6da:	94 e0       	ldi	r25, 0x04	; 4
     6dc:	1f 91       	pop	r17
     6de:	0f 91       	pop	r16
     6e0:	08 95       	ret

000006e2 <checkDirectionsOnDistance>:
	bool mid = false;
	bool right = false;


	//einmal umschauen
	if (winkel <= 180 - ndsMovement) {
     6e2:	24 eb       	ldi	r18, 0xB4	; 180
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	28 1b       	sub	r18, r24
     6e8:	31 09       	sbc	r19, r1
     6ea:	37 fd       	sbrc	r19, 7
     6ec:	04 c0       	rjmp	.+8      	; 0x6f6 <checkDirectionsOnDistance+0x14>
		// move NDS3 sensor, value in degrees
		nds3_move(winkel);
     6ee:	80 e0       	ldi	r24, 0x00	; 0
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <nds3_move>
		mid = false;
		right = false;
	}

	//aktuallisierung des coprozessors
	copro_update();
     6f6:	0e 94 96 10 	call	0x212c	; 0x212c <copro_update>
	distance = nds3_get_dist();
     6fa:	0e 94 1d 1b 	call	0x363a	; 0x363a <nds3_get_dist>
	if (winkel < 180 && winkel > 95 && distance < ndsAufnahmeAbstand) {
		right = true;
	}

	return richtung;
}
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	08 95       	ret

00000702 <initBot>:

}

void initBot() {

	bot_init();
     702:	0e 94 67 12 	call	0x24ce	; 0x24ce <bot_init>
	sei();
     706:	78 94       	sei
	spi_init();
     708:	0e 94 1b 0a 	call	0x1436	; 0x1436 <spi_init>

	niboCom_init();
     70c:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <niboCom_init>
	advDisplay_init();
     710:	0e 94 6b 07 	call	0xed6	; 0xed6 <advDisplay_init>
	sound_init();
     714:	0e 94 cc 12 	call	0x2598	; 0x2598 <sound_init>

	//Distanzmessung einschalten
	copro_ir_startMeasure();
     718:	0e 94 e4 11 	call	0x23c8	; 0x23c8 <copro_ir_startMeasure>

	// initialize i2c for communication with nds3
	i2c_init();
     71c:	0e 94 62 19 	call	0x32c4	; 0x32c4 <i2c_init>
	leds_init();
     720:	0e 94 73 12 	call	0x24e6	; 0x24e6 <leds_init>

	//Timer-interrupt init
	// set Prescaler 1024
	TCCR2 = ((1<<CS22)|(0<<CS21)|(1<<CS20));
     724:	85 e0       	ldi	r24, 0x05	; 5
     726:	85 bd       	out	0x25, r24	; 37
	//enable Timer-Overflow-Interrupt
	TIMSK |= (1<<TOIE2);
     728:	87 b7       	in	r24, 0x37	; 55
     72a:	80 64       	ori	r24, 0x40	; 64
     72c:	87 bf       	out	0x37, r24	; 55


	niboStartScout(90);
     72e:	8a e5       	ldi	r24, 0x5A	; 90
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	0e 94 43 03 	call	0x686	; 0x686 <niboStartScout>

	//	advDisplay_append_line("Martini!");
	//	advDisplay_append_line("Wartet auf ");
	//	advDisplay_append_line("Eingabe...");

}
     736:	08 95       	ret

00000738 <__vector_10>:

/**
 * @brief Timer2 interrupt
 */
ISR(TIMER2_OVF_vect)
{
     738:	1f 92       	push	r1
     73a:	0f 92       	push	r0
     73c:	0f b6       	in	r0, 0x3f	; 63
     73e:	0f 92       	push	r0
     740:	0b b6       	in	r0, 0x3b	; 59
     742:	0f 92       	push	r0
     744:	11 24       	eor	r1, r1
     746:	2f 93       	push	r18
     748:	3f 93       	push	r19
     74a:	4f 93       	push	r20
     74c:	5f 93       	push	r21
     74e:	6f 93       	push	r22
     750:	7f 93       	push	r23
     752:	8f 93       	push	r24
     754:	9f 93       	push	r25
     756:	af 93       	push	r26
     758:	bf 93       	push	r27
     75a:	ef 93       	push	r30
     75c:	ff 93       	push	r31
	checkDistance();
     75e:	0e 94 40 08 	call	0x1080	; 0x1080 <checkDistance>

	//2sec
	if((voltageCheck++) >= 120){
     762:	80 91 3d 05 	lds	r24, 0x053D
     766:	90 91 3e 05 	lds	r25, 0x053E
     76a:	01 96       	adiw	r24, 0x01	; 1
     76c:	90 93 3e 05 	sts	0x053E, r25
     770:	80 93 3d 05 	sts	0x053D, r24
     774:	01 97       	sbiw	r24, 0x01	; 1
     776:	88 37       	cpi	r24, 0x78	; 120
     778:	91 05       	cpc	r25, r1
     77a:	44 f1       	brlt	.+80     	; 0x7cc <__vector_10+0x94>
		voltageCheck = 0;
     77c:	10 92 3e 05 	sts	0x053E, r1
     780:	10 92 3d 05 	sts	0x053D, r1
		double volt = 0;
		//get currente voltage value
		bot_update();
     784:	0e 94 5f 12 	call	0x24be	; 0x24be <bot_update>
		//calculate the voltage from adc-value
		volt = 0.0166 * bot_supply -1.19;
		if( volt <= 8.5){
     788:	60 91 f5 06 	lds	r22, 0x06F5
     78c:	70 91 f6 06 	lds	r23, 0x06F6
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e 94 4b 14 	call	0x2896	; 0x2896 <__floatunsisf>
     798:	29 eb       	ldi	r18, 0xB9	; 185
     79a:	3c ef       	ldi	r19, 0xFC	; 252
     79c:	47 e8       	ldi	r20, 0x87	; 135
     79e:	5c e3       	ldi	r21, 0x3C	; 60
     7a0:	0e 94 fd 14 	call	0x29fa	; 0x29fa <__mulsf3>
     7a4:	2c ee       	ldi	r18, 0xEC	; 236
     7a6:	31 e5       	ldi	r19, 0x51	; 81
     7a8:	48 e9       	ldi	r20, 0x98	; 152
     7aa:	5f e3       	ldi	r21, 0x3F	; 63
     7ac:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__subsf3>
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	48 e0       	ldi	r20, 0x08	; 8
     7b6:	51 e4       	ldi	r21, 0x41	; 65
     7b8:	0e 94 47 14 	call	0x288e	; 0x288e <__cmpsf2>
     7bc:	18 16       	cp	r1, r24
     7be:	34 f0       	brlt	.+12     	; 0x7cc <__vector_10+0x94>
			tone(3000,100);
     7c0:	88 eb       	ldi	r24, 0xB8	; 184
     7c2:	9b e0       	ldi	r25, 0x0B	; 11
     7c4:	64 e6       	ldi	r22, 0x64	; 100
     7c6:	70 e0       	ldi	r23, 0x00	; 0
     7c8:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <tone>
		}
	}

}
     7cc:	ff 91       	pop	r31
     7ce:	ef 91       	pop	r30
     7d0:	bf 91       	pop	r27
     7d2:	af 91       	pop	r26
     7d4:	9f 91       	pop	r25
     7d6:	8f 91       	pop	r24
     7d8:	7f 91       	pop	r23
     7da:	6f 91       	pop	r22
     7dc:	5f 91       	pop	r21
     7de:	4f 91       	pop	r20
     7e0:	3f 91       	pop	r19
     7e2:	2f 91       	pop	r18
     7e4:	0f 90       	pop	r0
     7e6:	0b be       	out	0x3b, r0	; 59
     7e8:	0f 90       	pop	r0
     7ea:	0f be       	out	0x3f, r0	; 63
     7ec:	0f 90       	pop	r0
     7ee:	1f 90       	pop	r1
     7f0:	18 95       	reti

000007f2 <autoMode>:

#include "main.h"

int voltageCheck = 0;
void autoMode()
{
     7f2:	ef 92       	push	r14
     7f4:	ff 92       	push	r15
     7f6:	0f 93       	push	r16
     7f8:	df 93       	push	r29
     7fa:	cf 93       	push	r28
     7fc:	cd b7       	in	r28, 0x3d	; 61
     7fe:	de b7       	in	r29, 0x3e	; 62
     800:	64 97       	sbiw	r28, 0x14	; 20
     802:	0f b6       	in	r0, 0x3f	; 63
     804:	f8 94       	cli
     806:	de bf       	out	0x3e, r29	; 62
     808:	0f be       	out	0x3f, r0	; 63
     80a:	cd bf       	out	0x3d, r28	; 61
    uint8_t driveStatus = drive_status_all_blocked;
    drive(20);
     80c:	84 e1       	ldi	r24, 0x14	; 20
     80e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <drive>
    driveStatus = checkDriveDirection();
     812:	0e 94 e5 07 	call	0xfca	; 0xfca <checkDriveDirection>
     816:	08 2f       	mov	r16, r24
    char output[20] = "";
     818:	19 82       	std	Y+1, r1	; 0x01
     81a:	1a 82       	std	Y+2, r1	; 0x02
     81c:	1b 82       	std	Y+3, r1	; 0x03
     81e:	1c 82       	std	Y+4, r1	; 0x04
     820:	fe 01       	movw	r30, r28
     822:	35 96       	adiw	r30, 0x05	; 5
     824:	80 e1       	ldi	r24, 0x10	; 16
     826:	df 01       	movw	r26, r30
     828:	1d 92       	st	X+, r1
     82a:	8a 95       	dec	r24
     82c:	e9 f7       	brne	.-6      	; 0x828 <autoMode+0x36>
    sprintf(output, "drive: : %i", driveStatus);
     82e:	00 d0       	rcall	.+0      	; 0x830 <autoMode+0x3e>
     830:	00 d0       	rcall	.+0      	; 0x832 <autoMode+0x40>
     832:	00 d0       	rcall	.+0      	; 0x834 <autoMode+0x42>
     834:	ed b7       	in	r30, 0x3d	; 61
     836:	fe b7       	in	r31, 0x3e	; 62
     838:	31 96       	adiw	r30, 0x01	; 1
     83a:	7e 01       	movw	r14, r28
     83c:	08 94       	sec
     83e:	e1 1c       	adc	r14, r1
     840:	f1 1c       	adc	r15, r1
     842:	ad b7       	in	r26, 0x3d	; 61
     844:	be b7       	in	r27, 0x3e	; 62
     846:	12 96       	adiw	r26, 0x02	; 2
     848:	fc 92       	st	X, r15
     84a:	ee 92       	st	-X, r14
     84c:	11 97       	sbiw	r26, 0x01	; 1
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	91 e0       	ldi	r25, 0x01	; 1
     852:	93 83       	std	Z+3, r25	; 0x03
     854:	82 83       	std	Z+2, r24	; 0x02
     856:	04 83       	std	Z+4, r16	; 0x04
     858:	15 82       	std	Z+5, r1	; 0x05
     85a:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>
    advDisplay_append_line(output);
     85e:	8d b7       	in	r24, 0x3d	; 61
     860:	9e b7       	in	r25, 0x3e	; 62
     862:	06 96       	adiw	r24, 0x06	; 6
     864:	0f b6       	in	r0, 0x3f	; 63
     866:	f8 94       	cli
     868:	9e bf       	out	0x3e, r25	; 62
     86a:	0f be       	out	0x3f, r0	; 63
     86c:	8d bf       	out	0x3d, r24	; 61
     86e:	c7 01       	movw	r24, r14
     870:	0e 94 13 07 	call	0xe26	; 0xe26 <advDisplay_append_line>
    if(driveStatus == drive_status_right_free){
     874:	03 30       	cpi	r16, 0x03	; 3
     876:	a1 f0       	breq	.+40     	; 0x8a0 <autoMode+0xae>
				turn_halfRight();
			}
			else if(driveStatus == drive_status_left_free){
     878:	04 30       	cpi	r16, 0x04	; 4
     87a:	b9 f0       	breq	.+46     	; 0x8aa <autoMode+0xb8>
				turn_halfLeft();
			}
			else if(driveStatus == drive_status_all_blocked){
     87c:	05 30       	cpi	r16, 0x05	; 5
     87e:	b9 f4       	brne	.+46     	; 0x8ae <autoMode+0xbc>
				while(1){
					copro_setTargetRel(-10, -10, 10);
     880:	86 ef       	ldi	r24, 0xF6	; 246
     882:	9f ef       	ldi	r25, 0xFF	; 255
     884:	66 ef       	ldi	r22, 0xF6	; 246
     886:	7f ef       	ldi	r23, 0xFF	; 255
     888:	4a e0       	ldi	r20, 0x0A	; 10
     88a:	50 e0       	ldi	r21, 0x00	; 0
     88c:	0e 94 7e 11 	call	0x22fc	; 0x22fc <copro_setTargetRel>
					delay(1000);
     890:	88 ee       	ldi	r24, 0xE8	; 232
     892:	93 e0       	ldi	r25, 0x03	; 3
     894:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
					driveStatus = checkDriveDirection();
     898:	0e 94 e5 07 	call	0xfca	; 0xfca <checkDriveDirection>

					if(driveStatus == drive_status_right_free){
     89c:	83 30       	cpi	r24, 0x03	; 3
     89e:	19 f4       	brne	.+6      	; 0x8a6 <autoMode+0xb4>
						turn_halfRight();
     8a0:	0e 94 9a 08 	call	0x1134	; 0x1134 <turn_halfRight>
     8a4:	04 c0       	rjmp	.+8      	; 0x8ae <autoMode+0xbc>
						break;
					}
					else if(driveStatus == drive_status_left_free){
     8a6:	84 30       	cpi	r24, 0x04	; 4
     8a8:	59 f7       	brne	.-42     	; 0x880 <autoMode+0x8e>
						turn_halfLeft();
     8aa:	0e 94 b6 08 	call	0x116c	; 0x116c <turn_halfLeft>
						break;
					}
				}
			}
}
     8ae:	64 96       	adiw	r28, 0x14	; 20
     8b0:	0f b6       	in	r0, 0x3f	; 63
     8b2:	f8 94       	cli
     8b4:	de bf       	out	0x3e, r29	; 62
     8b6:	0f be       	out	0x3f, r0	; 63
     8b8:	cd bf       	out	0x3d, r28	; 61
     8ba:	cf 91       	pop	r28
     8bc:	df 91       	pop	r29
     8be:	0f 91       	pop	r16
     8c0:	ff 90       	pop	r15
     8c2:	ef 90       	pop	r14
     8c4:	08 95       	ret

000008c6 <main>:
	//	advDisplay_append_line("Wartet auf ");
	//	advDisplay_append_line("Eingabe...");

}

int main(void) {
     8c6:	0f 93       	push	r16
     8c8:	1f 93       	push	r17
	uint8_t mode = MODE_MAN;
	uint8_t cmd = niboCom_cmd_none;

	uint8_t *nds_scan;

	initBot();
     8ca:	0e 94 81 03 	call	0x702	; 0x702 <initBot>
	copro_stop();
     8ce:	0e 94 32 11 	call	0x2264	; 0x2264 <copro_stop>



	while (1) {

		cmd = niboCom_getCMD();
     8d2:	0e 94 bf 01 	call	0x37e	; 0x37e <niboCom_getCMD>
     8d6:	18 2f       	mov	r17, r24
		advDisplay_printVoltage();
     8d8:	0e 94 7a 07 	call	0xef4	; 0xef4 <advDisplay_printVoltage>

		if(cmd == niboCom_cmd_nibo_auto){
     8dc:	11 30       	cpi	r17, 0x01	; 1
     8de:	29 f4       	brne	.+10     	; 0x8ea <main+0x24>
			mode = MODE_AUTO;
			advDisplay_append_line("-> Automatik");
     8e0:	8c e0       	ldi	r24, 0x0C	; 12
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	0e 94 13 07 	call	0xe26	; 0xe26 <advDisplay_append_line>
     8e8:	0c c0       	rjmp	.+24     	; 0x902 <main+0x3c>
		}
		else if((PIND & (1 << PD4)) == 0){
     8ea:	84 9b       	sbis	0x10, 4	; 16
     8ec:	02 c0       	rjmp	.+4      	; 0x8f2 <main+0x2c>
     8ee:	00 e0       	ldi	r16, 0x00	; 0
     8f0:	31 c0       	rjmp	.+98     	; 0x954 <main+0x8e>
			mode = MODE_AUTO;
			advDisplay_append_line("-> Automatik");
     8f2:	8c e0       	ldi	r24, 0x0C	; 12
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	0e 94 13 07 	call	0xe26	; 0xe26 <advDisplay_append_line>
			delay(500);
     8fa:	84 ef       	ldi	r24, 0xF4	; 244
     8fc:	91 e0       	ldi	r25, 0x01	; 1
     8fe:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
     902:	01 e0       	ldi	r16, 0x01	; 1
     904:	27 c0       	rjmp	.+78     	; 0x954 <main+0x8e>
		}

		//auto mode
		while(mode == MODE_AUTO){

			cmd = niboCom_getCMD();
     906:	0e 94 bf 01 	call	0x37e	; 0x37e <niboCom_getCMD>
     90a:	18 2f       	mov	r17, r24
			advDisplay_printVoltage();
     90c:	0e 94 7a 07 	call	0xef4	; 0xef4 <advDisplay_printVoltage>

			if(cmd == niboCom_cmd_nibo_man){
     910:	12 30       	cpi	r17, 0x02	; 2
     912:	51 f4       	brne	.+20     	; 0x928 <main+0x62>
				mode = MODE_MAN;
				advDisplay_append_line("-> Manuell");
     914:	89 e1       	ldi	r24, 0x19	; 25
     916:	91 e0       	ldi	r25, 0x01	; 1
     918:	0e 94 13 07 	call	0xe26	; 0xe26 <advDisplay_append_line>
				delay(500);
     91c:	84 ef       	ldi	r24, 0xF4	; 244
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
     924:	00 e0       	ldi	r16, 0x00	; 0
     926:	14 c0       	rjmp	.+40     	; 0x950 <main+0x8a>
			}
			else if((PIND & (1 << PD4)) == 0){
     928:	84 99       	sbic	0x10, 4	; 16
     92a:	09 c0       	rjmp	.+18     	; 0x93e <main+0x78>
				mode = MODE_MAN;
				advDisplay_append_line("-> Manuell");
     92c:	89 e1       	ldi	r24, 0x19	; 25
     92e:	91 e0       	ldi	r25, 0x01	; 1
     930:	0e 94 13 07 	call	0xe26	; 0xe26 <advDisplay_append_line>
				delay(500);
     934:	84 ef       	ldi	r24, 0xF4	; 244
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
     93c:	00 e0       	ldi	r16, 0x00	; 0
			}

			if(cmd == niboCom_cmd_nds_distance){
     93e:	14 30       	cpi	r17, 0x04	; 4
     940:	39 f4       	brne	.+14     	; 0x950 <main+0x8a>
				nds_scan = checkObjektsOnDistance(NDS_SCAN_DEG);
     942:	82 e0       	ldi	r24, 0x02	; 2
     944:	0e 94 46 03 	call	0x68c	; 0x68c <checkObjektsOnDistance>
     948:	bc 01       	movw	r22, r24
				niboCom_putNDSDistance((180/NDS_SCAN_DEG)+1,nds_scan);
     94a:	8b e5       	ldi	r24, 0x5B	; 91
     94c:	0e 94 4c 02 	call	0x498	; 0x498 <niboCom_putNDSDistance>
			}
				autoMode();
     950:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <autoMode>
			advDisplay_append_line("-> Automatik");
			delay(500);
		}

		//auto mode
		while(mode == MODE_AUTO){
     954:	01 30       	cpi	r16, 0x01	; 1
     956:	b9 f2       	breq	.-82     	; 0x906 <main+0x40>

		}//end auto mode

		//command execution manual mode

		if(cmd == niboCom_cmd_nds_distance){
     958:	14 30       	cpi	r17, 0x04	; 4
     95a:	41 f4       	brne	.+16     	; 0x96c <main+0xa6>
			nds_scan = checkObjektsOnDistance(NDS_SCAN_DEG);
     95c:	82 e0       	ldi	r24, 0x02	; 2
     95e:	0e 94 46 03 	call	0x68c	; 0x68c <checkObjektsOnDistance>
     962:	bc 01       	movw	r22, r24
			niboCom_putNDSDistance((180/NDS_SCAN_DEG)+1,nds_scan);
     964:	8b e5       	ldi	r24, 0x5B	; 91
     966:	0e 94 4c 02 	call	0x498	; 0x498 <niboCom_putNDSDistance>
     96a:	b3 cf       	rjmp	.-154    	; 0x8d2 <main+0xc>
		}
		else if(cmd == niboCom_cmd_nibo_drive){
     96c:	16 30       	cpi	r17, 0x06	; 6
     96e:	b9 f4       	brne	.+46     	; 0x99e <main+0xd8>
			uint8_t driveStatus = drive_status_front_free;
			while(driveStatus == drive_status_front_free){
				cmd = niboCom_getCMD();
     970:	0e 94 bf 01 	call	0x37e	; 0x37e <niboCom_getCMD>
     974:	18 2f       	mov	r17, r24
				if(cmd != niboCom_cmd_nibo_stop){
     976:	87 30       	cpi	r24, 0x07	; 7
     978:	09 f4       	brne	.+2      	; 0x97c <main+0xb6>
     97a:	a9 cf       	rjmp	.-174    	; 0x8ce <main+0x8>
					driveStatus = drive(20);
     97c:	84 e1       	ldi	r24, 0x14	; 20
     97e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <drive>
     982:	08 2f       	mov	r16, r24
				}
				if(cmd == niboCom_cmd_nds_distance){
     984:	14 30       	cpi	r17, 0x04	; 4
     986:	09 f0       	breq	.+2      	; 0x98a <main+0xc4>
     988:	a2 cf       	rjmp	.-188    	; 0x8ce <main+0x8>
					nds_scan = checkObjektsOnDistance(NDS_SCAN_DEG);
     98a:	82 e0       	ldi	r24, 0x02	; 2
     98c:	0e 94 46 03 	call	0x68c	; 0x68c <checkObjektsOnDistance>
     990:	bc 01       	movw	r22, r24
					niboCom_putNDSDistance((180/NDS_SCAN_DEG)+1,nds_scan);
     992:	8b e5       	ldi	r24, 0x5B	; 91
     994:	0e 94 4c 02 	call	0x498	; 0x498 <niboCom_putNDSDistance>
			nds_scan = checkObjektsOnDistance(NDS_SCAN_DEG);
			niboCom_putNDSDistance((180/NDS_SCAN_DEG)+1,nds_scan);
		}
		else if(cmd == niboCom_cmd_nibo_drive){
			uint8_t driveStatus = drive_status_front_free;
			while(driveStatus == drive_status_front_free){
     998:	01 30       	cpi	r16, 0x01	; 1
     99a:	51 f3       	breq	.-44     	; 0x970 <main+0xaa>
     99c:	9a cf       	rjmp	.-204    	; 0x8d2 <main+0xc>
					break;
				}
			}

		}
		else if(cmd == niboCom_cmd_nibo_left){
     99e:	1c 30       	cpi	r17, 0x0C	; 12
     9a0:	19 f4       	brne	.+6      	; 0x9a8 <main+0xe2>
			turn_left();
     9a2:	0e 94 c4 08 	call	0x1188	; 0x1188 <turn_left>
     9a6:	95 cf       	rjmp	.-214    	; 0x8d2 <main+0xc>
		}
		else if(cmd == niboCom_cmd_nibo_halfLeft){
     9a8:	1b 30       	cpi	r17, 0x0B	; 11
     9aa:	19 f4       	brne	.+6      	; 0x9b2 <main+0xec>
			turn_halfLeft();
     9ac:	0e 94 b6 08 	call	0x116c	; 0x116c <turn_halfLeft>
     9b0:	90 cf       	rjmp	.-224    	; 0x8d2 <main+0xc>
		}
		else if(cmd == niboCom_cmd_nibo_halfRight){
     9b2:	1d 30       	cpi	r17, 0x0D	; 13
     9b4:	19 f4       	brne	.+6      	; 0x9bc <main+0xf6>
			turn_halfRight();
     9b6:	0e 94 9a 08 	call	0x1134	; 0x1134 <turn_halfRight>
     9ba:	8b cf       	rjmp	.-234    	; 0x8d2 <main+0xc>
		}
		else if(cmd == niboCom_cmd_nibo_right){
     9bc:	1e 30       	cpi	r17, 0x0E	; 14
     9be:	19 f4       	brne	.+6      	; 0x9c6 <main+0x100>
			turn_right();
     9c0:	0e 94 a8 08 	call	0x1150	; 0x1150 <turn_right>
     9c4:	86 cf       	rjmp	.-244    	; 0x8d2 <main+0xc>
		}
		else if(cmd == niboCom_cmd_nibo_turn){
     9c6:	1a 30       	cpi	r17, 0x0A	; 10
     9c8:	09 f0       	breq	.+2      	; 0x9cc <main+0x106>
     9ca:	83 cf       	rjmp	.-250    	; 0x8d2 <main+0xc>
			turn_around();
     9cc:	0e 94 8c 08 	call	0x1118	; 0x1118 <turn_around>
     9d0:	80 cf       	rjmp	.-256    	; 0x8d2 <main+0xc>

000009d2 <tone>:
 * Spielt einen Ton ab
 * Vor der ersten Benutzung einmal sound_init() aufrufen (deklariert in nibo/sound.h)
 * frequency ist die Frequenz des Tons in Hz (nicht hoeher als 5000 uebergeben!)
 * duration gibt die Wiedergabedauer des Tons an
 */
int tone(int frequency, int duration) {
     9d2:	0f 93       	push	r16
     9d4:	1f 93       	push	r17
     9d6:	8b 01       	movw	r16, r22
	int interval = (50000 / frequency);
     9d8:	9c 01       	movw	r18, r24
     9da:	44 27       	eor	r20, r20
     9dc:	37 fd       	sbrc	r19, 7
     9de:	40 95       	com	r20
     9e0:	54 2f       	mov	r21, r20
     9e2:	60 e5       	ldi	r22, 0x50	; 80
     9e4:	73 ec       	ldi	r23, 0xC3	; 195
     9e6:	80 e0       	ldi	r24, 0x00	; 0
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	0e 94 c3 1b 	call	0x3786	; 0x3786 <__divmodsi4>
	duration = duration * 100;
     9ee:	84 e6       	ldi	r24, 0x64	; 100
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	08 9f       	mul	r16, r24
     9f4:	b0 01       	movw	r22, r0
     9f6:	09 9f       	mul	r16, r25
     9f8:	70 0d       	add	r23, r0
     9fa:	18 9f       	mul	r17, r24
     9fc:	70 0d       	add	r23, r0
     9fe:	11 24       	eor	r1, r1
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     a00:	a5 e3       	ldi	r26, 0x35	; 53
     a02:	23 c0       	rjmp	.+70     	; 0xa4a <tone+0x78>

	while (duration) {
		int i = interval;
		clear_output_bit(IO_AUDIO);
     a04:	c4 98       	cbi	0x18, 4	; 24
     a06:	fb 01       	movw	r30, r22
     a08:	06 c0       	rjmp	.+12     	; 0xa16 <tone+0x44>
		while (duration && i) {
			duration--;
     a0a:	31 97       	sbiw	r30, 0x01	; 1
     a0c:	8a 2f       	mov	r24, r26
     a0e:	8a 95       	dec	r24
     a10:	f1 f7       	brne	.-4      	; 0xa0e <tone+0x3c>
	duration = duration * 100;

	while (duration) {
		int i = interval;
		clear_output_bit(IO_AUDIO);
		while (duration && i) {
     a12:	30 97       	sbiw	r30, 0x00	; 0
     a14:	41 f0       	breq	.+16     	; 0xa26 <tone+0x54>
 * Spielt einen Ton ab
 * Vor der ersten Benutzung einmal sound_init() aufrufen (deklariert in nibo/sound.h)
 * frequency ist die Frequenz des Tons in Hz (nicht hoeher als 5000 uebergeben!)
 * duration gibt die Wiedergabedauer des Tons an
 */
int tone(int frequency, int duration) {
     a16:	a9 01       	movw	r20, r18
	duration = duration * 100;

	while (duration) {
		int i = interval;
		clear_output_bit(IO_AUDIO);
		while (duration && i) {
     a18:	c9 01       	movw	r24, r18
     a1a:	86 1b       	sub	r24, r22
     a1c:	97 0b       	sbc	r25, r23
     a1e:	8e 0f       	add	r24, r30
     a20:	9f 1f       	adc	r25, r31
     a22:	89 2b       	or	r24, r25
     a24:	91 f7       	brne	.-28     	; 0xa0a <tone+0x38>
			duration--;
			i--;
			delay_us(10);
		}
		i = interval;
		set_output_bit(IO_AUDIO);
     a26:	c4 9a       	sbi	0x18, 4	; 24
     a28:	bf 01       	movw	r22, r30
		while (duration && i) {
     a2a:	4e 1b       	sub	r20, r30
     a2c:	5f 0b       	sbc	r21, r31
     a2e:	05 c0       	rjmp	.+10     	; 0xa3a <tone+0x68>
			duration--;
     a30:	61 50       	subi	r22, 0x01	; 1
     a32:	70 40       	sbci	r23, 0x00	; 0
     a34:	8a 2f       	mov	r24, r26
     a36:	8a 95       	dec	r24
     a38:	f1 f7       	brne	.-4      	; 0xa36 <tone+0x64>
			i--;
			delay_us(10);
		}
		i = interval;
		set_output_bit(IO_AUDIO);
		while (duration && i) {
     a3a:	61 15       	cp	r22, r1
     a3c:	71 05       	cpc	r23, r1
     a3e:	29 f0       	breq	.+10     	; 0xa4a <tone+0x78>
     a40:	ca 01       	movw	r24, r20
     a42:	86 0f       	add	r24, r22
     a44:	97 1f       	adc	r25, r23
     a46:	89 2b       	or	r24, r25
     a48:	99 f7       	brne	.-26     	; 0xa30 <tone+0x5e>
 */
int tone(int frequency, int duration) {
	int interval = (50000 / frequency);
	duration = duration * 100;

	while (duration) {
     a4a:	61 15       	cp	r22, r1
     a4c:	71 05       	cpc	r23, r1
     a4e:	d1 f6       	brne	.-76     	; 0xa04 <tone+0x32>
		}

	}

	return 1;
}
     a50:	81 e0       	ldi	r24, 0x01	; 1
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	1f 91       	pop	r17
     a56:	0f 91       	pop	r16
     a58:	08 95       	ret

00000a5a <showPoints>:
	gfx_print_text(output);

	delay(100);
}

void showPoints(uint8_t points[], uint8_t cnt){
     a5a:	ef 92       	push	r14
     a5c:	ff 92       	push	r15
     a5e:	0f 93       	push	r16
     a60:	1f 93       	push	r17
     a62:	df 93       	push	r29
     a64:	cf 93       	push	r28
     a66:	cd b7       	in	r28, 0x3d	; 61
     a68:	de b7       	in	r29, 0x3e	; 62
     a6a:	65 97       	sbiw	r28, 0x15	; 21
     a6c:	0f b6       	in	r0, 0x3f	; 63
     a6e:	f8 94       	cli
     a70:	de bf       	out	0x3e, r29	; 62
     a72:	0f be       	out	0x3f, r0	; 63
     a74:	cd bf       	out	0x3d, r28	; 61
     a76:	7c 01       	movw	r14, r24

		char output[21] = "";
     a78:	19 82       	std	Y+1, r1	; 0x01
     a7a:	1a 82       	std	Y+2, r1	; 0x02
     a7c:	1b 82       	std	Y+3, r1	; 0x03
     a7e:	1c 82       	std	Y+4, r1	; 0x04
     a80:	fe 01       	movw	r30, r28
     a82:	35 96       	adiw	r30, 0x05	; 5
     a84:	81 e1       	ldi	r24, 0x11	; 17
     a86:	df 01       	movw	r26, r30
     a88:	1d 92       	st	X+, r1
     a8a:	8a 95       	dec	r24
     a8c:	e9 f7       	brne	.-6      	; 0xa88 <showPoints+0x2e>

		gfx_fill(0);
     a8e:	80 e0       	ldi	r24, 0x00	; 0
     a90:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <gfx_fill>

		//Anzeige der der einzelnen Schritten
		sprintf(output, "test1: %3i", points[1]);
     a94:	00 d0       	rcall	.+0      	; 0xa96 <showPoints+0x3c>
     a96:	00 d0       	rcall	.+0      	; 0xa98 <showPoints+0x3e>
     a98:	00 d0       	rcall	.+0      	; 0xa9a <showPoints+0x40>
     a9a:	ed b7       	in	r30, 0x3d	; 61
     a9c:	fe b7       	in	r31, 0x3e	; 62
     a9e:	31 96       	adiw	r30, 0x01	; 1
     aa0:	8e 01       	movw	r16, r28
     aa2:	0f 5f       	subi	r16, 0xFF	; 255
     aa4:	1f 4f       	sbci	r17, 0xFF	; 255
     aa6:	ad b7       	in	r26, 0x3d	; 61
     aa8:	be b7       	in	r27, 0x3e	; 62
     aaa:	12 96       	adiw	r26, 0x02	; 2
     aac:	1c 93       	st	X, r17
     aae:	0e 93       	st	-X, r16
     ab0:	11 97       	sbiw	r26, 0x01	; 1
     ab2:	84 e2       	ldi	r24, 0x24	; 36
     ab4:	91 e0       	ldi	r25, 0x01	; 1
     ab6:	93 83       	std	Z+3, r25	; 0x03
     ab8:	82 83       	std	Z+2, r24	; 0x02
     aba:	d7 01       	movw	r26, r14
     abc:	11 96       	adiw	r26, 0x01	; 1
     abe:	8c 91       	ld	r24, X
     ac0:	84 83       	std	Z+4, r24	; 0x04
     ac2:	15 82       	std	Z+5, r1	; 0x05
     ac4:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>
		gfx_move(0, 0);
     ac8:	8d b7       	in	r24, 0x3d	; 61
     aca:	9e b7       	in	r25, 0x3e	; 62
     acc:	06 96       	adiw	r24, 0x06	; 6
     ace:	0f b6       	in	r0, 0x3f	; 63
     ad0:	f8 94       	cli
     ad2:	9e bf       	out	0x3e, r25	; 62
     ad4:	0f be       	out	0x3f, r0	; 63
     ad6:	8d bf       	out	0x3d, r24	; 61
     ad8:	80 e0       	ldi	r24, 0x00	; 0
     ada:	60 e0       	ldi	r22, 0x00	; 0
     adc:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
		gfx_print_text(output);
     ae0:	c8 01       	movw	r24, r16
     ae2:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>

}
     ae6:	65 96       	adiw	r28, 0x15	; 21
     ae8:	0f b6       	in	r0, 0x3f	; 63
     aea:	f8 94       	cli
     aec:	de bf       	out	0x3e, r29	; 62
     aee:	0f be       	out	0x3f, r0	; 63
     af0:	cd bf       	out	0x3d, r28	; 61
     af2:	cf 91       	pop	r28
     af4:	df 91       	pop	r29
     af6:	1f 91       	pop	r17
     af8:	0f 91       	pop	r16
     afa:	ff 90       	pop	r15
     afc:	ef 90       	pop	r14
     afe:	08 95       	ret

00000b00 <showParameter>:
 #include "showParameter.h"


void showParameter(uint8_t status, uint8_t richtung, uint8_t winkel, uint8_t distance){
     b00:	cf 92       	push	r12
     b02:	df 92       	push	r13
     b04:	ef 92       	push	r14
     b06:	ff 92       	push	r15
     b08:	0f 93       	push	r16
     b0a:	1f 93       	push	r17
     b0c:	df 93       	push	r29
     b0e:	cf 93       	push	r28
     b10:	cd b7       	in	r28, 0x3d	; 61
     b12:	de b7       	in	r29, 0x3e	; 62
     b14:	65 97       	sbiw	r28, 0x15	; 21
     b16:	0f b6       	in	r0, 0x3f	; 63
     b18:	f8 94       	cli
     b1a:	de bf       	out	0x3e, r29	; 62
     b1c:	0f be       	out	0x3f, r0	; 63
     b1e:	cd bf       	out	0x3d, r28	; 61
     b20:	f8 2e       	mov	r15, r24
     b22:	e6 2e       	mov	r14, r22
     b24:	d4 2e       	mov	r13, r20
     b26:	c2 2e       	mov	r12, r18
	char output[21] = "";
     b28:	19 82       	std	Y+1, r1	; 0x01
     b2a:	1a 82       	std	Y+2, r1	; 0x02
     b2c:	1b 82       	std	Y+3, r1	; 0x03
     b2e:	1c 82       	std	Y+4, r1	; 0x04
     b30:	fe 01       	movw	r30, r28
     b32:	35 96       	adiw	r30, 0x05	; 5
     b34:	81 e1       	ldi	r24, 0x11	; 17
     b36:	df 01       	movw	r26, r30
     b38:	1d 92       	st	X+, r1
     b3a:	8a 95       	dec	r24
     b3c:	e9 f7       	brne	.-6      	; 0xb38 <showParameter+0x38>

	gfx_fill(0);
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <gfx_fill>

	//Anzeige der der einzelnen Schritten
	sprintf(output, "Ticks l: %3i  r: %3i", copro_ticks_l, copro_ticks_r);
     b44:	8d b7       	in	r24, 0x3d	; 61
     b46:	9e b7       	in	r25, 0x3e	; 62
     b48:	08 97       	sbiw	r24, 0x08	; 8
     b4a:	0f b6       	in	r0, 0x3f	; 63
     b4c:	f8 94       	cli
     b4e:	9e bf       	out	0x3e, r25	; 62
     b50:	0f be       	out	0x3f, r0	; 63
     b52:	8d bf       	out	0x3d, r24	; 61
     b54:	ed b7       	in	r30, 0x3d	; 61
     b56:	fe b7       	in	r31, 0x3e	; 62
     b58:	31 96       	adiw	r30, 0x01	; 1
     b5a:	8e 01       	movw	r16, r28
     b5c:	0f 5f       	subi	r16, 0xFF	; 255
     b5e:	1f 4f       	sbci	r17, 0xFF	; 255
     b60:	ad b7       	in	r26, 0x3d	; 61
     b62:	be b7       	in	r27, 0x3e	; 62
     b64:	12 96       	adiw	r26, 0x02	; 2
     b66:	1c 93       	st	X, r17
     b68:	0e 93       	st	-X, r16
     b6a:	11 97       	sbiw	r26, 0x01	; 1
     b6c:	8f e2       	ldi	r24, 0x2F	; 47
     b6e:	91 e0       	ldi	r25, 0x01	; 1
     b70:	93 83       	std	Z+3, r25	; 0x03
     b72:	82 83       	std	Z+2, r24	; 0x02
     b74:	80 91 b3 06 	lds	r24, 0x06B3
     b78:	90 91 b4 06 	lds	r25, 0x06B4
     b7c:	95 83       	std	Z+5, r25	; 0x05
     b7e:	84 83       	std	Z+4, r24	; 0x04
     b80:	80 91 cb 06 	lds	r24, 0x06CB
     b84:	90 91 cc 06 	lds	r25, 0x06CC
     b88:	97 83       	std	Z+7, r25	; 0x07
     b8a:	86 83       	std	Z+6, r24	; 0x06
     b8c:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>
	gfx_move(0, 0);
     b90:	8d b7       	in	r24, 0x3d	; 61
     b92:	9e b7       	in	r25, 0x3e	; 62
     b94:	08 96       	adiw	r24, 0x08	; 8
     b96:	0f b6       	in	r0, 0x3f	; 63
     b98:	f8 94       	cli
     b9a:	9e bf       	out	0x3e, r25	; 62
     b9c:	0f be       	out	0x3f, r0	; 63
     b9e:	8d bf       	out	0x3d, r24	; 61
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	60 e0       	ldi	r22, 0x00	; 0
     ba4:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
	gfx_print_text(output);
     ba8:	c8 01       	movw	r24, r16
     baa:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>

	//Anzeige der Geschwindigkeit
	sprintf(output, "Speed l: %3i  r: %3i", copro_speed_l, copro_speed_r);
     bae:	ad b7       	in	r26, 0x3d	; 61
     bb0:	be b7       	in	r27, 0x3e	; 62
     bb2:	18 97       	sbiw	r26, 0x08	; 8
     bb4:	0f b6       	in	r0, 0x3f	; 63
     bb6:	f8 94       	cli
     bb8:	be bf       	out	0x3e, r27	; 62
     bba:	0f be       	out	0x3f, r0	; 63
     bbc:	ad bf       	out	0x3d, r26	; 61
     bbe:	ed b7       	in	r30, 0x3d	; 61
     bc0:	fe b7       	in	r31, 0x3e	; 62
     bc2:	31 96       	adiw	r30, 0x01	; 1
     bc4:	12 96       	adiw	r26, 0x02	; 2
     bc6:	1c 93       	st	X, r17
     bc8:	0e 93       	st	-X, r16
     bca:	11 97       	sbiw	r26, 0x01	; 1
     bcc:	84 e4       	ldi	r24, 0x44	; 68
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	93 83       	std	Z+3, r25	; 0x03
     bd2:	82 83       	std	Z+2, r24	; 0x02
     bd4:	80 91 f3 06 	lds	r24, 0x06F3
     bd8:	90 91 f4 06 	lds	r25, 0x06F4
     bdc:	95 83       	std	Z+5, r25	; 0x05
     bde:	84 83       	std	Z+4, r24	; 0x04
     be0:	80 91 c9 06 	lds	r24, 0x06C9
     be4:	90 91 ca 06 	lds	r25, 0x06CA
     be8:	97 83       	std	Z+7, r25	; 0x07
     bea:	86 83       	std	Z+6, r24	; 0x06
     bec:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>
	gfx_move(0, 10);
     bf0:	8d b7       	in	r24, 0x3d	; 61
     bf2:	9e b7       	in	r25, 0x3e	; 62
     bf4:	08 96       	adiw	r24, 0x08	; 8
     bf6:	0f b6       	in	r0, 0x3f	; 63
     bf8:	f8 94       	cli
     bfa:	9e bf       	out	0x3e, r25	; 62
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	8d bf       	out	0x3d, r24	; 61
     c00:	80 e0       	ldi	r24, 0x00	; 0
     c02:	6a e0       	ldi	r22, 0x0A	; 10
     c04:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
	gfx_print_text(output);
     c08:	c8 01       	movw	r24, r16
     c0a:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>

	//Anzeige der Sensoren 1 , 2, 3, 4, 5
	sprintf(output, "%3i %3i %3i %3i %3i", copro_distance[0] / 256,
     c0e:	ad b7       	in	r26, 0x3d	; 61
     c10:	be b7       	in	r27, 0x3e	; 62
     c12:	1e 97       	sbiw	r26, 0x0e	; 14
     c14:	0f b6       	in	r0, 0x3f	; 63
     c16:	f8 94       	cli
     c18:	be bf       	out	0x3e, r27	; 62
     c1a:	0f be       	out	0x3f, r0	; 63
     c1c:	ad bf       	out	0x3d, r26	; 61
     c1e:	ed b7       	in	r30, 0x3d	; 61
     c20:	fe b7       	in	r31, 0x3e	; 62
     c22:	31 96       	adiw	r30, 0x01	; 1
     c24:	12 96       	adiw	r26, 0x02	; 2
     c26:	1c 93       	st	X, r17
     c28:	0e 93       	st	-X, r16
     c2a:	11 97       	sbiw	r26, 0x01	; 1
     c2c:	89 e5       	ldi	r24, 0x59	; 89
     c2e:	91 e0       	ldi	r25, 0x01	; 1
     c30:	93 83       	std	Z+3, r25	; 0x03
     c32:	82 83       	std	Z+2, r24	; 0x02
     c34:	a7 eb       	ldi	r26, 0xB7	; 183
     c36:	b6 e0       	ldi	r27, 0x06	; 6
     c38:	80 91 b8 06 	lds	r24, 0x06B8
     c3c:	84 83       	std	Z+4, r24	; 0x04
     c3e:	15 82       	std	Z+5, r1	; 0x05
     c40:	13 96       	adiw	r26, 0x03	; 3
     c42:	8c 91       	ld	r24, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	86 83       	std	Z+6, r24	; 0x06
     c48:	17 82       	std	Z+7, r1	; 0x07
     c4a:	15 96       	adiw	r26, 0x05	; 5
     c4c:	8c 91       	ld	r24, X
     c4e:	15 97       	sbiw	r26, 0x05	; 5
     c50:	80 87       	std	Z+8, r24	; 0x08
     c52:	11 86       	std	Z+9, r1	; 0x09
     c54:	17 96       	adiw	r26, 0x07	; 7
     c56:	8c 91       	ld	r24, X
     c58:	17 97       	sbiw	r26, 0x07	; 7
     c5a:	82 87       	std	Z+10, r24	; 0x0a
     c5c:	13 86       	std	Z+11, r1	; 0x0b
     c5e:	19 96       	adiw	r26, 0x09	; 9
     c60:	8c 91       	ld	r24, X
     c62:	84 87       	std	Z+12, r24	; 0x0c
     c64:	15 86       	std	Z+13, r1	; 0x0d
     c66:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>
			copro_distance[1] / 256, copro_distance[2] / 256,
			copro_distance[3] / 256, copro_distance[4] / 256);
	gfx_move(0, 20);
     c6a:	8d b7       	in	r24, 0x3d	; 61
     c6c:	9e b7       	in	r25, 0x3e	; 62
     c6e:	0e 96       	adiw	r24, 0x0e	; 14
     c70:	0f b6       	in	r0, 0x3f	; 63
     c72:	f8 94       	cli
     c74:	9e bf       	out	0x3e, r25	; 62
     c76:	0f be       	out	0x3f, r0	; 63
     c78:	8d bf       	out	0x3d, r24	; 61
     c7a:	80 e0       	ldi	r24, 0x00	; 0
     c7c:	64 e1       	ldi	r22, 0x14	; 20
     c7e:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
	gfx_print_text(output);
     c82:	c8 01       	movw	r24, r16
     c84:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>

	//Anzeige des Status
	sprintf(output, "status: %1i", status);
     c88:	00 d0       	rcall	.+0      	; 0xc8a <showParameter+0x18a>
     c8a:	00 d0       	rcall	.+0      	; 0xc8c <showParameter+0x18c>
     c8c:	00 d0       	rcall	.+0      	; 0xc8e <showParameter+0x18e>
     c8e:	ed b7       	in	r30, 0x3d	; 61
     c90:	fe b7       	in	r31, 0x3e	; 62
     c92:	31 96       	adiw	r30, 0x01	; 1
     c94:	ad b7       	in	r26, 0x3d	; 61
     c96:	be b7       	in	r27, 0x3e	; 62
     c98:	12 96       	adiw	r26, 0x02	; 2
     c9a:	1c 93       	st	X, r17
     c9c:	0e 93       	st	-X, r16
     c9e:	11 97       	sbiw	r26, 0x01	; 1
     ca0:	8d e6       	ldi	r24, 0x6D	; 109
     ca2:	91 e0       	ldi	r25, 0x01	; 1
     ca4:	93 83       	std	Z+3, r25	; 0x03
     ca6:	82 83       	std	Z+2, r24	; 0x02
     ca8:	f4 82       	std	Z+4, r15	; 0x04
     caa:	15 82       	std	Z+5, r1	; 0x05
     cac:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>
	gfx_move(0, 30);
     cb0:	8d b7       	in	r24, 0x3d	; 61
     cb2:	9e b7       	in	r25, 0x3e	; 62
     cb4:	06 96       	adiw	r24, 0x06	; 6
     cb6:	0f b6       	in	r0, 0x3f	; 63
     cb8:	f8 94       	cli
     cba:	9e bf       	out	0x3e, r25	; 62
     cbc:	0f be       	out	0x3f, r0	; 63
     cbe:	8d bf       	out	0x3d, r24	; 61
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	6e e1       	ldi	r22, 0x1E	; 30
     cc4:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
	gfx_print_text(output);
     cc8:	c8 01       	movw	r24, r16
     cca:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>

	//Anzeige der belegten richtungen
	sprintf(output, "belegt: %3i", richtung);
     cce:	00 d0       	rcall	.+0      	; 0xcd0 <showParameter+0x1d0>
     cd0:	00 d0       	rcall	.+0      	; 0xcd2 <showParameter+0x1d2>
     cd2:	00 d0       	rcall	.+0      	; 0xcd4 <showParameter+0x1d4>
     cd4:	ed b7       	in	r30, 0x3d	; 61
     cd6:	fe b7       	in	r31, 0x3e	; 62
     cd8:	31 96       	adiw	r30, 0x01	; 1
     cda:	ad b7       	in	r26, 0x3d	; 61
     cdc:	be b7       	in	r27, 0x3e	; 62
     cde:	12 96       	adiw	r26, 0x02	; 2
     ce0:	1c 93       	st	X, r17
     ce2:	0e 93       	st	-X, r16
     ce4:	11 97       	sbiw	r26, 0x01	; 1
     ce6:	89 e7       	ldi	r24, 0x79	; 121
     ce8:	91 e0       	ldi	r25, 0x01	; 1
     cea:	93 83       	std	Z+3, r25	; 0x03
     cec:	82 83       	std	Z+2, r24	; 0x02
     cee:	e4 82       	std	Z+4, r14	; 0x04
     cf0:	15 82       	std	Z+5, r1	; 0x05
     cf2:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>
	gfx_move(0, 40);
     cf6:	8d b7       	in	r24, 0x3d	; 61
     cf8:	9e b7       	in	r25, 0x3e	; 62
     cfa:	06 96       	adiw	r24, 0x06	; 6
     cfc:	0f b6       	in	r0, 0x3f	; 63
     cfe:	f8 94       	cli
     d00:	9e bf       	out	0x3e, r25	; 62
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	8d bf       	out	0x3d, r24	; 61
     d06:	80 e0       	ldi	r24, 0x00	; 0
     d08:	68 e2       	ldi	r22, 0x28	; 40
     d0a:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
	gfx_print_text(output);
     d0e:	c8 01       	movw	r24, r16
     d10:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>

	//Anzeige Winkel und Dinstanz NDS
	sprintf(output, "Winkel :%3i NDS: %3i ", winkel, distance);
     d14:	ad b7       	in	r26, 0x3d	; 61
     d16:	be b7       	in	r27, 0x3e	; 62
     d18:	18 97       	sbiw	r26, 0x08	; 8
     d1a:	0f b6       	in	r0, 0x3f	; 63
     d1c:	f8 94       	cli
     d1e:	be bf       	out	0x3e, r27	; 62
     d20:	0f be       	out	0x3f, r0	; 63
     d22:	ad bf       	out	0x3d, r26	; 61
     d24:	ed b7       	in	r30, 0x3d	; 61
     d26:	fe b7       	in	r31, 0x3e	; 62
     d28:	31 96       	adiw	r30, 0x01	; 1
     d2a:	12 96       	adiw	r26, 0x02	; 2
     d2c:	1c 93       	st	X, r17
     d2e:	0e 93       	st	-X, r16
     d30:	11 97       	sbiw	r26, 0x01	; 1
     d32:	85 e8       	ldi	r24, 0x85	; 133
     d34:	91 e0       	ldi	r25, 0x01	; 1
     d36:	93 83       	std	Z+3, r25	; 0x03
     d38:	82 83       	std	Z+2, r24	; 0x02
     d3a:	d4 82       	std	Z+4, r13	; 0x04
     d3c:	15 82       	std	Z+5, r1	; 0x05
     d3e:	c6 82       	std	Z+6, r12	; 0x06
     d40:	17 82       	std	Z+7, r1	; 0x07
     d42:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>
	gfx_move(0, 50);
     d46:	8d b7       	in	r24, 0x3d	; 61
     d48:	9e b7       	in	r25, 0x3e	; 62
     d4a:	08 96       	adiw	r24, 0x08	; 8
     d4c:	0f b6       	in	r0, 0x3f	; 63
     d4e:	f8 94       	cli
     d50:	9e bf       	out	0x3e, r25	; 62
     d52:	0f be       	out	0x3f, r0	; 63
     d54:	8d bf       	out	0x3d, r24	; 61
     d56:	80 e0       	ldi	r24, 0x00	; 0
     d58:	62 e3       	ldi	r22, 0x32	; 50
     d5a:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
	gfx_print_text(output);
     d5e:	c8 01       	movw	r24, r16
     d60:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>

	delay(100);
     d64:	84 e6       	ldi	r24, 0x64	; 100
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
}
     d6c:	65 96       	adiw	r28, 0x15	; 21
     d6e:	0f b6       	in	r0, 0x3f	; 63
     d70:	f8 94       	cli
     d72:	de bf       	out	0x3e, r29	; 62
     d74:	0f be       	out	0x3f, r0	; 63
     d76:	cd bf       	out	0x3d, r28	; 61
     d78:	cf 91       	pop	r28
     d7a:	df 91       	pop	r29
     d7c:	1f 91       	pop	r17
     d7e:	0f 91       	pop	r16
     d80:	ff 90       	pop	r15
     d82:	ef 90       	pop	r14
     d84:	df 90       	pop	r13
     d86:	cf 90       	pop	r12
     d88:	08 95       	ret

00000d8a <advDisplay_printTerminal>:
}

/**
 * prints all lines in terminal_text to the display
 */
void advDisplay_printTerminal(){
     d8a:	af 92       	push	r10
     d8c:	bf 92       	push	r11
     d8e:	df 92       	push	r13
     d90:	ef 92       	push	r14
     d92:	ff 92       	push	r15
     d94:	0f 93       	push	r16
     d96:	1f 93       	push	r17
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	c0 e0       	ldi	r28, 0x00	; 0
     d9e:	d0 e0       	ldi	r29, 0x00	; 0
     da0:	dd 24       	eor	r13, r13
		gfx_print_text("                      ");

		//print line
		index = (terminal_head + i)%terminal_lines;
		gfx_move(logo_width,10 + 10*i);
		gfx_print_text(terminal_text[index]);
     da2:	84 e1       	ldi	r24, 0x14	; 20
     da4:	a8 2e       	mov	r10, r24
     da6:	b1 2c       	mov	r11, r1
     da8:	2b c0       	rjmp	.+86     	; 0xe00 <advDisplay_printTerminal+0x76>
	int index;

	for(i = 0; i < terminal_count;i++){

		//clear line
		gfx_move(logo_width,10 + 10*i);
     daa:	7e 01       	movw	r14, r28
     dac:	08 94       	sec
     dae:	e1 1c       	adc	r14, r1
     db0:	f1 1c       	adc	r15, r1
     db2:	81 e3       	ldi	r24, 0x31	; 49
     db4:	6d 2d       	mov	r22, r13
     db6:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
		gfx_print_text("                      ");
     dba:	8b e9       	ldi	r24, 0x9B	; 155
     dbc:	91 e0       	ldi	r25, 0x01	; 1
     dbe:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>

		//print line
		index = (terminal_head + i)%terminal_lines;
     dc2:	80 91 3f 05 	lds	r24, 0x053F
     dc6:	90 91 40 05 	lds	r25, 0x0540
     dca:	8c 0f       	add	r24, r28
     dcc:	9d 1f       	adc	r25, r29
     dce:	65 e0       	ldi	r22, 0x05	; 5
     dd0:	70 e0       	ldi	r23, 0x00	; 0
     dd2:	0e 94 8e 1b 	call	0x371c	; 0x371c <__divmodhi4>
     dd6:	8c 01       	movw	r16, r24
		gfx_move(logo_width,10 + 10*i);
     dd8:	81 e3       	ldi	r24, 0x31	; 49
     dda:	6d 2d       	mov	r22, r13
     ddc:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
		gfx_print_text(terminal_text[index]);
     de0:	0a 9d       	mul	r16, r10
     de2:	c0 01       	movw	r24, r0
     de4:	0b 9d       	mul	r16, r11
     de6:	90 0d       	add	r25, r0
     de8:	1a 9d       	mul	r17, r10
     dea:	90 0d       	add	r25, r0
     dec:	11 24       	eor	r1, r1
     dee:	8e 51       	subi	r24, 0x1E	; 30
     df0:	9e 4f       	sbci	r25, 0xFE	; 254
     df2:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>
		delay(10);
     df6:	8a e0       	ldi	r24, 0x0A	; 10
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
     dfe:	e7 01       	movw	r28, r14
     e00:	8a e0       	ldi	r24, 0x0A	; 10
     e02:	d8 0e       	add	r13, r24
 */
void advDisplay_printTerminal(){
	int i;
	int index;

	for(i = 0; i < terminal_count;i++){
     e04:	80 91 41 05 	lds	r24, 0x0541
     e08:	90 91 42 05 	lds	r25, 0x0542
     e0c:	c8 17       	cp	r28, r24
     e0e:	d9 07       	cpc	r29, r25
     e10:	64 f2       	brlt	.-104    	; 0xdaa <advDisplay_printTerminal+0x20>
		gfx_move(logo_width,10 + 10*i);
		gfx_print_text(terminal_text[index]);
		delay(10);
	}

}
     e12:	df 91       	pop	r29
     e14:	cf 91       	pop	r28
     e16:	1f 91       	pop	r17
     e18:	0f 91       	pop	r16
     e1a:	ff 90       	pop	r15
     e1c:	ef 90       	pop	r14
     e1e:	df 90       	pop	r13
     e20:	bf 90       	pop	r11
     e22:	af 90       	pop	r10
     e24:	08 95       	ret

00000e26 <advDisplay_append_line>:

/**
 *	@brief appends a line to the advDisplay terminal -> display can show the last #terminal_lines lines
 *	@param string to append
 */
void advDisplay_append_line(char *txt){
     e26:	fc 01       	movw	r30, r24

	//calculate index for the new line in terminal_text
	int index = (terminal_head + terminal_count)%terminal_lines;

	//copy the line into terminal_text array at calculated index
	strcpy(terminal_text[index], txt);
     e28:	80 91 41 05 	lds	r24, 0x0541
     e2c:	90 91 42 05 	lds	r25, 0x0542
     e30:	20 91 3f 05 	lds	r18, 0x053F
     e34:	30 91 40 05 	lds	r19, 0x0540
     e38:	82 0f       	add	r24, r18
     e3a:	93 1f       	adc	r25, r19
     e3c:	65 e0       	ldi	r22, 0x05	; 5
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	0e 94 8e 1b 	call	0x371c	; 0x371c <__divmodhi4>
     e44:	24 e1       	ldi	r18, 0x14	; 20
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	ac 01       	movw	r20, r24
     e4a:	42 9f       	mul	r20, r18
     e4c:	c0 01       	movw	r24, r0
     e4e:	43 9f       	mul	r20, r19
     e50:	90 0d       	add	r25, r0
     e52:	52 9f       	mul	r21, r18
     e54:	90 0d       	add	r25, r0
     e56:	11 24       	eor	r1, r1
     e58:	8e 51       	subi	r24, 0x1E	; 30
     e5a:	9e 4f       	sbci	r25, 0xFE	; 254
     e5c:	bf 01       	movw	r22, r30
     e5e:	0e 94 d5 1c 	call	0x39aa	; 0x39aa <strcpy>

	if(terminal_count < 5){
     e62:	80 91 41 05 	lds	r24, 0x0541
     e66:	90 91 42 05 	lds	r25, 0x0542
     e6a:	85 30       	cpi	r24, 0x05	; 5
     e6c:	91 05       	cpc	r25, r1
     e6e:	34 f4       	brge	.+12     	; 0xe7c <advDisplay_append_line+0x56>
		terminal_count++;
     e70:	01 96       	adiw	r24, 0x01	; 1
     e72:	90 93 42 05 	sts	0x0542, r25
     e76:	80 93 41 05 	sts	0x0541, r24
     e7a:	09 c0       	rjmp	.+18     	; 0xe8e <advDisplay_append_line+0x68>
	}
	else{
		terminal_head = (terminal_head++)%terminal_lines;
     e7c:	80 91 3f 05 	lds	r24, 0x053F
     e80:	90 91 40 05 	lds	r25, 0x0540
     e84:	01 96       	adiw	r24, 0x01	; 1
     e86:	90 93 40 05 	sts	0x0540, r25
     e8a:	80 93 3f 05 	sts	0x053F, r24
	}

	//refresh the terminal output on the display
	advDisplay_printTerminal();
     e8e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <advDisplay_printTerminal>
}
     e92:	08 95       	ret

00000e94 <advDisplay_clear>:


/**
 *	@brief clears the terminal area of the display
 */
void advDisplay_clear(){
     e94:	1f 93       	push	r17
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29

	int i = 0;
	//stop interrupts
	cli();
     e9a:	f8 94       	cli
     e9c:	1a e0       	ldi	r17, 0x0A	; 10

	//clear with whitespaces
	for(i = 10; i <= 50; i = i +10){
		gfx_move(logo_width, i);
     e9e:	81 e3       	ldi	r24, 0x31	; 49
     ea0:	61 2f       	mov	r22, r17
     ea2:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
		gfx_print_text("             ");
     ea6:	82 eb       	ldi	r24, 0xB2	; 178
     ea8:	91 e0       	ldi	r25, 0x01	; 1
     eaa:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>
     eae:	16 5f       	subi	r17, 0xF6	; 246
	int i = 0;
	//stop interrupts
	cli();

	//clear with whitespaces
	for(i = 10; i <= 50; i = i +10){
     eb0:	1c 33       	cpi	r17, 0x3C	; 60
     eb2:	a9 f7       	brne	.-22     	; 0xe9e <advDisplay_clear+0xa>
     eb4:	c2 ee       	ldi	r28, 0xE2	; 226
     eb6:	d1 e0       	ldi	r29, 0x01	; 1
		gfx_move(logo_width, i);
		gfx_print_text("             ");
	}

	for(i = 0; i < terminal_lines; i++){
		strcpy(terminal_text[i],"                    ");
     eb8:	ce 01       	movw	r24, r28
     eba:	60 ec       	ldi	r22, 0xC0	; 192
     ebc:	71 e0       	ldi	r23, 0x01	; 1
     ebe:	0e 94 d5 1c 	call	0x39aa	; 0x39aa <strcpy>
     ec2:	64 96       	adiw	r28, 0x14	; 20
	for(i = 10; i <= 50; i = i +10){
		gfx_move(logo_width, i);
		gfx_print_text("             ");
	}

	for(i = 0; i < terminal_lines; i++){
     ec4:	82 e0       	ldi	r24, 0x02	; 2
     ec6:	c6 34       	cpi	r28, 0x46	; 70
     ec8:	d8 07       	cpc	r29, r24
     eca:	b1 f7       	brne	.-20     	; 0xeb8 <advDisplay_clear+0x24>
		strcpy(terminal_text[i],"                    ");
	}

	//enable interrupts
	sei();
     ecc:	78 94       	sei
}
     ece:	df 91       	pop	r29
     ed0:	cf 91       	pop	r28
     ed2:	1f 91       	pop	r17
     ed4:	08 95       	ret

00000ed6 <advDisplay_init>:
/**
 *	@brief initializes the advanced Display library
 */
void advDisplay_init(){
	//init diplay an graphics lib
	display_init();
     ed6:	0e 94 96 09 	call	0x132c	; 0x132c <display_init>
	gfx_init();
     eda:	0e 94 b5 0b 	call	0x176a	; 0x176a <gfx_init>

	//move to top left corner and draw logo
	gfx_move(0,0);
     ede:	80 e0       	ldi	r24, 0x00	; 0
     ee0:	60 e0       	ldi	r22, 0x00	; 0
     ee2:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
	gfx_draw_xbm_P(logo_width, logo_height, (PGM_P) logo_bits);
     ee6:	81 e3       	ldi	r24, 0x31	; 49
     ee8:	6c e3       	ldi	r22, 0x3C	; 60
     eea:	4c e8       	ldi	r20, 0x8C	; 140
     eec:	50 e0       	ldi	r21, 0x00	; 0
     eee:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <gfx_draw_xbm_P>
}
     ef2:	08 95       	ret

00000ef4 <advDisplay_printVoltage>:


/**
 * @brief prints the current Voltage on the display
 */
void advDisplay_printVoltage(){
     ef4:	ef 92       	push	r14
     ef6:	ff 92       	push	r15
     ef8:	0f 93       	push	r16
     efa:	1f 93       	push	r17
     efc:	df 93       	push	r29
     efe:	cf 93       	push	r28
     f00:	cd b7       	in	r28, 0x3d	; 61
     f02:	de b7       	in	r29, 0x3e	; 62
     f04:	64 97       	sbiw	r28, 0x14	; 20
     f06:	0f b6       	in	r0, 0x3f	; 63
     f08:	f8 94       	cli
     f0a:	de bf       	out	0x3e, r29	; 62
     f0c:	0f be       	out	0x3f, r0	; 63
     f0e:	cd bf       	out	0x3d, r28	; 61
		char output[20] = "";
     f10:	19 82       	std	Y+1, r1	; 0x01
     f12:	1a 82       	std	Y+2, r1	; 0x02
     f14:	1b 82       	std	Y+3, r1	; 0x03
     f16:	1c 82       	std	Y+4, r1	; 0x04
     f18:	fe 01       	movw	r30, r28
     f1a:	35 96       	adiw	r30, 0x05	; 5
     f1c:	80 e1       	ldi	r24, 0x10	; 16
     f1e:	df 01       	movw	r26, r30
     f20:	1d 92       	st	X+, r1
     f22:	8a 95       	dec	r24
     f24:	e9 f7       	brne	.-6      	; 0xf20 <advDisplay_printVoltage+0x2c>
		double volt = 0;

		//get currente voltage value
		bot_update();
     f26:	0e 94 5f 12 	call	0x24be	; 0x24be <bot_update>
		//calculate the voltage from adc-value
		volt = 0.0166 * bot_supply -1.19;
		//concat output string
		sprintf(output, "VCC: %2.1f V", volt);
     f2a:	ed b7       	in	r30, 0x3d	; 61
     f2c:	fe b7       	in	r31, 0x3e	; 62
     f2e:	38 97       	sbiw	r30, 0x08	; 8
     f30:	0f b6       	in	r0, 0x3f	; 63
     f32:	f8 94       	cli
     f34:	fe bf       	out	0x3e, r31	; 62
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	ed bf       	out	0x3d, r30	; 61
     f3a:	0d b7       	in	r16, 0x3d	; 61
     f3c:	1e b7       	in	r17, 0x3e	; 62
     f3e:	0f 5f       	subi	r16, 0xFF	; 255
     f40:	1f 4f       	sbci	r17, 0xFF	; 255
     f42:	7e 01       	movw	r14, r28
     f44:	08 94       	sec
     f46:	e1 1c       	adc	r14, r1
     f48:	f1 1c       	adc	r15, r1
     f4a:	f2 82       	std	Z+2, r15	; 0x02
     f4c:	e1 82       	std	Z+1, r14	; 0x01
     f4e:	85 ed       	ldi	r24, 0xD5	; 213
     f50:	91 e0       	ldi	r25, 0x01	; 1
     f52:	d8 01       	movw	r26, r16
     f54:	13 96       	adiw	r26, 0x03	; 3
     f56:	9c 93       	st	X, r25
     f58:	8e 93       	st	-X, r24
     f5a:	12 97       	sbiw	r26, 0x02	; 2
     f5c:	60 91 f5 06 	lds	r22, 0x06F5
     f60:	70 91 f6 06 	lds	r23, 0x06F6
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	0e 94 4b 14 	call	0x2896	; 0x2896 <__floatunsisf>
     f6c:	29 eb       	ldi	r18, 0xB9	; 185
     f6e:	3c ef       	ldi	r19, 0xFC	; 252
     f70:	47 e8       	ldi	r20, 0x87	; 135
     f72:	5c e3       	ldi	r21, 0x3C	; 60
     f74:	0e 94 fd 14 	call	0x29fa	; 0x29fa <__mulsf3>
     f78:	2c ee       	ldi	r18, 0xEC	; 236
     f7a:	31 e5       	ldi	r19, 0x51	; 81
     f7c:	48 e9       	ldi	r20, 0x98	; 152
     f7e:	5f e3       	ldi	r21, 0x3F	; 63
     f80:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <__subsf3>
     f84:	f8 01       	movw	r30, r16
     f86:	64 83       	std	Z+4, r22	; 0x04
     f88:	75 83       	std	Z+5, r23	; 0x05
     f8a:	86 83       	std	Z+6, r24	; 0x06
     f8c:	97 83       	std	Z+7, r25	; 0x07
     f8e:	0e 94 13 1d 	call	0x3a26	; 0x3a26 <sprintf>

		//move to the position on the display where to write
		gfx_move(logo_width,0);
     f92:	8d b7       	in	r24, 0x3d	; 61
     f94:	9e b7       	in	r25, 0x3e	; 62
     f96:	08 96       	adiw	r24, 0x08	; 8
     f98:	0f b6       	in	r0, 0x3f	; 63
     f9a:	f8 94       	cli
     f9c:	9e bf       	out	0x3e, r25	; 62
     f9e:	0f be       	out	0x3f, r0	; 63
     fa0:	8d bf       	out	0x3d, r24	; 61
     fa2:	81 e3       	ldi	r24, 0x31	; 49
     fa4:	60 e0       	ldi	r22, 0x00	; 0
     fa6:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>

		//draw text
		gfx_print_text(output);
     faa:	c7 01       	movw	r24, r14
     fac:	0e 94 76 10 	call	0x20ec	; 0x20ec <gfx_print_text>
}
     fb0:	64 96       	adiw	r28, 0x14	; 20
     fb2:	0f b6       	in	r0, 0x3f	; 63
     fb4:	f8 94       	cli
     fb6:	de bf       	out	0x3e, r29	; 62
     fb8:	0f be       	out	0x3f, r0	; 63
     fba:	cd bf       	out	0x3d, r28	; 61
     fbc:	cf 91       	pop	r28
     fbe:	df 91       	pop	r29
     fc0:	1f 91       	pop	r17
     fc2:	0f 91       	pop	r16
     fc4:	ff 90       	pop	r15
     fc6:	ef 90       	pop	r14
     fc8:	08 95       	ret

00000fca <checkDriveDirection>:


uint8_t checkDriveDirection(){

	//coprozessors update
	copro_update();
     fca:	0e 94 96 10 	call	0x212c	; 0x212c <copro_update>

	if(copro_distance[1]/256 < irAbstand &&
     fce:	20 91 b9 06 	lds	r18, 0x06B9
     fd2:	30 91 ba 06 	lds	r19, 0x06BA
     fd6:	46 e4       	ldi	r20, 0x46	; 70
     fd8:	20 30       	cpi	r18, 0x00	; 0
     fda:	34 07       	cpc	r19, r20
     fdc:	80 f4       	brcc	.+32     	; 0xffe <checkDriveDirection+0x34>
     fde:	80 91 bb 06 	lds	r24, 0x06BB
     fe2:	90 91 bc 06 	lds	r25, 0x06BC
     fe6:	80 50       	subi	r24, 0x00	; 0
     fe8:	96 44       	sbci	r25, 0x46	; 70
     fea:	48 f4       	brcc	.+18     	; 0xffe <checkDriveDirection+0x34>
     fec:	80 91 bd 06 	lds	r24, 0x06BD
     ff0:	90 91 be 06 	lds	r25, 0x06BE
     ff4:	80 50       	subi	r24, 0x00	; 0
     ff6:	96 44       	sbci	r25, 0x46	; 70
     ff8:	10 f4       	brcc	.+4      	; 0xffe <checkDriveDirection+0x34>
     ffa:	81 e0       	ldi	r24, 0x01	; 1
     ffc:	08 95       	ret
	{
		return drive_status_front_free;
	}
	else{
		//rechts && rechtsoben
		if (copro_distance[0] / 256 < irAbstand && copro_distance[1] / 256 < irAbstand){
     ffe:	80 91 b7 06 	lds	r24, 0x06B7
    1002:	90 91 b8 06 	lds	r25, 0x06B8
    1006:	80 50       	subi	r24, 0x00	; 0
    1008:	96 44       	sbci	r25, 0x46	; 70
    100a:	28 f4       	brcc	.+10     	; 0x1016 <checkDriveDirection+0x4c>
    100c:	20 50       	subi	r18, 0x00	; 0
    100e:	36 44       	sbci	r19, 0x46	; 70
    1010:	10 f4       	brcc	.+4      	; 0x1016 <checkDriveDirection+0x4c>
    1012:	83 e0       	ldi	r24, 0x03	; 3
    1014:	08 95       	ret
			return drive_status_right_free;
		}
		//links && linksoben
		else if (copro_distance[4] / 256 < irAbstand && copro_distance[3] / 256 < irAbstand){
    1016:	80 91 bf 06 	lds	r24, 0x06BF
    101a:	90 91 c0 06 	lds	r25, 0x06C0
    101e:	80 50       	subi	r24, 0x00	; 0
    1020:	96 44       	sbci	r25, 0x46	; 70
    1022:	48 f4       	brcc	.+18     	; 0x1036 <checkDriveDirection+0x6c>
    1024:	80 91 bd 06 	lds	r24, 0x06BD
    1028:	90 91 be 06 	lds	r25, 0x06BE
    102c:	80 50       	subi	r24, 0x00	; 0
    102e:	96 44       	sbci	r25, 0x46	; 70
    1030:	10 f4       	brcc	.+4      	; 0x1036 <checkDriveDirection+0x6c>
    1032:	84 e0       	ldi	r24, 0x04	; 4
    1034:	08 95       	ret
    1036:	85 e0       	ldi	r24, 0x05	; 5
		}
		else{
			return drive_status_all_blocked;
		}
	}
}
    1038:	08 95       	ret

0000103a <sendIRDistance>:
	}
	copro_resetOdometry(0, 0);
}

void sendIRDistance(){
	delay(3000);
    103a:	88 eb       	ldi	r24, 0xB8	; 184
    103c:	9b e0       	ldi	r25, 0x0B	; 11
    103e:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
	copro_resetOdometry(0, 0);
    1042:	80 e0       	ldi	r24, 0x00	; 0
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	60 e0       	ldi	r22, 0x00	; 0
    1048:	70 e0       	ldi	r23, 0x00	; 0
    104a:	0e 94 aa 11 	call	0x2354	; 0x2354 <copro_resetOdometry>
	copro_update();
    104e:	0e 94 96 10 	call	0x212c	; 0x212c <copro_update>
	niboCom_putIRDistance(copro_distance);
    1052:	87 eb       	ldi	r24, 0xB7	; 183
    1054:	96 e0       	ldi	r25, 0x06	; 6
    1056:	0e 94 53 02 	call	0x4a6	; 0x4a6 <niboCom_putIRDistance>
}
    105a:	08 95       	ret

0000105c <sendTicks>:
	if((copro_distance[4]/256) > irAbstand){leds_set_status(LEDS_RED,2);}
	else{leds_set_status(LEDS_GREEN,2);}

}
void sendTicks(){
	copro_update();
    105c:	0e 94 96 10 	call	0x212c	; 0x212c <copro_update>
	char output[13] = "";

	if(copro_ticks_l > 0){
    1060:	80 91 b3 06 	lds	r24, 0x06B3
    1064:	90 91 b4 06 	lds	r25, 0x06B4
    1068:	18 16       	cp	r1, r24
    106a:	19 06       	cpc	r1, r25
    106c:	14 f4       	brge	.+4      	; 0x1072 <sendTicks+0x16>
		niboCom_putDistance(copro_ticks_l);
    106e:	0e 94 35 02 	call	0x46a	; 0x46a <niboCom_putDistance>
	}
	copro_resetOdometry(0, 0);
    1072:	80 e0       	ldi	r24, 0x00	; 0
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	60 e0       	ldi	r22, 0x00	; 0
    1078:	70 e0       	ldi	r23, 0x00	; 0
    107a:	0e 94 aa 11 	call	0x2354	; 0x2354 <copro_resetOdometry>
}
    107e:	08 95       	ret

00001080 <checkDistance>:
		}
	}
}

void checkDistance(){
	copro_update();
    1080:	0e 94 96 10 	call	0x212c	; 0x212c <copro_update>
	if((copro_distance[0]/256) > irAbstand){leds_set_status(LEDS_RED,7);}
    1084:	80 91 b7 06 	lds	r24, 0x06B7
    1088:	90 91 b8 06 	lds	r25, 0x06B8
    108c:	80 50       	subi	r24, 0x00	; 0
    108e:	97 44       	sbci	r25, 0x47	; 71
    1090:	10 f0       	brcs	.+4      	; 0x1096 <checkDistance+0x16>
    1092:	82 e0       	ldi	r24, 0x02	; 2
    1094:	01 c0       	rjmp	.+2      	; 0x1098 <checkDistance+0x18>
	else{leds_set_status(LEDS_GREEN,7);}
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	67 e0       	ldi	r22, 0x07	; 7
    109a:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <leds_set_status>

	if((copro_distance[1]/256) > irAbstand){leds_set_status(LEDS_RED,6);}
    109e:	80 91 b9 06 	lds	r24, 0x06B9
    10a2:	90 91 ba 06 	lds	r25, 0x06BA
    10a6:	80 50       	subi	r24, 0x00	; 0
    10a8:	97 44       	sbci	r25, 0x47	; 71
    10aa:	10 f0       	brcs	.+4      	; 0x10b0 <checkDistance+0x30>
    10ac:	82 e0       	ldi	r24, 0x02	; 2
    10ae:	01 c0       	rjmp	.+2      	; 0x10b2 <checkDistance+0x32>
	else{leds_set_status(LEDS_GREEN,6);}
    10b0:	81 e0       	ldi	r24, 0x01	; 1
    10b2:	66 e0       	ldi	r22, 0x06	; 6
    10b4:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <leds_set_status>

	if((copro_distance[2]/256) > irAbstand){leds_set_status(LEDS_RED,5);leds_set_status(LEDS_RED,4);}
    10b8:	80 91 bb 06 	lds	r24, 0x06BB
    10bc:	90 91 bc 06 	lds	r25, 0x06BC
    10c0:	80 50       	subi	r24, 0x00	; 0
    10c2:	97 44       	sbci	r25, 0x47	; 71
    10c4:	30 f0       	brcs	.+12     	; 0x10d2 <checkDistance+0x52>
    10c6:	82 e0       	ldi	r24, 0x02	; 2
    10c8:	65 e0       	ldi	r22, 0x05	; 5
    10ca:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <leds_set_status>
    10ce:	82 e0       	ldi	r24, 0x02	; 2
    10d0:	05 c0       	rjmp	.+10     	; 0x10dc <checkDistance+0x5c>
	else{leds_set_status(LEDS_GREEN,5);leds_set_status(LEDS_GREEN,4);}
    10d2:	81 e0       	ldi	r24, 0x01	; 1
    10d4:	65 e0       	ldi	r22, 0x05	; 5
    10d6:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <leds_set_status>
    10da:	81 e0       	ldi	r24, 0x01	; 1
    10dc:	64 e0       	ldi	r22, 0x04	; 4
    10de:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <leds_set_status>

	if((copro_distance[3]/256) > irAbstand){leds_set_status(LEDS_RED,3);}
    10e2:	80 91 bd 06 	lds	r24, 0x06BD
    10e6:	90 91 be 06 	lds	r25, 0x06BE
    10ea:	80 50       	subi	r24, 0x00	; 0
    10ec:	97 44       	sbci	r25, 0x47	; 71
    10ee:	10 f0       	brcs	.+4      	; 0x10f4 <checkDistance+0x74>
    10f0:	82 e0       	ldi	r24, 0x02	; 2
    10f2:	01 c0       	rjmp	.+2      	; 0x10f6 <checkDistance+0x76>
	else{leds_set_status(LEDS_GREEN,3);}
    10f4:	81 e0       	ldi	r24, 0x01	; 1
    10f6:	63 e0       	ldi	r22, 0x03	; 3
    10f8:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <leds_set_status>

	if((copro_distance[4]/256) > irAbstand){leds_set_status(LEDS_RED,2);}
    10fc:	80 91 bf 06 	lds	r24, 0x06BF
    1100:	90 91 c0 06 	lds	r25, 0x06C0
    1104:	80 50       	subi	r24, 0x00	; 0
    1106:	97 44       	sbci	r25, 0x47	; 71
    1108:	10 f0       	brcs	.+4      	; 0x110e <__stack+0xf>
    110a:	82 e0       	ldi	r24, 0x02	; 2
    110c:	01 c0       	rjmp	.+2      	; 0x1110 <__stack+0x11>
	else{leds_set_status(LEDS_GREEN,2);}
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	62 e0       	ldi	r22, 0x02	; 2
    1112:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <leds_set_status>
    1116:	08 95       	ret

00001118 <turn_around>:
	niboCom_putDircetionChange(niboCom_cmd_nibo_halfRight);
	sendIRDistance();
}

void turn_around(){
	copro_setTargetRel(53, -53, 10);
    1118:	85 e3       	ldi	r24, 0x35	; 53
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	6b ec       	ldi	r22, 0xCB	; 203
    111e:	7f ef       	ldi	r23, 0xFF	; 255
    1120:	4a e0       	ldi	r20, 0x0A	; 10
    1122:	50 e0       	ldi	r21, 0x00	; 0
    1124:	0e 94 7e 11 	call	0x22fc	; 0x22fc <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_turn);
    1128:	8a e0       	ldi	r24, 0x0A	; 10
    112a:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	sendIRDistance();
    112e:	0e 94 1d 08 	call	0x103a	; 0x103a <sendIRDistance>
}
    1132:	08 95       	ret

00001134 <turn_halfRight>:
	niboCom_putDircetionChange(niboCom_cmd_nibo_right);
	sendIRDistance();
}

void turn_halfRight(){
	copro_setTargetRel(13, -13, 10);
    1134:	8d e0       	ldi	r24, 0x0D	; 13
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	63 ef       	ldi	r22, 0xF3	; 243
    113a:	7f ef       	ldi	r23, 0xFF	; 255
    113c:	4a e0       	ldi	r20, 0x0A	; 10
    113e:	50 e0       	ldi	r21, 0x00	; 0
    1140:	0e 94 7e 11 	call	0x22fc	; 0x22fc <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_halfRight);
    1144:	8d e0       	ldi	r24, 0x0D	; 13
    1146:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	sendIRDistance();
    114a:	0e 94 1d 08 	call	0x103a	; 0x103a <sendIRDistance>
}
    114e:	08 95       	ret

00001150 <turn_right>:
	niboCom_putDircetionChange(niboCom_cmd_nibo_halfLeft);
	sendIRDistance();
}

void turn_right(){
	copro_setTargetRel(27, -27, 10);
    1150:	8b e1       	ldi	r24, 0x1B	; 27
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	65 ee       	ldi	r22, 0xE5	; 229
    1156:	7f ef       	ldi	r23, 0xFF	; 255
    1158:	4a e0       	ldi	r20, 0x0A	; 10
    115a:	50 e0       	ldi	r21, 0x00	; 0
    115c:	0e 94 7e 11 	call	0x22fc	; 0x22fc <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_right);
    1160:	8e e0       	ldi	r24, 0x0E	; 14
    1162:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	sendIRDistance();
    1166:	0e 94 1d 08 	call	0x103a	; 0x103a <sendIRDistance>
}
    116a:	08 95       	ret

0000116c <turn_halfLeft>:
	niboCom_putDircetionChange(niboCom_cmd_nibo_left);
	sendIRDistance();
}

void turn_halfLeft(){
	copro_setTargetRel(-13, 13, 10);
    116c:	83 ef       	ldi	r24, 0xF3	; 243
    116e:	9f ef       	ldi	r25, 0xFF	; 255
    1170:	6d e0       	ldi	r22, 0x0D	; 13
    1172:	70 e0       	ldi	r23, 0x00	; 0
    1174:	4a e0       	ldi	r20, 0x0A	; 10
    1176:	50 e0       	ldi	r21, 0x00	; 0
    1178:	0e 94 7e 11 	call	0x22fc	; 0x22fc <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_halfLeft);
    117c:	8b e0       	ldi	r24, 0x0B	; 11
    117e:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	sendIRDistance();
    1182:	0e 94 1d 08 	call	0x103a	; 0x103a <sendIRDistance>
}
    1186:	08 95       	ret

00001188 <turn_left>:
	niboCom_putIRDistance(copro_distance);
	return out;
}

void turn_left(){
	copro_setTargetRel(-27, 27, 10);
    1188:	85 ee       	ldi	r24, 0xE5	; 229
    118a:	9f ef       	ldi	r25, 0xFF	; 255
    118c:	6b e1       	ldi	r22, 0x1B	; 27
    118e:	70 e0       	ldi	r23, 0x00	; 0
    1190:	4a e0       	ldi	r20, 0x0A	; 10
    1192:	50 e0       	ldi	r21, 0x00	; 0
    1194:	0e 94 7e 11 	call	0x22fc	; 0x22fc <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_left);
    1198:	8c e0       	ldi	r24, 0x0C	; 12
    119a:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	sendIRDistance();
    119e:	0e 94 1d 08 	call	0x103a	; 0x103a <sendIRDistance>
}
    11a2:	08 95       	ret

000011a4 <drive>:
/*
 * This function will drive forward by speed of 4 - 25 or backward by a speed of - 4 - (-25) and check
 * wether objects are in the way of the
 * nibo
 */
uint8_t drive(uint8_t speed){
    11a4:	1f 93       	push	r17
    11a6:	18 2f       	mov	r17, r24
	uint8_t out = drive_status_front_free;
	//aktuallisierung des coprozessors
	copro_update();
    11a8:	0e 94 96 10 	call	0x212c	; 0x212c <copro_update>
	copro_resetOdometry(0, 0);
    11ac:	80 e0       	ldi	r24, 0x00	; 0
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	60 e0       	ldi	r22, 0x00	; 0
    11b2:	70 e0       	ldi	r23, 0x00	; 0
    11b4:	0e 94 aa 11 	call	0x2354	; 0x2354 <copro_resetOdometry>

	if(checkDriveDirection() == drive_status_front_free){
    11b8:	0e 94 e5 07 	call	0xfca	; 0xfca <checkDriveDirection>
    11bc:	81 30       	cpi	r24, 0x01	; 1
    11be:	41 f4       	brne	.+16     	; 0x11d0 <drive+0x2c>
		copro_setSpeed(speed,speed);
    11c0:	81 2f       	mov	r24, r17
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	61 2f       	mov	r22, r17
    11c6:	70 e0       	ldi	r23, 0x00	; 0
    11c8:	0e 94 4e 11 	call	0x229c	; 0x229c <copro_setSpeed>
    11cc:	11 e0       	ldi	r17, 0x01	; 1
    11ce:	03 c0       	rjmp	.+6      	; 0x11d6 <drive+0x32>
	}else{
		copro_stop();
    11d0:	0e 94 32 11 	call	0x2264	; 0x2264 <copro_stop>
    11d4:	12 e0       	ldi	r17, 0x02	; 2
		out = drive_status_front_blocked;
	}
	delay(100);
    11d6:	84 e6       	ldi	r24, 0x64	; 100
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
	sendTicks();
    11de:	0e 94 2e 08 	call	0x105c	; 0x105c <sendTicks>
	niboCom_putIRDistance(copro_distance);
    11e2:	87 eb       	ldi	r24, 0xB7	; 183
    11e4:	96 e0       	ldi	r25, 0x06	; 6
    11e6:	0e 94 53 02 	call	0x4a6	; 0x4a6 <niboCom_putIRDistance>
	return out;
}
    11ea:	81 2f       	mov	r24, r17
    11ec:	1f 91       	pop	r17
    11ee:	08 95       	ret

000011f0 <display_write>:
    11f0:	90 91 65 00 	lds	r25, 0x0065
    11f4:	28 2f       	mov	r18, r24
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	a9 01       	movw	r20, r18
    11fc:	41 70       	andi	r20, 0x01	; 1
    11fe:	50 70       	andi	r21, 0x00	; 0
    1200:	20 ff       	sbrs	r18, 0
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	9e 7f       	andi	r25, 0xFE	; 254
    1206:	98 2b       	or	r25, r24
    1208:	90 93 65 00 	sts	0x0065, r25
    120c:	80 91 65 00 	lds	r24, 0x0065
    1210:	41 15       	cp	r20, r1
    1212:	51 05       	cpc	r21, r1
    1214:	11 f4       	brne	.+4      	; 0x121a <display_write+0x2a>
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	01 c0       	rjmp	.+2      	; 0x121c <display_write+0x2c>
    121a:	92 e0       	ldi	r25, 0x02	; 2
    121c:	8d 7f       	andi	r24, 0xFD	; 253
    121e:	89 2b       	or	r24, r25
    1220:	80 93 65 00 	sts	0x0065, r24
    1224:	80 91 65 00 	lds	r24, 0x0065
    1228:	21 fd       	sbrc	r18, 1
    122a:	02 c0       	rjmp	.+4      	; 0x1230 <display_write+0x40>
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	01 c0       	rjmp	.+2      	; 0x1232 <display_write+0x42>
    1230:	98 e0       	ldi	r25, 0x08	; 8
    1232:	87 7f       	andi	r24, 0xF7	; 247
    1234:	89 2b       	or	r24, r25
    1236:	80 93 65 00 	sts	0x0065, r24
    123a:	80 91 65 00 	lds	r24, 0x0065
    123e:	8f 7e       	andi	r24, 0xEF	; 239
    1240:	80 93 65 00 	sts	0x0065, r24
    1244:	8f ef       	ldi	r24, 0xFF	; 255
    1246:	8a bb       	out	0x1a, r24	; 26
    1248:	6b bb       	out	0x1b, r22	; 27
    124a:	85 e0       	ldi	r24, 0x05	; 5
    124c:	98 2f       	mov	r25, r24
    124e:	9a 95       	dec	r25
    1250:	f1 f7       	brne	.-4      	; 0x124e <display_write+0x5e>
    1252:	90 91 65 00 	lds	r25, 0x0065
    1256:	94 60       	ori	r25, 0x04	; 4
    1258:	90 93 65 00 	sts	0x0065, r25
    125c:	98 2f       	mov	r25, r24
    125e:	9a 95       	dec	r25
    1260:	f1 f7       	brne	.-4      	; 0x125e <display_write+0x6e>
    1262:	90 91 65 00 	lds	r25, 0x0065
    1266:	9b 7f       	andi	r25, 0xFB	; 251
    1268:	90 93 65 00 	sts	0x0065, r25
    126c:	8a 95       	dec	r24
    126e:	f1 f7       	brne	.-4      	; 0x126c <display_write+0x7c>
    1270:	1b ba       	out	0x1b, r1	; 27
    1272:	1a ba       	out	0x1a, r1	; 26
    1274:	08 95       	ret

00001276 <display_read>:
    1276:	90 91 65 00 	lds	r25, 0x0065
    127a:	28 2f       	mov	r18, r24
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	80 e0       	ldi	r24, 0x00	; 0
    1280:	a9 01       	movw	r20, r18
    1282:	41 70       	andi	r20, 0x01	; 1
    1284:	50 70       	andi	r21, 0x00	; 0
    1286:	20 ff       	sbrs	r18, 0
    1288:	81 e0       	ldi	r24, 0x01	; 1
    128a:	9e 7f       	andi	r25, 0xFE	; 254
    128c:	98 2b       	or	r25, r24
    128e:	90 93 65 00 	sts	0x0065, r25
    1292:	80 91 65 00 	lds	r24, 0x0065
    1296:	41 15       	cp	r20, r1
    1298:	51 05       	cpc	r21, r1
    129a:	11 f4       	brne	.+4      	; 0x12a0 <display_read+0x2a>
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	01 c0       	rjmp	.+2      	; 0x12a2 <display_read+0x2c>
    12a0:	92 e0       	ldi	r25, 0x02	; 2
    12a2:	8d 7f       	andi	r24, 0xFD	; 253
    12a4:	89 2b       	or	r24, r25
    12a6:	80 93 65 00 	sts	0x0065, r24
    12aa:	80 91 65 00 	lds	r24, 0x0065
    12ae:	21 fd       	sbrc	r18, 1
    12b0:	02 c0       	rjmp	.+4      	; 0x12b6 <display_read+0x40>
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	01 c0       	rjmp	.+2      	; 0x12b8 <display_read+0x42>
    12b6:	98 e0       	ldi	r25, 0x08	; 8
    12b8:	87 7f       	andi	r24, 0xF7	; 247
    12ba:	89 2b       	or	r24, r25
    12bc:	80 93 65 00 	sts	0x0065, r24
    12c0:	80 91 65 00 	lds	r24, 0x0065
    12c4:	80 61       	ori	r24, 0x10	; 16
    12c6:	80 93 65 00 	sts	0x0065, r24
    12ca:	1a ba       	out	0x1a, r1	; 26
    12cc:	25 e0       	ldi	r18, 0x05	; 5
    12ce:	82 2f       	mov	r24, r18
    12d0:	8a 95       	dec	r24
    12d2:	f1 f7       	brne	.-4      	; 0x12d0 <display_read+0x5a>
    12d4:	80 91 65 00 	lds	r24, 0x0065
    12d8:	84 60       	ori	r24, 0x04	; 4
    12da:	80 93 65 00 	sts	0x0065, r24
    12de:	85 e1       	ldi	r24, 0x15	; 21
    12e0:	8a 95       	dec	r24
    12e2:	f1 f7       	brne	.-4      	; 0x12e0 <display_read+0x6a>
    12e4:	89 b3       	in	r24, 0x19	; 25
    12e6:	90 91 65 00 	lds	r25, 0x0065
    12ea:	9b 7f       	andi	r25, 0xFB	; 251
    12ec:	90 93 65 00 	sts	0x0065, r25
    12f0:	92 2f       	mov	r25, r18
    12f2:	9a 95       	dec	r25
    12f4:	f1 f7       	brne	.-4      	; 0x12f2 <display_read+0x7c>
    12f6:	08 95       	ret

000012f8 <display_wait>:
    12f8:	1f 93       	push	r17
    12fa:	cf 93       	push	r28
    12fc:	df 93       	push	r29
    12fe:	90 91 4b 06 	lds	r25, 0x064B
    1302:	99 23       	and	r25, r25
    1304:	71 f0       	breq	.+28     	; 0x1322 <display_wait+0x2a>
    1306:	18 2f       	mov	r17, r24
    1308:	11 70       	andi	r17, 0x01	; 1
    130a:	cf ef       	ldi	r28, 0xFF	; 255
    130c:	df ef       	ldi	r29, 0xFF	; 255
    130e:	81 2f       	mov	r24, r17
    1310:	0e 94 3b 09 	call	0x1276	; 0x1276 <display_read>
    1314:	21 97       	sbiw	r28, 0x01	; 1
    1316:	87 fd       	sbrc	r24, 7
    1318:	02 c0       	rjmp	.+4      	; 0x131e <display_wait+0x26>
    131a:	81 e0       	ldi	r24, 0x01	; 1
    131c:	03 c0       	rjmp	.+6      	; 0x1324 <display_wait+0x2c>
    131e:	20 97       	sbiw	r28, 0x00	; 0
    1320:	b1 f7       	brne	.-20     	; 0x130e <display_wait+0x16>
    1322:	80 e0       	ldi	r24, 0x00	; 0
    1324:	df 91       	pop	r29
    1326:	cf 91       	pop	r28
    1328:	1f 91       	pop	r17
    132a:	08 95       	ret

0000132c <display_init>:
    132c:	8f ef       	ldi	r24, 0xFF	; 255
    132e:	80 93 4b 06 	sts	0x064B, r24
    1332:	80 91 64 00 	lds	r24, 0x0064
    1336:	88 60       	ori	r24, 0x08	; 8
    1338:	80 93 64 00 	sts	0x0064, r24
    133c:	80 91 64 00 	lds	r24, 0x0064
    1340:	80 61       	ori	r24, 0x10	; 16
    1342:	80 93 64 00 	sts	0x0064, r24
    1346:	80 91 64 00 	lds	r24, 0x0064
    134a:	84 60       	ori	r24, 0x04	; 4
    134c:	80 93 64 00 	sts	0x0064, r24
    1350:	80 91 64 00 	lds	r24, 0x0064
    1354:	81 60       	ori	r24, 0x01	; 1
    1356:	80 93 64 00 	sts	0x0064, r24
    135a:	80 91 64 00 	lds	r24, 0x0064
    135e:	82 60       	ori	r24, 0x02	; 2
    1360:	80 93 64 00 	sts	0x0064, r24
    1364:	b8 9a       	sbi	0x17, 0	; 23
    1366:	1a ba       	out	0x1a, r1	; 26
    1368:	80 91 65 00 	lds	r24, 0x0065
    136c:	87 7f       	andi	r24, 0xF7	; 247
    136e:	80 93 65 00 	sts	0x0065, r24
    1372:	80 91 65 00 	lds	r24, 0x0065
    1376:	8f 7e       	andi	r24, 0xEF	; 239
    1378:	80 93 65 00 	sts	0x0065, r24
    137c:	80 91 65 00 	lds	r24, 0x0065
    1380:	8b 7f       	andi	r24, 0xFB	; 251
    1382:	80 93 65 00 	sts	0x0065, r24
    1386:	80 91 65 00 	lds	r24, 0x0065
    138a:	8e 7f       	andi	r24, 0xFE	; 254
    138c:	80 93 65 00 	sts	0x0065, r24
    1390:	80 91 65 00 	lds	r24, 0x0065
    1394:	8d 7f       	andi	r24, 0xFD	; 253
    1396:	80 93 65 00 	sts	0x0065, r24
    139a:	c0 98       	cbi	0x18, 0	; 24
    139c:	97 9b       	sbis	0x12, 7	; 18
    139e:	07 c0       	rjmp	.+14     	; 0x13ae <display_init+0x82>
    13a0:	97 98       	cbi	0x12, 7	; 18
    13a2:	80 ea       	ldi	r24, 0xA0	; 160
    13a4:	9f e0       	ldi	r25, 0x0F	; 15
    13a6:	01 97       	sbiw	r24, 0x01	; 1
    13a8:	f1 f7       	brne	.-4      	; 0x13a6 <display_init+0x7a>
    13aa:	97 9a       	sbi	0x12, 7	; 18
    13ac:	04 c0       	rjmp	.+8      	; 0x13b6 <display_init+0x8a>
    13ae:	80 ea       	ldi	r24, 0xA0	; 160
    13b0:	9f e0       	ldi	r25, 0x0F	; 15
    13b2:	01 97       	sbiw	r24, 0x01	; 1
    13b4:	f1 f7       	brne	.-4      	; 0x13b2 <display_init+0x86>
    13b6:	c0 9a       	sbi	0x18, 0	; 24
    13b8:	80 e0       	ldi	r24, 0x00	; 0
    13ba:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    13be:	88 23       	and	r24, r24
    13c0:	51 f0       	breq	.+20     	; 0x13d6 <display_init+0xaa>
    13c2:	81 e0       	ldi	r24, 0x01	; 1
    13c4:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    13c8:	88 23       	and	r24, r24
    13ca:	11 f0       	breq	.+4      	; 0x13d0 <display_init+0xa4>
    13cc:	82 e0       	ldi	r24, 0x02	; 2
    13ce:	01 c0       	rjmp	.+2      	; 0x13d2 <display_init+0xa6>
    13d0:	81 e0       	ldi	r24, 0x01	; 1
    13d2:	80 93 4b 06 	sts	0x064B, r24
    13d6:	80 91 4b 06 	lds	r24, 0x064B
    13da:	8f 3f       	cpi	r24, 0xFF	; 255
    13dc:	11 f4       	brne	.+4      	; 0x13e2 <display_init+0xb6>
    13de:	10 92 4b 06 	sts	0x064B, r1
    13e2:	80 91 4b 06 	lds	r24, 0x064B
    13e6:	08 95       	ret

000013e8 <delay>:
    13e8:	20 ea       	ldi	r18, 0xA0	; 160
    13ea:	3f e0       	ldi	r19, 0x0F	; 15
    13ec:	04 c0       	rjmp	.+8      	; 0x13f6 <delay+0xe>
    13ee:	f9 01       	movw	r30, r18
    13f0:	31 97       	sbiw	r30, 0x01	; 1
    13f2:	f1 f7       	brne	.-4      	; 0x13f0 <delay+0x8>
    13f4:	01 97       	sbiw	r24, 0x01	; 1
    13f6:	00 97       	sbiw	r24, 0x00	; 0
    13f8:	d1 f7       	brne	.-12     	; 0x13ee <delay+0x6>
    13fa:	08 95       	ret

000013fc <spi_restart_transmission>:
    13fc:	10 92 88 06 	sts	0x0688, r1
    1400:	80 93 69 06 	sts	0x0669, r24
    1404:	98 2f       	mov	r25, r24
    1406:	9f 5f       	subi	r25, 0xFF	; 255
    1408:	90 93 6b 06 	sts	0x066B, r25
    140c:	96 e9       	ldi	r25, 0x96	; 150
    140e:	90 93 89 06 	sts	0x0689, r25
    1412:	f8 94       	cli
    1414:	03 c0       	rjmp	.+6      	; 0x141c <spi_restart_transmission+0x20>
    1416:	78 94       	sei
    1418:	00 00       	nop
    141a:	f8 94       	cli
    141c:	b0 9b       	sbis	0x16, 0	; 22
    141e:	fb cf       	rjmp	.-10     	; 0x1416 <spi_restart_transmission+0x1a>
    1420:	90 ec       	ldi	r25, 0xC0	; 192
    1422:	9d b9       	out	0x0d, r25	; 13
    1424:	8f b9       	out	0x0f, r24	; 15
    1426:	96 e9       	ldi	r25, 0x96	; 150
    1428:	98 27       	eor	r25, r24
    142a:	90 93 87 06 	sts	0x0687, r25
    142e:	77 9a       	sbi	0x0e, 7	; 14
    1430:	78 94       	sei
    1432:	80 e0       	ldi	r24, 0x00	; 0
    1434:	08 95       	ret

00001436 <spi_init>:
    1436:	b8 98       	cbi	0x17, 0	; 23
    1438:	c0 98       	cbi	0x18, 0	; 24
    143a:	bb 9a       	sbi	0x17, 3	; 23
    143c:	c3 9a       	sbi	0x18, 3	; 24
    143e:	80 e0       	ldi	r24, 0x00	; 0
    1440:	0e 94 fe 09 	call	0x13fc	; 0x13fc <spi_restart_transmission>
    1444:	08 95       	ret

00001446 <__vector_17>:
    1446:	1f 92       	push	r1
    1448:	0f 92       	push	r0
    144a:	0f b6       	in	r0, 0x3f	; 63
    144c:	0f 92       	push	r0
    144e:	0b b6       	in	r0, 0x3b	; 59
    1450:	0f 92       	push	r0
    1452:	11 24       	eor	r1, r1
    1454:	2f 93       	push	r18
    1456:	3f 93       	push	r19
    1458:	4f 93       	push	r20
    145a:	5f 93       	push	r21
    145c:	6f 93       	push	r22
    145e:	7f 93       	push	r23
    1460:	8f 93       	push	r24
    1462:	9f 93       	push	r25
    1464:	af 93       	push	r26
    1466:	bf 93       	push	r27
    1468:	ef 93       	push	r30
    146a:	ff 93       	push	r31
    146c:	9f b1       	in	r25, 0x0f	; 15
    146e:	20 91 89 06 	lds	r18, 0x0689
    1472:	29 27       	eor	r18, r25
    1474:	20 93 89 06 	sts	0x0689, r18
    1478:	80 91 88 06 	lds	r24, 0x0688
    147c:	88 23       	and	r24, r24
    147e:	b1 f4       	brne	.+44     	; 0x14ac <__vector_17+0x66>
    1480:	90 93 67 06 	sts	0x0667, r25
    1484:	9c 31       	cpi	r25, 0x1C	; 28
    1486:	30 f0       	brcs	.+12     	; 0x1494 <__vector_17+0x4e>
    1488:	10 92 69 06 	sts	0x0669, r1
    148c:	10 92 67 06 	sts	0x0667, r1
    1490:	91 e0       	ldi	r25, 0x01	; 1
    1492:	09 c0       	rjmp	.+18     	; 0x14a6 <__vector_17+0x60>
    1494:	49 2f       	mov	r20, r25
    1496:	50 e0       	ldi	r21, 0x00	; 0
    1498:	20 91 6b 06 	lds	r18, 0x066B
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	42 17       	cp	r20, r18
    14a0:	53 07       	cpc	r21, r19
    14a2:	fc f0       	brlt	.+62     	; 0x14e2 <__vector_17+0x9c>
    14a4:	9f 5f       	subi	r25, 0xFF	; 255
    14a6:	90 93 6b 06 	sts	0x066B, r25
    14aa:	1b c0       	rjmp	.+54     	; 0x14e2 <__vector_17+0x9c>
    14ac:	48 2f       	mov	r20, r24
    14ae:	50 e0       	ldi	r21, 0x00	; 0
    14b0:	60 91 67 06 	lds	r22, 0x0667
    14b4:	70 e0       	ldi	r23, 0x00	; 0
    14b6:	64 17       	cp	r22, r20
    14b8:	75 07       	cpc	r23, r21
    14ba:	2c f0       	brlt	.+10     	; 0x14c6 <__vector_17+0x80>
    14bc:	45 59       	subi	r20, 0x95	; 149
    14be:	59 4f       	sbci	r21, 0xF9	; 249
    14c0:	fa 01       	movw	r30, r20
    14c2:	90 83       	st	Z, r25
    14c4:	0e c0       	rjmp	.+28     	; 0x14e2 <__vector_17+0x9c>
    14c6:	41 50       	subi	r20, 0x01	; 1
    14c8:	50 40       	sbci	r21, 0x00	; 0
    14ca:	46 17       	cp	r20, r22
    14cc:	57 07       	cpc	r21, r23
    14ce:	49 f4       	brne	.+18     	; 0x14e2 <__vector_17+0x9c>
    14d0:	22 23       	and	r18, r18
    14d2:	39 f0       	breq	.+14     	; 0x14e2 <__vector_17+0x9c>
    14d4:	90 91 68 06 	lds	r25, 0x0668
    14d8:	9f 5f       	subi	r25, 0xFF	; 255
    14da:	90 93 68 06 	sts	0x0668, r25
    14de:	10 92 67 06 	sts	0x0667, r1
    14e2:	90 91 69 06 	lds	r25, 0x0669
    14e6:	89 17       	cp	r24, r25
    14e8:	50 f4       	brcc	.+20     	; 0x14fe <__vector_17+0xb8>
    14ea:	e8 2f       	mov	r30, r24
    14ec:	f0 e0       	ldi	r31, 0x00	; 0
    14ee:	e4 5b       	subi	r30, 0xB4	; 180
    14f0:	f9 4f       	sbci	r31, 0xF9	; 249
    14f2:	20 81       	ld	r18, Z
    14f4:	2f b9       	out	0x0f, r18	; 15
    14f6:	90 91 87 06 	lds	r25, 0x0687
    14fa:	92 27       	eor	r25, r18
    14fc:	11 c0       	rjmp	.+34     	; 0x1520 <__vector_17+0xda>
    14fe:	89 17       	cp	r24, r25
    1500:	31 f4       	brne	.+12     	; 0x150e <__vector_17+0xc8>
    1502:	90 91 87 06 	lds	r25, 0x0687
    1506:	9f b9       	out	0x0f, r25	; 15
    1508:	10 92 87 06 	sts	0x0687, r1
    150c:	0b c0       	rjmp	.+22     	; 0x1524 <__vector_17+0xde>
    150e:	90 91 6b 06 	lds	r25, 0x066B
    1512:	89 17       	cp	r24, r25
    1514:	58 f4       	brcc	.+22     	; 0x152c <__vector_17+0xe6>
    1516:	9f ef       	ldi	r25, 0xFF	; 255
    1518:	9f b9       	out	0x0f, r25	; 15
    151a:	90 91 87 06 	lds	r25, 0x0687
    151e:	90 95       	com	r25
    1520:	90 93 87 06 	sts	0x0687, r25
    1524:	8f 5f       	subi	r24, 0xFF	; 255
    1526:	80 93 88 06 	sts	0x0688, r24
    152a:	11 c0       	rjmp	.+34     	; 0x154e <__vector_17+0x108>
    152c:	b8 98       	cbi	0x17, 0	; 23
    152e:	c0 98       	cbi	0x18, 0	; 24
    1530:	1d b8       	out	0x0d, r1	; 13
    1532:	b8 98       	cbi	0x17, 0	; 23
    1534:	c0 98       	cbi	0x18, 0	; 24
    1536:	80 91 6a 06 	lds	r24, 0x066A
    153a:	8f 5f       	subi	r24, 0xFF	; 255
    153c:	80 93 6a 06 	sts	0x066A, r24
    1540:	78 94       	sei
    1542:	80 91 67 06 	lds	r24, 0x0667
    1546:	0e 94 09 12 	call	0x2412	; 0x2412 <spi_finished_callback>
    154a:	0e 94 fe 09 	call	0x13fc	; 0x13fc <spi_restart_transmission>
    154e:	ff 91       	pop	r31
    1550:	ef 91       	pop	r30
    1552:	bf 91       	pop	r27
    1554:	af 91       	pop	r26
    1556:	9f 91       	pop	r25
    1558:	8f 91       	pop	r24
    155a:	7f 91       	pop	r23
    155c:	6f 91       	pop	r22
    155e:	5f 91       	pop	r21
    1560:	4f 91       	pop	r20
    1562:	3f 91       	pop	r19
    1564:	2f 91       	pop	r18
    1566:	0f 90       	pop	r0
    1568:	0b be       	out	0x3b, r0	; 59
    156a:	0f 90       	pop	r0
    156c:	0f be       	out	0x3f, r0	; 63
    156e:	0f 90       	pop	r0
    1570:	1f 90       	pop	r1
    1572:	18 95       	reti

00001574 <gfx_get_x>:
    1574:	80 91 8d 06 	lds	r24, 0x068D
    1578:	08 95       	ret

0000157a <gfx_get_y>:
    157a:	80 91 96 06 	lds	r24, 0x0696
    157e:	08 95       	ret

00001580 <gfx_draw_mode>:
    1580:	80 93 8a 06 	sts	0x068A, r24
    1584:	08 95       	ret

00001586 <gfx_char_width>:
    1586:	98 2f       	mov	r25, r24
    1588:	90 52       	subi	r25, 0x20	; 32
    158a:	90 36       	cpi	r25, 0x60	; 96
    158c:	08 f0       	brcs	.+2      	; 0x1590 <gfx_char_width+0xa>
    158e:	80 e8       	ldi	r24, 0x80	; 128
    1590:	80 52       	subi	r24, 0x20	; 32
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	fc 01       	movw	r30, r24
    1596:	ee 0f       	add	r30, r30
    1598:	ff 1f       	adc	r31, r31
    159a:	e8 0f       	add	r30, r24
    159c:	f9 1f       	adc	r31, r25
    159e:	ee 0f       	add	r30, r30
    15a0:	ff 1f       	adc	r31, r31
    15a2:	ea 5b       	subi	r30, 0xBA	; 186
    15a4:	fd 4f       	sbci	r31, 0xFD	; 253
    15a6:	90 81       	ld	r25, Z
    15a8:	80 91 8c 06 	lds	r24, 0x068C
    15ac:	88 23       	and	r24, r24
    15ae:	09 f4       	brne	.+2      	; 0x15b2 <gfx_char_width+0x2c>
    15b0:	9f e1       	ldi	r25, 0x1F	; 31
    15b2:	80 e0       	ldi	r24, 0x00	; 0
    15b4:	20 e0       	ldi	r18, 0x00	; 0
    15b6:	90 fd       	sbrc	r25, 0
    15b8:	8f 5f       	subi	r24, 0xFF	; 255
    15ba:	2f 5f       	subi	r18, 0xFF	; 255
    15bc:	25 30       	cpi	r18, 0x05	; 5
    15be:	11 f0       	breq	.+4      	; 0x15c4 <gfx_char_width+0x3e>
    15c0:	96 95       	lsr	r25
    15c2:	f9 cf       	rjmp	.-14     	; 0x15b6 <gfx_char_width+0x30>
    15c4:	08 95       	ret

000015c6 <gfx_text_width>:
    15c6:	1f 93       	push	r17
    15c8:	cf 93       	push	r28
    15ca:	df 93       	push	r29
    15cc:	ec 01       	movw	r28, r24
    15ce:	10 e0       	ldi	r17, 0x00	; 0
    15d0:	05 c0       	rjmp	.+10     	; 0x15dc <gfx_text_width+0x16>
    15d2:	21 96       	adiw	r28, 0x01	; 1
    15d4:	0e 94 c3 0a 	call	0x1586	; 0x1586 <gfx_char_width>
    15d8:	8f 5f       	subi	r24, 0xFF	; 255
    15da:	18 0f       	add	r17, r24
    15dc:	88 81       	ld	r24, Y
    15de:	88 23       	and	r24, r24
    15e0:	c1 f7       	brne	.-16     	; 0x15d2 <gfx_text_width+0xc>
    15e2:	81 2f       	mov	r24, r17
    15e4:	df 91       	pop	r29
    15e6:	cf 91       	pop	r28
    15e8:	1f 91       	pop	r17
    15ea:	08 95       	ret

000015ec <gfx_text_width_P>:
    15ec:	1f 93       	push	r17
    15ee:	cf 93       	push	r28
    15f0:	df 93       	push	r29
    15f2:	ec 01       	movw	r28, r24
    15f4:	10 e0       	ldi	r17, 0x00	; 0
    15f6:	07 c0       	rjmp	.+14     	; 0x1606 <gfx_text_width_P+0x1a>
    15f8:	21 96       	adiw	r28, 0x01	; 1
    15fa:	f9 01       	movw	r30, r18
    15fc:	84 91       	lpm	r24, Z+
    15fe:	0e 94 c3 0a 	call	0x1586	; 0x1586 <gfx_char_width>
    1602:	8f 5f       	subi	r24, 0xFF	; 255
    1604:	18 0f       	add	r17, r24
    1606:	9e 01       	movw	r18, r28
    1608:	fe 01       	movw	r30, r28
    160a:	94 91       	lpm	r25, Z+
    160c:	99 23       	and	r25, r25
    160e:	a1 f7       	brne	.-24     	; 0x15f8 <gfx_text_width_P+0xc>
    1610:	81 2f       	mov	r24, r17
    1612:	df 91       	pop	r29
    1614:	cf 91       	pop	r28
    1616:	1f 91       	pop	r17
    1618:	08 95       	ret

0000161a <gfx_set_proportional>:
    161a:	80 93 8c 06 	sts	0x068C, r24
    161e:	08 95       	ret

00001620 <gfx_get_proportional>:
    1620:	80 91 8c 06 	lds	r24, 0x068C
    1624:	08 95       	ret

00001626 <gfx_term_goto>:
    1626:	86 31       	cpi	r24, 0x16	; 22
    1628:	30 f4       	brcc	.+12     	; 0x1636 <gfx_term_goto+0x10>
    162a:	68 30       	cpi	r22, 0x08	; 8
    162c:	20 f4       	brcc	.+8      	; 0x1636 <gfx_term_goto+0x10>
    162e:	60 93 8b 06 	sts	0x068B, r22
    1632:	80 93 97 06 	sts	0x0697, r24
    1636:	08 95       	ret

00001638 <gfx_store_disp_tile>:
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	df 93       	push	r29
    163e:	cf 93       	push	r28
    1640:	0f 92       	push	r0
    1642:	cd b7       	in	r28, 0x3d	; 61
    1644:	de b7       	in	r29, 0x3e	; 62
    1646:	18 2f       	mov	r17, r24
    1648:	68 54       	subi	r22, 0x48	; 72
    164a:	88 30       	cpi	r24, 0x08	; 8
    164c:	18 f5       	brcc	.+70     	; 0x1694 <gfx_store_disp_tile+0x5c>
    164e:	80 e0       	ldi	r24, 0x00	; 0
    1650:	69 83       	std	Y+1, r22	; 0x01
    1652:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1656:	80 e0       	ldi	r24, 0x00	; 0
    1658:	69 81       	ldd	r22, Y+1	; 0x01
    165a:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    165e:	80 e0       	ldi	r24, 0x00	; 0
    1660:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1664:	61 2f       	mov	r22, r17
    1666:	66 0f       	add	r22, r22
    1668:	66 0f       	add	r22, r22
    166a:	66 0f       	add	r22, r22
    166c:	60 5c       	subi	r22, 0xC0	; 192
    166e:	80 e0       	ldi	r24, 0x00	; 0
    1670:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1674:	0e e8       	ldi	r16, 0x8E	; 142
    1676:	16 e0       	ldi	r17, 0x06	; 6
    1678:	82 e0       	ldi	r24, 0x02	; 2
    167a:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    167e:	82 e0       	ldi	r24, 0x02	; 2
    1680:	f8 01       	movw	r30, r16
    1682:	61 91       	ld	r22, Z+
    1684:	8f 01       	movw	r16, r30
    1686:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    168a:	f6 e0       	ldi	r31, 0x06	; 6
    168c:	06 39       	cpi	r16, 0x96	; 150
    168e:	1f 07       	cpc	r17, r31
    1690:	99 f7       	brne	.-26     	; 0x1678 <gfx_store_disp_tile+0x40>
    1692:	23 c0       	rjmp	.+70     	; 0x16da <gfx_store_disp_tile+0xa2>
    1694:	18 50       	subi	r17, 0x08	; 8
    1696:	81 e0       	ldi	r24, 0x01	; 1
    1698:	69 83       	std	Y+1, r22	; 0x01
    169a:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	69 81       	ldd	r22, Y+1	; 0x01
    16a2:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    16a6:	81 e0       	ldi	r24, 0x01	; 1
    16a8:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    16ac:	61 2f       	mov	r22, r17
    16ae:	66 0f       	add	r22, r22
    16b0:	66 0f       	add	r22, r22
    16b2:	66 0f       	add	r22, r22
    16b4:	60 5c       	subi	r22, 0xC0	; 192
    16b6:	81 e0       	ldi	r24, 0x01	; 1
    16b8:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    16bc:	0e e8       	ldi	r16, 0x8E	; 142
    16be:	16 e0       	ldi	r17, 0x06	; 6
    16c0:	83 e0       	ldi	r24, 0x03	; 3
    16c2:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    16c6:	83 e0       	ldi	r24, 0x03	; 3
    16c8:	f8 01       	movw	r30, r16
    16ca:	61 91       	ld	r22, Z+
    16cc:	8f 01       	movw	r16, r30
    16ce:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    16d2:	f6 e0       	ldi	r31, 0x06	; 6
    16d4:	06 39       	cpi	r16, 0x96	; 150
    16d6:	1f 07       	cpc	r17, r31
    16d8:	99 f7       	brne	.-26     	; 0x16c0 <gfx_store_disp_tile+0x88>
    16da:	0f 90       	pop	r0
    16dc:	cf 91       	pop	r28
    16de:	df 91       	pop	r29
    16e0:	1f 91       	pop	r17
    16e2:	0f 91       	pop	r16
    16e4:	08 95       	ret

000016e6 <gfx_fill>:
    16e6:	ff 92       	push	r15
    16e8:	0f 93       	push	r16
    16ea:	1f 93       	push	r17
    16ec:	f8 2e       	mov	r15, r24
    16ee:	18 eb       	ldi	r17, 0xB8	; 184
    16f0:	80 e0       	ldi	r24, 0x00	; 0
    16f2:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    16fc:	80 e0       	ldi	r24, 0x00	; 0
    16fe:	61 2f       	mov	r22, r17
    1700:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	61 2f       	mov	r22, r17
    1708:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    170c:	00 e0       	ldi	r16, 0x00	; 0
    170e:	82 e0       	ldi	r24, 0x02	; 2
    1710:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1714:	83 e0       	ldi	r24, 0x03	; 3
    1716:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    171a:	82 e0       	ldi	r24, 0x02	; 2
    171c:	6f 2d       	mov	r22, r15
    171e:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1722:	83 e0       	ldi	r24, 0x03	; 3
    1724:	6f 2d       	mov	r22, r15
    1726:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    172a:	0f 5f       	subi	r16, 0xFF	; 255
    172c:	00 34       	cpi	r16, 0x40	; 64
    172e:	79 f7       	brne	.-34     	; 0x170e <gfx_fill+0x28>
    1730:	1f 5f       	subi	r17, 0xFF	; 255
    1732:	10 3c       	cpi	r17, 0xC0	; 192
    1734:	e9 f6       	brne	.-70     	; 0x16f0 <gfx_fill+0xa>
    1736:	80 e0       	ldi	r24, 0x00	; 0
    1738:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    173c:	81 e0       	ldi	r24, 0x01	; 1
    173e:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1742:	80 e0       	ldi	r24, 0x00	; 0
    1744:	68 eb       	ldi	r22, 0xB8	; 184
    1746:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    174a:	81 e0       	ldi	r24, 0x01	; 1
    174c:	68 eb       	ldi	r22, 0xB8	; 184
    174e:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1752:	1f 91       	pop	r17
    1754:	0f 91       	pop	r16
    1756:	ff 90       	pop	r15
    1758:	08 95       	ret

0000175a <gfx_term_clear>:
    175a:	80 e0       	ldi	r24, 0x00	; 0
    175c:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <gfx_fill>
    1760:	10 92 8b 06 	sts	0x068B, r1
    1764:	10 92 97 06 	sts	0x0697, r1
    1768:	08 95       	ret

0000176a <gfx_init>:
    176a:	80 e0       	ldi	r24, 0x00	; 0
    176c:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1770:	80 e0       	ldi	r24, 0x00	; 0
    1772:	6f e3       	ldi	r22, 0x3F	; 63
    1774:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1778:	80 e0       	ldi	r24, 0x00	; 0
    177a:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    177e:	80 e0       	ldi	r24, 0x00	; 0
    1780:	60 ec       	ldi	r22, 0xC0	; 192
    1782:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1786:	80 e0       	ldi	r24, 0x00	; 0
    1788:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    178c:	80 e0       	ldi	r24, 0x00	; 0
    178e:	60 e4       	ldi	r22, 0x40	; 64
    1790:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    179a:	80 e0       	ldi	r24, 0x00	; 0
    179c:	68 eb       	ldi	r22, 0xB8	; 184
    179e:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    17a2:	81 e0       	ldi	r24, 0x01	; 1
    17a4:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	6f e3       	ldi	r22, 0x3F	; 63
    17ac:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    17b0:	81 e0       	ldi	r24, 0x01	; 1
    17b2:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	60 ec       	ldi	r22, 0xC0	; 192
    17ba:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    17be:	81 e0       	ldi	r24, 0x01	; 1
    17c0:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    17c4:	81 e0       	ldi	r24, 0x01	; 1
    17c6:	60 e4       	ldi	r22, 0x40	; 64
    17c8:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    17d2:	81 e0       	ldi	r24, 0x01	; 1
    17d4:	68 eb       	ldi	r22, 0xB8	; 184
    17d6:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    17da:	80 e0       	ldi	r24, 0x00	; 0
    17dc:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <gfx_fill>
    17e0:	81 e0       	ldi	r24, 0x01	; 1
    17e2:	80 93 8a 06 	sts	0x068A, r24
    17e6:	08 95       	ret

000017e8 <gfx_move>:
    17e8:	0f 93       	push	r16
    17ea:	1f 93       	push	r17
    17ec:	18 2f       	mov	r17, r24
    17ee:	06 2f       	mov	r16, r22
    17f0:	80 93 8d 06 	sts	0x068D, r24
    17f4:	60 93 96 06 	sts	0x0696, r22
    17f8:	80 e0       	ldi	r24, 0x00	; 0
    17fa:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1804:	06 95       	lsr	r16
    1806:	06 95       	lsr	r16
    1808:	06 95       	lsr	r16
    180a:	08 54       	subi	r16, 0x48	; 72
    180c:	80 e0       	ldi	r24, 0x00	; 0
    180e:	60 2f       	mov	r22, r16
    1810:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1814:	81 e0       	ldi	r24, 0x01	; 1
    1816:	60 2f       	mov	r22, r16
    1818:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    181c:	80 e0       	ldi	r24, 0x00	; 0
    181e:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1822:	81 e0       	ldi	r24, 0x01	; 1
    1824:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1828:	11 34       	cpi	r17, 0x41	; 65
    182a:	38 f0       	brcs	.+14     	; 0x183a <gfx_move+0x52>
    182c:	80 e0       	ldi	r24, 0x00	; 0
    182e:	60 e4       	ldi	r22, 0x40	; 64
    1830:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	61 2f       	mov	r22, r17
    1838:	07 c0       	rjmp	.+14     	; 0x1848 <gfx_move+0x60>
    183a:	61 2f       	mov	r22, r17
    183c:	60 5c       	subi	r22, 0xC0	; 192
    183e:	80 e0       	ldi	r24, 0x00	; 0
    1840:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1844:	81 e0       	ldi	r24, 0x01	; 1
    1846:	60 e4       	ldi	r22, 0x40	; 64
    1848:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    184c:	1f 91       	pop	r17
    184e:	0f 91       	pop	r16
    1850:	08 95       	ret

00001852 <gfx_term_scroll>:
    1852:	ef 92       	push	r14
    1854:	ff 92       	push	r15
    1856:	0f 93       	push	r16
    1858:	1f 93       	push	r17
    185a:	cf 93       	push	r28
    185c:	df 93       	push	r29
    185e:	19 eb       	ldi	r17, 0xB9	; 185
    1860:	47 c0       	rjmp	.+142    	; 0x18f0 <gfx_term_scroll+0x9e>
    1862:	08 30       	cpi	r16, 0x08	; 8
    1864:	e8 f4       	brcc	.+58     	; 0x18a0 <gfx_term_scroll+0x4e>
    1866:	80 e0       	ldi	r24, 0x00	; 0
    1868:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    186c:	80 e0       	ldi	r24, 0x00	; 0
    186e:	61 2f       	mov	r22, r17
    1870:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1874:	80 e0       	ldi	r24, 0x00	; 0
    1876:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    187a:	6f 2d       	mov	r22, r15
    187c:	60 5c       	subi	r22, 0xC0	; 192
    187e:	80 e0       	ldi	r24, 0x00	; 0
    1880:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    1884:	82 e0       	ldi	r24, 0x02	; 2
    1886:	0e 94 3b 09 	call	0x1276	; 0x1276 <display_read>
    188a:	ce e8       	ldi	r28, 0x8E	; 142
    188c:	d6 e0       	ldi	r29, 0x06	; 6
    188e:	82 e0       	ldi	r24, 0x02	; 2
    1890:	0e 94 3b 09 	call	0x1276	; 0x1276 <display_read>
    1894:	89 93       	st	Y+, r24
    1896:	86 e0       	ldi	r24, 0x06	; 6
    1898:	c6 39       	cpi	r28, 0x96	; 150
    189a:	d8 07       	cpc	r29, r24
    189c:	c1 f7       	brne	.-16     	; 0x188e <gfx_term_scroll+0x3c>
    189e:	1b c0       	rjmp	.+54     	; 0x18d6 <gfx_term_scroll+0x84>
    18a0:	81 e0       	ldi	r24, 0x01	; 1
    18a2:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    18a6:	81 e0       	ldi	r24, 0x01	; 1
    18a8:	61 2f       	mov	r22, r17
    18aa:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    18ae:	81 e0       	ldi	r24, 0x01	; 1
    18b0:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	6f 2d       	mov	r22, r15
    18b8:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    18bc:	83 e0       	ldi	r24, 0x03	; 3
    18be:	0e 94 3b 09 	call	0x1276	; 0x1276 <display_read>
    18c2:	ce e8       	ldi	r28, 0x8E	; 142
    18c4:	d6 e0       	ldi	r29, 0x06	; 6
    18c6:	83 e0       	ldi	r24, 0x03	; 3
    18c8:	0e 94 3b 09 	call	0x1276	; 0x1276 <display_read>
    18cc:	89 93       	st	Y+, r24
    18ce:	86 e0       	ldi	r24, 0x06	; 6
    18d0:	c6 39       	cpi	r28, 0x96	; 150
    18d2:	d8 07       	cpc	r29, r24
    18d4:	c1 f7       	brne	.-16     	; 0x18c6 <gfx_term_scroll+0x74>
    18d6:	80 2f       	mov	r24, r16
    18d8:	6e 2d       	mov	r22, r14
    18da:	0e 94 1c 0b 	call	0x1638	; 0x1638 <gfx_store_disp_tile>
    18de:	0f 5f       	subi	r16, 0xFF	; 255
    18e0:	88 e0       	ldi	r24, 0x08	; 8
    18e2:	f8 0e       	add	r15, r24
    18e4:	00 31       	cpi	r16, 0x10	; 16
    18e6:	09 f0       	breq	.+2      	; 0x18ea <gfx_term_scroll+0x98>
    18e8:	bc cf       	rjmp	.-136    	; 0x1862 <gfx_term_scroll+0x10>
    18ea:	1f 5f       	subi	r17, 0xFF	; 255
    18ec:	10 3c       	cpi	r17, 0xC0	; 192
    18ee:	31 f0       	breq	.+12     	; 0x18fc <gfx_term_scroll+0xaa>
    18f0:	ff 24       	eor	r15, r15
    18f2:	00 e0       	ldi	r16, 0x00	; 0
    18f4:	37 e4       	ldi	r19, 0x47	; 71
    18f6:	e3 2e       	mov	r14, r19
    18f8:	e1 0e       	add	r14, r17
    18fa:	b3 cf       	rjmp	.-154    	; 0x1862 <gfx_term_scroll+0x10>
    18fc:	ee e8       	ldi	r30, 0x8E	; 142
    18fe:	f6 e0       	ldi	r31, 0x06	; 6
    1900:	11 92       	st	Z+, r1
    1902:	86 e0       	ldi	r24, 0x06	; 6
    1904:	e6 39       	cpi	r30, 0x96	; 150
    1906:	f8 07       	cpc	r31, r24
    1908:	d9 f7       	brne	.-10     	; 0x1900 <gfx_term_scroll+0xae>
    190a:	10 e0       	ldi	r17, 0x00	; 0
    190c:	81 2f       	mov	r24, r17
    190e:	67 e0       	ldi	r22, 0x07	; 7
    1910:	0e 94 1c 0b 	call	0x1638	; 0x1638 <gfx_store_disp_tile>
    1914:	1f 5f       	subi	r17, 0xFF	; 255
    1916:	10 31       	cpi	r17, 0x10	; 16
    1918:	c9 f7       	brne	.-14     	; 0x190c <gfx_term_scroll+0xba>
    191a:	80 91 8b 06 	lds	r24, 0x068B
    191e:	88 23       	and	r24, r24
    1920:	19 f0       	breq	.+6      	; 0x1928 <gfx_term_scroll+0xd6>
    1922:	81 50       	subi	r24, 0x01	; 1
    1924:	80 93 8b 06 	sts	0x068B, r24
    1928:	df 91       	pop	r29
    192a:	cf 91       	pop	r28
    192c:	1f 91       	pop	r17
    192e:	0f 91       	pop	r16
    1930:	ff 90       	pop	r15
    1932:	ef 90       	pop	r14
    1934:	08 95       	ret

00001936 <gfx_display_write2>:
    1936:	ef 92       	push	r14
    1938:	ff 92       	push	r15
    193a:	0f 93       	push	r16
    193c:	1f 93       	push	r17
    193e:	e8 2e       	mov	r14, r24
    1940:	16 2f       	mov	r17, r22
    1942:	80 91 8d 06 	lds	r24, 0x068D
    1946:	87 fd       	sbrc	r24, 7
    1948:	39 c0       	rjmp	.+114    	; 0x19bc <gfx_display_write2+0x86>
    194a:	00 e0       	ldi	r16, 0x00	; 0
    194c:	80 34       	cpi	r24, 0x40	; 64
    194e:	08 f0       	brcs	.+2      	; 0x1952 <gfx_display_write2+0x1c>
    1950:	01 e0       	ldi	r16, 0x01	; 1
    1952:	80 2f       	mov	r24, r16
    1954:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1958:	42 e0       	ldi	r20, 0x02	; 2
    195a:	f4 2e       	mov	r15, r20
    195c:	f0 0e       	add	r15, r16
    195e:	8f 2d       	mov	r24, r15
    1960:	0e 94 3b 09 	call	0x1276	; 0x1276 <display_read>
    1964:	8f 2d       	mov	r24, r15
    1966:	0e 94 3b 09 	call	0x1276	; 0x1276 <display_read>
    196a:	90 91 8a 06 	lds	r25, 0x068A
    196e:	92 ff       	sbrs	r25, 2
    1970:	02 c0       	rjmp	.+4      	; 0x1976 <gfx_display_write2+0x40>
    1972:	e0 94       	com	r14
    1974:	9b 7f       	andi	r25, 0xFB	; 251
    1976:	e1 22       	and	r14, r17
    1978:	99 23       	and	r25, r25
    197a:	19 f4       	brne	.+6      	; 0x1982 <gfx_display_write2+0x4c>
    197c:	1e 2d       	mov	r17, r14
    197e:	18 2b       	or	r17, r24
    1980:	08 c0       	rjmp	.+16     	; 0x1992 <gfx_display_write2+0x5c>
    1982:	91 30       	cpi	r25, 0x01	; 1
    1984:	21 f4       	brne	.+8      	; 0x198e <gfx_display_write2+0x58>
    1986:	10 95       	com	r17
    1988:	18 23       	and	r17, r24
    198a:	1e 29       	or	r17, r14
    198c:	02 c0       	rjmp	.+4      	; 0x1992 <gfx_display_write2+0x5c>
    198e:	1e 2d       	mov	r17, r14
    1990:	18 27       	eor	r17, r24
    1992:	80 2f       	mov	r24, r16
    1994:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    1998:	60 91 8d 06 	lds	r22, 0x068D
    199c:	60 64       	ori	r22, 0x40	; 64
    199e:	80 2f       	mov	r24, r16
    19a0:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    19a4:	80 2f       	mov	r24, r16
    19a6:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <display_wait>
    19aa:	8f 2d       	mov	r24, r15
    19ac:	61 2f       	mov	r22, r17
    19ae:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <display_write>
    19b2:	80 91 8d 06 	lds	r24, 0x068D
    19b6:	8f 5f       	subi	r24, 0xFF	; 255
    19b8:	80 93 8d 06 	sts	0x068D, r24
    19bc:	1f 91       	pop	r17
    19be:	0f 91       	pop	r16
    19c0:	ff 90       	pop	r15
    19c2:	ef 90       	pop	r14
    19c4:	08 95       	ret

000019c6 <gfx_pixel>:
    19c6:	90 91 96 06 	lds	r25, 0x0696
    19ca:	97 70       	andi	r25, 0x07	; 7
    19cc:	61 e0       	ldi	r22, 0x01	; 1
    19ce:	70 e0       	ldi	r23, 0x00	; 0
    19d0:	02 c0       	rjmp	.+4      	; 0x19d6 <gfx_pixel+0x10>
    19d2:	66 0f       	add	r22, r22
    19d4:	77 1f       	adc	r23, r23
    19d6:	9a 95       	dec	r25
    19d8:	e2 f7       	brpl	.-8      	; 0x19d2 <gfx_pixel+0xc>
    19da:	88 23       	and	r24, r24
    19dc:	11 f0       	breq	.+4      	; 0x19e2 <gfx_pixel+0x1c>
    19de:	86 2f       	mov	r24, r22
    19e0:	02 c0       	rjmp	.+4      	; 0x19e6 <gfx_pixel+0x20>
    19e2:	86 2f       	mov	r24, r22
    19e4:	60 e0       	ldi	r22, 0x00	; 0
    19e6:	0e 94 9b 0c 	call	0x1936	; 0x1936 <gfx_display_write2>
    19ea:	08 95       	ret

000019ec <gfx_draw_xbm_P>:
    19ec:	2f 92       	push	r2
    19ee:	3f 92       	push	r3
    19f0:	4f 92       	push	r4
    19f2:	5f 92       	push	r5
    19f4:	6f 92       	push	r6
    19f6:	7f 92       	push	r7
    19f8:	8f 92       	push	r8
    19fa:	9f 92       	push	r9
    19fc:	af 92       	push	r10
    19fe:	bf 92       	push	r11
    1a00:	cf 92       	push	r12
    1a02:	df 92       	push	r13
    1a04:	ef 92       	push	r14
    1a06:	ff 92       	push	r15
    1a08:	0f 93       	push	r16
    1a0a:	1f 93       	push	r17
    1a0c:	df 93       	push	r29
    1a0e:	cf 93       	push	r28
    1a10:	00 d0       	rcall	.+0      	; 0x1a12 <gfx_draw_xbm_P+0x26>
    1a12:	00 d0       	rcall	.+0      	; 0x1a14 <gfx_draw_xbm_P+0x28>
    1a14:	00 d0       	rcall	.+0      	; 0x1a16 <gfx_draw_xbm_P+0x2a>
    1a16:	cd b7       	in	r28, 0x3d	; 61
    1a18:	de b7       	in	r29, 0x3e	; 62
    1a1a:	08 2f       	mov	r16, r24
    1a1c:	16 2f       	mov	r17, r22
    1a1e:	5a 83       	std	Y+2, r21	; 0x02
    1a20:	49 83       	std	Y+1, r20	; 0x01
    1a22:	60 90 8d 06 	lds	r6, 0x068D
    1a26:	e0 90 96 06 	lds	r14, 0x0696
    1a2a:	8e 2d       	mov	r24, r14
    1a2c:	87 70       	andi	r24, 0x07	; 7
    1a2e:	2f ef       	ldi	r18, 0xFF	; 255
    1a30:	30 e0       	ldi	r19, 0x00	; 0
    1a32:	f2 2e       	mov	r15, r18
    1a34:	01 c0       	rjmp	.+2      	; 0x1a38 <gfx_draw_xbm_P+0x4c>
    1a36:	ff 0c       	add	r15, r15
    1a38:	8a 95       	dec	r24
    1a3a:	ea f7       	brpl	.-6      	; 0x1a36 <gfx_draw_xbm_P+0x4a>
    1a3c:	80 2f       	mov	r24, r16
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	01 97       	sbiw	r24, 0x01	; 1
    1a42:	68 e0       	ldi	r22, 0x08	; 8
    1a44:	70 e0       	ldi	r23, 0x00	; 0
    1a46:	0e 94 8e 1b 	call	0x371c	; 0x371c <__divmodhi4>
    1a4a:	6f 5f       	subi	r22, 0xFF	; 255
    1a4c:	a6 2e       	mov	r10, r22
    1a4e:	bb 24       	eor	r11, r11
    1a50:	c5 01       	movw	r24, r10
    1a52:	73 e0       	ldi	r23, 0x03	; 3
    1a54:	88 0f       	add	r24, r24
    1a56:	99 1f       	adc	r25, r25
    1a58:	7a 95       	dec	r23
    1a5a:	e1 f7       	brne	.-8      	; 0x1a54 <gfx_draw_xbm_P+0x68>
    1a5c:	44 24       	eor	r4, r4
    1a5e:	55 24       	eor	r5, r5
    1a60:	48 1a       	sub	r4, r24
    1a62:	59 0a       	sbc	r5, r25
    1a64:	cc 24       	eor	r12, r12
    1a66:	68 e0       	ldi	r22, 0x08	; 8
    1a68:	76 2e       	mov	r7, r22
    1a6a:	5f ef       	ldi	r21, 0xFF	; 255
    1a6c:	85 2e       	mov	r8, r21
    1a6e:	91 2c       	mov	r9, r1
    1a70:	bc 82       	std	Y+4, r11	; 0x04
    1a72:	ab 82       	std	Y+3, r10	; 0x03
    1a74:	71 c0       	rjmp	.+226    	; 0x1b58 <gfx_draw_xbm_P+0x16c>
    1a76:	8e 2d       	mov	r24, r14
    1a78:	87 70       	andi	r24, 0x07	; 7
    1a7a:	d7 2c       	mov	r13, r7
    1a7c:	d8 1a       	sub	r13, r24
    1a7e:	1d 15       	cp	r17, r13
    1a80:	48 f4       	brcc	.+18     	; 0x1a94 <gfx_draw_xbm_P+0xa8>
    1a82:	8d 2d       	mov	r24, r13
    1a84:	81 1b       	sub	r24, r17
    1a86:	94 01       	movw	r18, r8
    1a88:	02 c0       	rjmp	.+4      	; 0x1a8e <gfx_draw_xbm_P+0xa2>
    1a8a:	35 95       	asr	r19
    1a8c:	27 95       	ror	r18
    1a8e:	8a 95       	dec	r24
    1a90:	e2 f7       	brpl	.-8      	; 0x1a8a <gfx_draw_xbm_P+0x9e>
    1a92:	f2 22       	and	r15, r18
    1a94:	8d 2d       	mov	r24, r13
    1a96:	8c 0d       	add	r24, r12
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	8a 9d       	mul	r24, r10
    1a9c:	10 01       	movw	r2, r0
    1a9e:	8b 9d       	mul	r24, r11
    1aa0:	30 0c       	add	r3, r0
    1aa2:	9a 9d       	mul	r25, r10
    1aa4:	30 0c       	add	r3, r0
    1aa6:	11 24       	eor	r1, r1
    1aa8:	80 e0       	ldi	r24, 0x00	; 0
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	9e 83       	std	Y+6, r25	; 0x06
    1aae:	8d 83       	std	Y+5, r24	; 0x05
    1ab0:	43 c0       	rjmp	.+134    	; 0x1b38 <gfx_draw_xbm_P+0x14c>
    1ab2:	4d 81       	ldd	r20, Y+5	; 0x05
    1ab4:	5e 81       	ldd	r21, Y+6	; 0x06
    1ab6:	47 70       	andi	r20, 0x07	; 7
    1ab8:	50 70       	andi	r21, 0x00	; 0
    1aba:	41 15       	cp	r20, r1
    1abc:	51 05       	cpc	r21, r1
    1abe:	71 f5       	brne	.+92     	; 0x1b1c <gfx_draw_xbm_P+0x130>
    1ac0:	e6 95       	lsr	r30
    1ac2:	e6 95       	lsr	r30
    1ac4:	e6 95       	lsr	r30
    1ac6:	c1 01       	movw	r24, r2
    1ac8:	8e 0f       	add	r24, r30
    1aca:	91 1d       	adc	r25, r1
    1acc:	fc 01       	movw	r30, r24
    1ace:	a9 81       	ldd	r26, Y+1	; 0x01
    1ad0:	ba 81       	ldd	r27, Y+2	; 0x02
    1ad2:	ea 0f       	add	r30, r26
    1ad4:	fb 1f       	adc	r31, r27
    1ad6:	e4 0d       	add	r30, r4
    1ad8:	f5 1d       	adc	r31, r5
    1ada:	20 e0       	ldi	r18, 0x00	; 0
    1adc:	30 e0       	ldi	r19, 0x00	; 0
    1ade:	6d 81       	ldd	r22, Y+5	; 0x05
    1ae0:	7e 81       	ldd	r23, Y+6	; 0x06
    1ae2:	94 91       	lpm	r25, Z+
    1ae4:	ae e8       	ldi	r26, 0x8E	; 142
    1ae6:	b6 e0       	ldi	r27, 0x06	; 6
    1ae8:	8c 91       	ld	r24, X
    1aea:	86 95       	lsr	r24
    1aec:	8c 93       	st	X, r24
    1aee:	90 ff       	sbrs	r25, 0
    1af0:	02 c0       	rjmp	.+4      	; 0x1af6 <gfx_draw_xbm_P+0x10a>
    1af2:	80 68       	ori	r24, 0x80	; 128
    1af4:	8c 93       	st	X, r24
    1af6:	11 96       	adiw	r26, 0x01	; 1
    1af8:	86 e0       	ldi	r24, 0x06	; 6
    1afa:	a6 39       	cpi	r26, 0x96	; 150
    1afc:	b8 07       	cpc	r27, r24
    1afe:	11 f0       	breq	.+4      	; 0x1b04 <gfx_draw_xbm_P+0x118>
    1b00:	96 95       	lsr	r25
    1b02:	f2 cf       	rjmp	.-28     	; 0x1ae8 <gfx_draw_xbm_P+0xfc>
    1b04:	2f 5f       	subi	r18, 0xFF	; 255
    1b06:	3f 4f       	sbci	r19, 0xFF	; 255
    1b08:	28 30       	cpi	r18, 0x08	; 8
    1b0a:	31 05       	cpc	r19, r1
    1b0c:	29 f0       	breq	.+10     	; 0x1b18 <gfx_draw_xbm_P+0x12c>
    1b0e:	ab 81       	ldd	r26, Y+3	; 0x03
    1b10:	bc 81       	ldd	r27, Y+4	; 0x04
    1b12:	ea 0f       	add	r30, r26
    1b14:	fb 1f       	adc	r31, r27
    1b16:	e5 cf       	rjmp	.-54     	; 0x1ae2 <gfx_draw_xbm_P+0xf6>
    1b18:	7e 83       	std	Y+6, r23	; 0x06
    1b1a:	6d 83       	std	Y+5, r22	; 0x05
    1b1c:	42 57       	subi	r20, 0x72	; 114
    1b1e:	59 4f       	sbci	r21, 0xF9	; 249
    1b20:	fa 01       	movw	r30, r20
    1b22:	80 81       	ld	r24, Z
    1b24:	8f 21       	and	r24, r15
    1b26:	6f 2d       	mov	r22, r15
    1b28:	0e 94 9b 0c 	call	0x1936	; 0x1936 <gfx_display_write2>
    1b2c:	2d 81       	ldd	r18, Y+5	; 0x05
    1b2e:	3e 81       	ldd	r19, Y+6	; 0x06
    1b30:	2f 5f       	subi	r18, 0xFF	; 255
    1b32:	3f 4f       	sbci	r19, 0xFF	; 255
    1b34:	3e 83       	std	Y+6, r19	; 0x06
    1b36:	2d 83       	std	Y+5, r18	; 0x05
    1b38:	ed 81       	ldd	r30, Y+5	; 0x05
    1b3a:	e0 17       	cp	r30, r16
    1b3c:	08 f4       	brcc	.+2      	; 0x1b40 <gfx_draw_xbm_P+0x154>
    1b3e:	b9 cf       	rjmp	.-142    	; 0x1ab2 <gfx_draw_xbm_P+0xc6>
    1b40:	1d 15       	cp	r17, r13
    1b42:	08 f4       	brcc	.+2      	; 0x1b46 <gfx_draw_xbm_P+0x15a>
    1b44:	d1 2e       	mov	r13, r17
    1b46:	1d 19       	sub	r17, r13
    1b48:	ed 0c       	add	r14, r13
    1b4a:	cd 0c       	add	r12, r13
    1b4c:	86 2d       	mov	r24, r6
    1b4e:	6e 2d       	mov	r22, r14
    1b50:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    1b54:	ff 24       	eor	r15, r15
    1b56:	fa 94       	dec	r15
    1b58:	11 23       	and	r17, r17
    1b5a:	09 f0       	breq	.+2      	; 0x1b5e <gfx_draw_xbm_P+0x172>
    1b5c:	8c cf       	rjmp	.-232    	; 0x1a76 <gfx_draw_xbm_P+0x8a>
    1b5e:	26 96       	adiw	r28, 0x06	; 6
    1b60:	0f b6       	in	r0, 0x3f	; 63
    1b62:	f8 94       	cli
    1b64:	de bf       	out	0x3e, r29	; 62
    1b66:	0f be       	out	0x3f, r0	; 63
    1b68:	cd bf       	out	0x3d, r28	; 61
    1b6a:	cf 91       	pop	r28
    1b6c:	df 91       	pop	r29
    1b6e:	1f 91       	pop	r17
    1b70:	0f 91       	pop	r16
    1b72:	ff 90       	pop	r15
    1b74:	ef 90       	pop	r14
    1b76:	df 90       	pop	r13
    1b78:	cf 90       	pop	r12
    1b7a:	bf 90       	pop	r11
    1b7c:	af 90       	pop	r10
    1b7e:	9f 90       	pop	r9
    1b80:	8f 90       	pop	r8
    1b82:	7f 90       	pop	r7
    1b84:	6f 90       	pop	r6
    1b86:	5f 90       	pop	r5
    1b88:	4f 90       	pop	r4
    1b8a:	3f 90       	pop	r3
    1b8c:	2f 90       	pop	r2
    1b8e:	08 95       	ret

00001b90 <gfx_draw_xbm>:
    1b90:	2f 92       	push	r2
    1b92:	3f 92       	push	r3
    1b94:	4f 92       	push	r4
    1b96:	5f 92       	push	r5
    1b98:	6f 92       	push	r6
    1b9a:	7f 92       	push	r7
    1b9c:	8f 92       	push	r8
    1b9e:	9f 92       	push	r9
    1ba0:	af 92       	push	r10
    1ba2:	bf 92       	push	r11
    1ba4:	cf 92       	push	r12
    1ba6:	df 92       	push	r13
    1ba8:	ef 92       	push	r14
    1baa:	ff 92       	push	r15
    1bac:	0f 93       	push	r16
    1bae:	1f 93       	push	r17
    1bb0:	df 93       	push	r29
    1bb2:	cf 93       	push	r28
    1bb4:	00 d0       	rcall	.+0      	; 0x1bb6 <gfx_draw_xbm+0x26>
    1bb6:	00 d0       	rcall	.+0      	; 0x1bb8 <gfx_draw_xbm+0x28>
    1bb8:	00 d0       	rcall	.+0      	; 0x1bba <gfx_draw_xbm+0x2a>
    1bba:	cd b7       	in	r28, 0x3d	; 61
    1bbc:	de b7       	in	r29, 0x3e	; 62
    1bbe:	08 2f       	mov	r16, r24
    1bc0:	16 2f       	mov	r17, r22
    1bc2:	5a 83       	std	Y+2, r21	; 0x02
    1bc4:	49 83       	std	Y+1, r20	; 0x01
    1bc6:	60 90 8d 06 	lds	r6, 0x068D
    1bca:	e0 90 96 06 	lds	r14, 0x0696
    1bce:	8e 2d       	mov	r24, r14
    1bd0:	87 70       	andi	r24, 0x07	; 7
    1bd2:	2f ef       	ldi	r18, 0xFF	; 255
    1bd4:	30 e0       	ldi	r19, 0x00	; 0
    1bd6:	f2 2e       	mov	r15, r18
    1bd8:	01 c0       	rjmp	.+2      	; 0x1bdc <gfx_draw_xbm+0x4c>
    1bda:	ff 0c       	add	r15, r15
    1bdc:	8a 95       	dec	r24
    1bde:	ea f7       	brpl	.-6      	; 0x1bda <gfx_draw_xbm+0x4a>
    1be0:	80 2f       	mov	r24, r16
    1be2:	90 e0       	ldi	r25, 0x00	; 0
    1be4:	01 97       	sbiw	r24, 0x01	; 1
    1be6:	68 e0       	ldi	r22, 0x08	; 8
    1be8:	70 e0       	ldi	r23, 0x00	; 0
    1bea:	0e 94 8e 1b 	call	0x371c	; 0x371c <__divmodhi4>
    1bee:	6f 5f       	subi	r22, 0xFF	; 255
    1bf0:	a6 2e       	mov	r10, r22
    1bf2:	bb 24       	eor	r11, r11
    1bf4:	c5 01       	movw	r24, r10
    1bf6:	a3 e0       	ldi	r26, 0x03	; 3
    1bf8:	88 0f       	add	r24, r24
    1bfa:	99 1f       	adc	r25, r25
    1bfc:	aa 95       	dec	r26
    1bfe:	e1 f7       	brne	.-8      	; 0x1bf8 <gfx_draw_xbm+0x68>
    1c00:	44 24       	eor	r4, r4
    1c02:	55 24       	eor	r5, r5
    1c04:	48 1a       	sub	r4, r24
    1c06:	59 0a       	sbc	r5, r25
    1c08:	cc 24       	eor	r12, r12
    1c0a:	f8 e0       	ldi	r31, 0x08	; 8
    1c0c:	7f 2e       	mov	r7, r31
    1c0e:	ef ef       	ldi	r30, 0xFF	; 255
    1c10:	8e 2e       	mov	r8, r30
    1c12:	91 2c       	mov	r9, r1
    1c14:	bc 82       	std	Y+4, r11	; 0x04
    1c16:	ab 82       	std	Y+3, r10	; 0x03
    1c18:	71 c0       	rjmp	.+226    	; 0x1cfc <gfx_draw_xbm+0x16c>
    1c1a:	8e 2d       	mov	r24, r14
    1c1c:	87 70       	andi	r24, 0x07	; 7
    1c1e:	d7 2c       	mov	r13, r7
    1c20:	d8 1a       	sub	r13, r24
    1c22:	1d 15       	cp	r17, r13
    1c24:	48 f4       	brcc	.+18     	; 0x1c38 <gfx_draw_xbm+0xa8>
    1c26:	8d 2d       	mov	r24, r13
    1c28:	81 1b       	sub	r24, r17
    1c2a:	94 01       	movw	r18, r8
    1c2c:	02 c0       	rjmp	.+4      	; 0x1c32 <gfx_draw_xbm+0xa2>
    1c2e:	35 95       	asr	r19
    1c30:	27 95       	ror	r18
    1c32:	8a 95       	dec	r24
    1c34:	e2 f7       	brpl	.-8      	; 0x1c2e <gfx_draw_xbm+0x9e>
    1c36:	f2 22       	and	r15, r18
    1c38:	8d 2d       	mov	r24, r13
    1c3a:	8c 0d       	add	r24, r12
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	8a 9d       	mul	r24, r10
    1c40:	10 01       	movw	r2, r0
    1c42:	8b 9d       	mul	r24, r11
    1c44:	30 0c       	add	r3, r0
    1c46:	9a 9d       	mul	r25, r10
    1c48:	30 0c       	add	r3, r0
    1c4a:	11 24       	eor	r1, r1
    1c4c:	80 e0       	ldi	r24, 0x00	; 0
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	9e 83       	std	Y+6, r25	; 0x06
    1c52:	8d 83       	std	Y+5, r24	; 0x05
    1c54:	43 c0       	rjmp	.+134    	; 0x1cdc <gfx_draw_xbm+0x14c>
    1c56:	4d 81       	ldd	r20, Y+5	; 0x05
    1c58:	5e 81       	ldd	r21, Y+6	; 0x06
    1c5a:	47 70       	andi	r20, 0x07	; 7
    1c5c:	50 70       	andi	r21, 0x00	; 0
    1c5e:	41 15       	cp	r20, r1
    1c60:	51 05       	cpc	r21, r1
    1c62:	71 f5       	brne	.+92     	; 0x1cc0 <gfx_draw_xbm+0x130>
    1c64:	e6 95       	lsr	r30
    1c66:	e6 95       	lsr	r30
    1c68:	e6 95       	lsr	r30
    1c6a:	c1 01       	movw	r24, r2
    1c6c:	8e 0f       	add	r24, r30
    1c6e:	91 1d       	adc	r25, r1
    1c70:	fc 01       	movw	r30, r24
    1c72:	a9 81       	ldd	r26, Y+1	; 0x01
    1c74:	ba 81       	ldd	r27, Y+2	; 0x02
    1c76:	ea 0f       	add	r30, r26
    1c78:	fb 1f       	adc	r31, r27
    1c7a:	e4 0d       	add	r30, r4
    1c7c:	f5 1d       	adc	r31, r5
    1c7e:	20 e0       	ldi	r18, 0x00	; 0
    1c80:	30 e0       	ldi	r19, 0x00	; 0
    1c82:	6d 81       	ldd	r22, Y+5	; 0x05
    1c84:	7e 81       	ldd	r23, Y+6	; 0x06
    1c86:	90 81       	ld	r25, Z
    1c88:	ae e8       	ldi	r26, 0x8E	; 142
    1c8a:	b6 e0       	ldi	r27, 0x06	; 6
    1c8c:	8c 91       	ld	r24, X
    1c8e:	86 95       	lsr	r24
    1c90:	8c 93       	st	X, r24
    1c92:	90 ff       	sbrs	r25, 0
    1c94:	02 c0       	rjmp	.+4      	; 0x1c9a <gfx_draw_xbm+0x10a>
    1c96:	80 68       	ori	r24, 0x80	; 128
    1c98:	8c 93       	st	X, r24
    1c9a:	11 96       	adiw	r26, 0x01	; 1
    1c9c:	86 e0       	ldi	r24, 0x06	; 6
    1c9e:	a6 39       	cpi	r26, 0x96	; 150
    1ca0:	b8 07       	cpc	r27, r24
    1ca2:	11 f0       	breq	.+4      	; 0x1ca8 <gfx_draw_xbm+0x118>
    1ca4:	96 95       	lsr	r25
    1ca6:	f2 cf       	rjmp	.-28     	; 0x1c8c <gfx_draw_xbm+0xfc>
    1ca8:	2f 5f       	subi	r18, 0xFF	; 255
    1caa:	3f 4f       	sbci	r19, 0xFF	; 255
    1cac:	28 30       	cpi	r18, 0x08	; 8
    1cae:	31 05       	cpc	r19, r1
    1cb0:	29 f0       	breq	.+10     	; 0x1cbc <gfx_draw_xbm+0x12c>
    1cb2:	ab 81       	ldd	r26, Y+3	; 0x03
    1cb4:	bc 81       	ldd	r27, Y+4	; 0x04
    1cb6:	ea 0f       	add	r30, r26
    1cb8:	fb 1f       	adc	r31, r27
    1cba:	e5 cf       	rjmp	.-54     	; 0x1c86 <gfx_draw_xbm+0xf6>
    1cbc:	7e 83       	std	Y+6, r23	; 0x06
    1cbe:	6d 83       	std	Y+5, r22	; 0x05
    1cc0:	42 57       	subi	r20, 0x72	; 114
    1cc2:	59 4f       	sbci	r21, 0xF9	; 249
    1cc4:	fa 01       	movw	r30, r20
    1cc6:	80 81       	ld	r24, Z
    1cc8:	8f 21       	and	r24, r15
    1cca:	6f 2d       	mov	r22, r15
    1ccc:	0e 94 9b 0c 	call	0x1936	; 0x1936 <gfx_display_write2>
    1cd0:	2d 81       	ldd	r18, Y+5	; 0x05
    1cd2:	3e 81       	ldd	r19, Y+6	; 0x06
    1cd4:	2f 5f       	subi	r18, 0xFF	; 255
    1cd6:	3f 4f       	sbci	r19, 0xFF	; 255
    1cd8:	3e 83       	std	Y+6, r19	; 0x06
    1cda:	2d 83       	std	Y+5, r18	; 0x05
    1cdc:	ed 81       	ldd	r30, Y+5	; 0x05
    1cde:	e0 17       	cp	r30, r16
    1ce0:	08 f4       	brcc	.+2      	; 0x1ce4 <gfx_draw_xbm+0x154>
    1ce2:	b9 cf       	rjmp	.-142    	; 0x1c56 <gfx_draw_xbm+0xc6>
    1ce4:	1d 15       	cp	r17, r13
    1ce6:	08 f4       	brcc	.+2      	; 0x1cea <gfx_draw_xbm+0x15a>
    1ce8:	d1 2e       	mov	r13, r17
    1cea:	1d 19       	sub	r17, r13
    1cec:	ed 0c       	add	r14, r13
    1cee:	cd 0c       	add	r12, r13
    1cf0:	86 2d       	mov	r24, r6
    1cf2:	6e 2d       	mov	r22, r14
    1cf4:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    1cf8:	ff 24       	eor	r15, r15
    1cfa:	fa 94       	dec	r15
    1cfc:	11 23       	and	r17, r17
    1cfe:	09 f0       	breq	.+2      	; 0x1d02 <gfx_draw_xbm+0x172>
    1d00:	8c cf       	rjmp	.-232    	; 0x1c1a <gfx_draw_xbm+0x8a>
    1d02:	26 96       	adiw	r28, 0x06	; 6
    1d04:	0f b6       	in	r0, 0x3f	; 63
    1d06:	f8 94       	cli
    1d08:	de bf       	out	0x3e, r29	; 62
    1d0a:	0f be       	out	0x3f, r0	; 63
    1d0c:	cd bf       	out	0x3d, r28	; 61
    1d0e:	cf 91       	pop	r28
    1d10:	df 91       	pop	r29
    1d12:	1f 91       	pop	r17
    1d14:	0f 91       	pop	r16
    1d16:	ff 90       	pop	r15
    1d18:	ef 90       	pop	r14
    1d1a:	df 90       	pop	r13
    1d1c:	cf 90       	pop	r12
    1d1e:	bf 90       	pop	r11
    1d20:	af 90       	pop	r10
    1d22:	9f 90       	pop	r9
    1d24:	8f 90       	pop	r8
    1d26:	7f 90       	pop	r7
    1d28:	6f 90       	pop	r6
    1d2a:	5f 90       	pop	r5
    1d2c:	4f 90       	pop	r4
    1d2e:	3f 90       	pop	r3
    1d30:	2f 90       	pop	r2
    1d32:	08 95       	ret

00001d34 <gfx_box>:
    1d34:	af 92       	push	r10
    1d36:	bf 92       	push	r11
    1d38:	cf 92       	push	r12
    1d3a:	df 92       	push	r13
    1d3c:	ef 92       	push	r14
    1d3e:	ff 92       	push	r15
    1d40:	0f 93       	push	r16
    1d42:	1f 93       	push	r17
    1d44:	cf 93       	push	r28
    1d46:	df 93       	push	r29
    1d48:	a8 2e       	mov	r10, r24
    1d4a:	16 2f       	mov	r17, r22
    1d4c:	b0 90 8d 06 	lds	r11, 0x068D
    1d50:	f0 90 96 06 	lds	r15, 0x0696
    1d54:	8f 2d       	mov	r24, r15
    1d56:	87 70       	andi	r24, 0x07	; 7
    1d58:	2f ef       	ldi	r18, 0xFF	; 255
    1d5a:	30 e0       	ldi	r19, 0x00	; 0
    1d5c:	02 2f       	mov	r16, r18
    1d5e:	01 c0       	rjmp	.+2      	; 0x1d62 <gfx_box+0x2e>
    1d60:	00 0f       	add	r16, r16
    1d62:	8a 95       	dec	r24
    1d64:	ea f7       	brpl	.-6      	; 0x1d60 <gfx_box+0x2c>
    1d66:	b8 e0       	ldi	r27, 0x08	; 8
    1d68:	cb 2e       	mov	r12, r27
    1d6a:	cf ef       	ldi	r28, 0xFF	; 255
    1d6c:	d0 e0       	ldi	r29, 0x00	; 0
    1d6e:	22 c0       	rjmp	.+68     	; 0x1db4 <gfx_box+0x80>
    1d70:	8f 2d       	mov	r24, r15
    1d72:	87 70       	andi	r24, 0x07	; 7
    1d74:	ec 2c       	mov	r14, r12
    1d76:	e8 1a       	sub	r14, r24
    1d78:	1e 15       	cp	r17, r14
    1d7a:	48 f4       	brcc	.+18     	; 0x1d8e <gfx_box+0x5a>
    1d7c:	8e 2d       	mov	r24, r14
    1d7e:	81 1b       	sub	r24, r17
    1d80:	9e 01       	movw	r18, r28
    1d82:	02 c0       	rjmp	.+4      	; 0x1d88 <gfx_box+0x54>
    1d84:	35 95       	asr	r19
    1d86:	27 95       	ror	r18
    1d88:	8a 95       	dec	r24
    1d8a:	e2 f7       	brpl	.-8      	; 0x1d84 <gfx_box+0x50>
    1d8c:	02 23       	and	r16, r18
    1d8e:	da 2c       	mov	r13, r10
    1d90:	05 c0       	rjmp	.+10     	; 0x1d9c <gfx_box+0x68>
    1d92:	80 2f       	mov	r24, r16
    1d94:	60 2f       	mov	r22, r16
    1d96:	0e 94 9b 0c 	call	0x1936	; 0x1936 <gfx_display_write2>
    1d9a:	da 94       	dec	r13
    1d9c:	dd 20       	and	r13, r13
    1d9e:	c9 f7       	brne	.-14     	; 0x1d92 <gfx_box+0x5e>
    1da0:	1e 15       	cp	r17, r14
    1da2:	08 f4       	brcc	.+2      	; 0x1da6 <gfx_box+0x72>
    1da4:	e1 2e       	mov	r14, r17
    1da6:	1e 19       	sub	r17, r14
    1da8:	fe 0c       	add	r15, r14
    1daa:	8b 2d       	mov	r24, r11
    1dac:	6f 2d       	mov	r22, r15
    1dae:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    1db2:	0f ef       	ldi	r16, 0xFF	; 255
    1db4:	11 23       	and	r17, r17
    1db6:	e1 f6       	brne	.-72     	; 0x1d70 <gfx_box+0x3c>
    1db8:	df 91       	pop	r29
    1dba:	cf 91       	pop	r28
    1dbc:	1f 91       	pop	r17
    1dbe:	0f 91       	pop	r16
    1dc0:	ff 90       	pop	r15
    1dc2:	ef 90       	pop	r14
    1dc4:	df 90       	pop	r13
    1dc6:	cf 90       	pop	r12
    1dc8:	bf 90       	pop	r11
    1dca:	af 90       	pop	r10
    1dcc:	08 95       	ret

00001dce <gfx_vline>:
    1dce:	68 2f       	mov	r22, r24
    1dd0:	81 e0       	ldi	r24, 0x01	; 1
    1dd2:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <gfx_box>
    1dd6:	08 95       	ret

00001dd8 <gfx_hline>:
    1dd8:	0f 93       	push	r16
    1dda:	1f 93       	push	r17
    1ddc:	18 2f       	mov	r17, r24
    1dde:	80 91 96 06 	lds	r24, 0x0696
    1de2:	87 70       	andi	r24, 0x07	; 7
    1de4:	21 e0       	ldi	r18, 0x01	; 1
    1de6:	30 e0       	ldi	r19, 0x00	; 0
    1de8:	02 2f       	mov	r16, r18
    1dea:	01 c0       	rjmp	.+2      	; 0x1dee <gfx_hline+0x16>
    1dec:	00 0f       	add	r16, r16
    1dee:	8a 95       	dec	r24
    1df0:	ea f7       	brpl	.-6      	; 0x1dec <gfx_hline+0x14>
    1df2:	05 c0       	rjmp	.+10     	; 0x1dfe <gfx_hline+0x26>
    1df4:	80 2f       	mov	r24, r16
    1df6:	60 2f       	mov	r22, r16
    1df8:	0e 94 9b 0c 	call	0x1936	; 0x1936 <gfx_display_write2>
    1dfc:	11 50       	subi	r17, 0x01	; 1
    1dfe:	11 23       	and	r17, r17
    1e00:	c9 f7       	brne	.-14     	; 0x1df4 <gfx_hline+0x1c>
    1e02:	1f 91       	pop	r17
    1e04:	0f 91       	pop	r16
    1e06:	08 95       	ret

00001e08 <gfx_lineTo>:
    1e08:	9f 92       	push	r9
    1e0a:	af 92       	push	r10
    1e0c:	bf 92       	push	r11
    1e0e:	cf 92       	push	r12
    1e10:	df 92       	push	r13
    1e12:	ef 92       	push	r14
    1e14:	ff 92       	push	r15
    1e16:	0f 93       	push	r16
    1e18:	1f 93       	push	r17
    1e1a:	08 2f       	mov	r16, r24
    1e1c:	16 2f       	mov	r17, r22
    1e1e:	f0 90 8d 06 	lds	r15, 0x068D
    1e22:	e0 90 96 06 	lds	r14, 0x0696
    1e26:	8f 15       	cp	r24, r15
    1e28:	61 f4       	brne	.+24     	; 0x1e42 <gfx_lineTo+0x3a>
    1e2a:	e6 16       	cp	r14, r22
    1e2c:	18 f4       	brcc	.+6      	; 0x1e34 <gfx_lineTo+0x2c>
    1e2e:	86 2f       	mov	r24, r22
    1e30:	8e 19       	sub	r24, r14
    1e32:	04 c0       	rjmp	.+8      	; 0x1e3c <gfx_lineTo+0x34>
    1e34:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    1e38:	8e 2d       	mov	r24, r14
    1e3a:	81 1b       	sub	r24, r17
    1e3c:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <gfx_vline>
    1e40:	5e c0       	rjmp	.+188    	; 0x1efe <gfx_lineTo+0xf6>
    1e42:	de 2c       	mov	r13, r14
    1e44:	6e 15       	cp	r22, r14
    1e46:	59 f4       	brne	.+22     	; 0x1e5e <gfx_lineTo+0x56>
    1e48:	f8 16       	cp	r15, r24
    1e4a:	10 f4       	brcc	.+4      	; 0x1e50 <gfx_lineTo+0x48>
    1e4c:	8f 19       	sub	r24, r15
    1e4e:	04 c0       	rjmp	.+8      	; 0x1e58 <gfx_lineTo+0x50>
    1e50:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    1e54:	8f 2d       	mov	r24, r15
    1e56:	80 1b       	sub	r24, r16
    1e58:	0e 94 ec 0e 	call	0x1dd8	; 0x1dd8 <gfx_hline>
    1e5c:	50 c0       	rjmp	.+160    	; 0x1efe <gfx_lineTo+0xf6>
    1e5e:	8f 15       	cp	r24, r15
    1e60:	28 f4       	brcc	.+10     	; 0x1e6c <gfx_lineTo+0x64>
    1e62:	af 2c       	mov	r10, r15
    1e64:	a8 1a       	sub	r10, r24
    1e66:	99 24       	eor	r9, r9
    1e68:	9a 94       	dec	r9
    1e6a:	09 c0       	rjmp	.+18     	; 0x1e7e <gfx_lineTo+0x76>
    1e6c:	f8 16       	cp	r15, r24
    1e6e:	18 f0       	brcs	.+6      	; 0x1e76 <gfx_lineTo+0x6e>
    1e70:	99 24       	eor	r9, r9
    1e72:	aa 24       	eor	r10, r10
    1e74:	04 c0       	rjmp	.+8      	; 0x1e7e <gfx_lineTo+0x76>
    1e76:	a8 2e       	mov	r10, r24
    1e78:	af 18       	sub	r10, r15
    1e7a:	99 24       	eor	r9, r9
    1e7c:	93 94       	inc	r9
    1e7e:	1e 15       	cp	r17, r14
    1e80:	28 f4       	brcc	.+10     	; 0x1e8c <gfx_lineTo+0x84>
    1e82:	be 2c       	mov	r11, r14
    1e84:	b1 1a       	sub	r11, r17
    1e86:	cc 24       	eor	r12, r12
    1e88:	ca 94       	dec	r12
    1e8a:	09 c0       	rjmp	.+18     	; 0x1e9e <gfx_lineTo+0x96>
    1e8c:	e1 16       	cp	r14, r17
    1e8e:	18 f0       	brcs	.+6      	; 0x1e96 <gfx_lineTo+0x8e>
    1e90:	cc 24       	eor	r12, r12
    1e92:	bb 24       	eor	r11, r11
    1e94:	04 c0       	rjmp	.+8      	; 0x1e9e <gfx_lineTo+0x96>
    1e96:	b1 2e       	mov	r11, r17
    1e98:	be 18       	sub	r11, r14
    1e9a:	cc 24       	eor	r12, r12
    1e9c:	c3 94       	inc	r12
    1e9e:	81 e0       	ldi	r24, 0x01	; 1
    1ea0:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <gfx_pixel>
    1ea4:	ba 14       	cp	r11, r10
    1ea6:	b0 f4       	brcc	.+44     	; 0x1ed4 <gfx_lineTo+0xcc>
    1ea8:	ea 2c       	mov	r14, r10
    1eaa:	e6 94       	lsr	r14
    1eac:	e1 94       	neg	r14
    1eae:	f9 0c       	add	r15, r9
    1eb0:	eb 0c       	add	r14, r11
    1eb2:	1e 14       	cp	r1, r14
    1eb4:	14 f4       	brge	.+4      	; 0x1eba <gfx_lineTo+0xb2>
    1eb6:	ea 18       	sub	r14, r10
    1eb8:	dc 0c       	add	r13, r12
    1eba:	8f 2d       	mov	r24, r15
    1ebc:	6d 2d       	mov	r22, r13
    1ebe:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    1ec2:	81 e0       	ldi	r24, 0x01	; 1
    1ec4:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <gfx_pixel>
    1ec8:	f9 0c       	add	r15, r9
    1eca:	8f 2d       	mov	r24, r15
    1ecc:	89 19       	sub	r24, r9
    1ece:	80 17       	cp	r24, r16
    1ed0:	79 f7       	brne	.-34     	; 0x1eb0 <gfx_lineTo+0xa8>
    1ed2:	15 c0       	rjmp	.+42     	; 0x1efe <gfx_lineTo+0xf6>
    1ed4:	db 2c       	mov	r13, r11
    1ed6:	d6 94       	lsr	r13
    1ed8:	d1 94       	neg	r13
    1eda:	ec 0c       	add	r14, r12
    1edc:	da 0c       	add	r13, r10
    1ede:	1d 14       	cp	r1, r13
    1ee0:	14 f4       	brge	.+4      	; 0x1ee6 <gfx_lineTo+0xde>
    1ee2:	db 18       	sub	r13, r11
    1ee4:	f9 0c       	add	r15, r9
    1ee6:	8f 2d       	mov	r24, r15
    1ee8:	6e 2d       	mov	r22, r14
    1eea:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    1eee:	81 e0       	ldi	r24, 0x01	; 1
    1ef0:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <gfx_pixel>
    1ef4:	ec 0c       	add	r14, r12
    1ef6:	8e 2d       	mov	r24, r14
    1ef8:	8c 19       	sub	r24, r12
    1efa:	81 17       	cp	r24, r17
    1efc:	79 f7       	brne	.-34     	; 0x1edc <gfx_lineTo+0xd4>
    1efe:	80 2f       	mov	r24, r16
    1f00:	61 2f       	mov	r22, r17
    1f02:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    1f06:	1f 91       	pop	r17
    1f08:	0f 91       	pop	r16
    1f0a:	ff 90       	pop	r15
    1f0c:	ef 90       	pop	r14
    1f0e:	df 90       	pop	r13
    1f10:	cf 90       	pop	r12
    1f12:	bf 90       	pop	r11
    1f14:	af 90       	pop	r10
    1f16:	9f 90       	pop	r9
    1f18:	08 95       	ret

00001f1a <gfx_print_char_base>:
    1f1a:	8f 92       	push	r8
    1f1c:	9f 92       	push	r9
    1f1e:	af 92       	push	r10
    1f20:	bf 92       	push	r11
    1f22:	cf 92       	push	r12
    1f24:	df 92       	push	r13
    1f26:	ef 92       	push	r14
    1f28:	ff 92       	push	r15
    1f2a:	0f 93       	push	r16
    1f2c:	1f 93       	push	r17
    1f2e:	cf 93       	push	r28
    1f30:	df 93       	push	r29
    1f32:	06 2f       	mov	r16, r22
    1f34:	98 2f       	mov	r25, r24
    1f36:	90 52       	subi	r25, 0x20	; 32
    1f38:	90 36       	cpi	r25, 0x60	; 96
    1f3a:	08 f0       	brcs	.+2      	; 0x1f3e <gfx_print_char_base+0x24>
    1f3c:	80 e8       	ldi	r24, 0x80	; 128
    1f3e:	80 52       	subi	r24, 0x20	; 32
    1f40:	96 e0       	ldi	r25, 0x06	; 6
    1f42:	89 9f       	mul	r24, r25
    1f44:	e0 01       	movw	r28, r0
    1f46:	11 24       	eor	r1, r1
    1f48:	ca 5b       	subi	r28, 0xBA	; 186
    1f4a:	dd 4f       	sbci	r29, 0xFD	; 253
    1f4c:	18 81       	ld	r17, Y
    1f4e:	80 91 8c 06 	lds	r24, 0x068C
    1f52:	88 23       	and	r24, r24
    1f54:	09 f4       	brne	.+2      	; 0x1f58 <gfx_print_char_base+0x3e>
    1f56:	1f e1       	ldi	r17, 0x1F	; 31
    1f58:	e0 2e       	mov	r14, r16
    1f5a:	ff 24       	eor	r15, r15
    1f5c:	e7 fc       	sbrc	r14, 7
    1f5e:	f0 94       	com	r15
    1f60:	8f ef       	ldi	r24, 0xFF	; 255
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	6c 01       	movw	r12, r24
    1f66:	0e 2c       	mov	r0, r14
    1f68:	02 c0       	rjmp	.+4      	; 0x1f6e <gfx_print_char_base+0x54>
    1f6a:	cc 0c       	add	r12, r12
    1f6c:	dd 1c       	adc	r13, r13
    1f6e:	0a 94       	dec	r0
    1f70:	e2 f7       	brpl	.-8      	; 0x1f6a <gfx_print_char_base+0x50>
    1f72:	aa 24       	eor	r10, r10
    1f74:	bb 24       	eor	r11, r11
    1f76:	ae 18       	sub	r10, r14
    1f78:	bf 08       	sbc	r11, r15
    1f7a:	0a 2c       	mov	r0, r10
    1f7c:	02 c0       	rjmp	.+4      	; 0x1f82 <gfx_print_char_base+0x68>
    1f7e:	95 95       	asr	r25
    1f80:	87 95       	ror	r24
    1f82:	0a 94       	dec	r0
    1f84:	e2 f7       	brpl	.-8      	; 0x1f7e <gfx_print_char_base+0x64>
    1f86:	d8 2e       	mov	r13, r24
    1f88:	85 e0       	ldi	r24, 0x05	; 5
    1f8a:	88 2e       	mov	r8, r24
    1f8c:	91 2c       	mov	r9, r1
    1f8e:	8c 0e       	add	r8, r28
    1f90:	9d 1e       	adc	r9, r29
    1f92:	10 ff       	sbrs	r17, 0
    1f94:	16 c0       	rjmp	.+44     	; 0x1fc2 <gfx_print_char_base+0xa8>
    1f96:	89 81       	ldd	r24, Y+1	; 0x01
    1f98:	07 fd       	sbrc	r16, 7
    1f9a:	09 c0       	rjmp	.+18     	; 0x1fae <gfx_print_char_base+0x94>
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	0e 2c       	mov	r0, r14
    1fa0:	02 c0       	rjmp	.+4      	; 0x1fa6 <gfx_print_char_base+0x8c>
    1fa2:	88 0f       	add	r24, r24
    1fa4:	99 1f       	adc	r25, r25
    1fa6:	0a 94       	dec	r0
    1fa8:	e2 f7       	brpl	.-8      	; 0x1fa2 <gfx_print_char_base+0x88>
    1faa:	6c 2d       	mov	r22, r12
    1fac:	08 c0       	rjmp	.+16     	; 0x1fbe <gfx_print_char_base+0xa4>
    1fae:	90 e0       	ldi	r25, 0x00	; 0
    1fb0:	0a 2c       	mov	r0, r10
    1fb2:	02 c0       	rjmp	.+4      	; 0x1fb8 <gfx_print_char_base+0x9e>
    1fb4:	95 95       	asr	r25
    1fb6:	87 95       	ror	r24
    1fb8:	0a 94       	dec	r0
    1fba:	e2 f7       	brpl	.-8      	; 0x1fb4 <gfx_print_char_base+0x9a>
    1fbc:	6d 2d       	mov	r22, r13
    1fbe:	0e 94 9b 0c 	call	0x1936	; 0x1936 <gfx_display_write2>
    1fc2:	21 96       	adiw	r28, 0x01	; 1
    1fc4:	c8 15       	cp	r28, r8
    1fc6:	d9 05       	cpc	r29, r9
    1fc8:	11 f0       	breq	.+4      	; 0x1fce <gfx_print_char_base+0xb4>
    1fca:	16 95       	lsr	r17
    1fcc:	e2 cf       	rjmp	.-60     	; 0x1f92 <gfx_print_char_base+0x78>
    1fce:	07 fd       	sbrc	r16, 7
    1fd0:	03 c0       	rjmp	.+6      	; 0x1fd8 <gfx_print_char_base+0xbe>
    1fd2:	80 e0       	ldi	r24, 0x00	; 0
    1fd4:	6c 2d       	mov	r22, r12
    1fd6:	02 c0       	rjmp	.+4      	; 0x1fdc <gfx_print_char_base+0xc2>
    1fd8:	80 e0       	ldi	r24, 0x00	; 0
    1fda:	6d 2d       	mov	r22, r13
    1fdc:	0e 94 9b 0c 	call	0x1936	; 0x1936 <gfx_display_write2>
    1fe0:	df 91       	pop	r29
    1fe2:	cf 91       	pop	r28
    1fe4:	1f 91       	pop	r17
    1fe6:	0f 91       	pop	r16
    1fe8:	ff 90       	pop	r15
    1fea:	ef 90       	pop	r14
    1fec:	df 90       	pop	r13
    1fee:	cf 90       	pop	r12
    1ff0:	bf 90       	pop	r11
    1ff2:	af 90       	pop	r10
    1ff4:	9f 90       	pop	r9
    1ff6:	8f 90       	pop	r8
    1ff8:	08 95       	ret

00001ffa <gfx_print_char>:
    1ffa:	ff 92       	push	r15
    1ffc:	0f 93       	push	r16
    1ffe:	1f 93       	push	r17
    2000:	08 2f       	mov	r16, r24
    2002:	f0 90 8d 06 	lds	r15, 0x068D
    2006:	10 91 96 06 	lds	r17, 0x0696
    200a:	17 70       	andi	r17, 0x07	; 7
    200c:	61 2f       	mov	r22, r17
    200e:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <gfx_print_char_base>
    2012:	11 23       	and	r17, r17
    2014:	91 f0       	breq	.+36     	; 0x203a <gfx_print_char+0x40>
    2016:	60 91 96 06 	lds	r22, 0x0696
    201a:	68 5f       	subi	r22, 0xF8	; 248
    201c:	8f 2d       	mov	r24, r15
    201e:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    2022:	61 2f       	mov	r22, r17
    2024:	68 50       	subi	r22, 0x08	; 8
    2026:	80 2f       	mov	r24, r16
    2028:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <gfx_print_char_base>
    202c:	60 91 96 06 	lds	r22, 0x0696
    2030:	68 50       	subi	r22, 0x08	; 8
    2032:	80 91 8d 06 	lds	r24, 0x068D
    2036:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    203a:	1f 91       	pop	r17
    203c:	0f 91       	pop	r16
    203e:	ff 90       	pop	r15
    2040:	08 95       	ret

00002042 <gfx_term_print>:
    2042:	1f 93       	push	r17
    2044:	cf 93       	push	r28
    2046:	df 93       	push	r29
    2048:	ec 01       	movw	r28, r24
    204a:	10 92 8c 06 	sts	0x068C, r1
    204e:	36 c0       	rjmp	.+108    	; 0x20bc <gfx_term_print+0x7a>
    2050:	1a 30       	cpi	r17, 0x0A	; 10
    2052:	69 f4       	brne	.+26     	; 0x206e <gfx_term_print+0x2c>
    2054:	10 92 97 06 	sts	0x0697, r1
    2058:	80 91 8b 06 	lds	r24, 0x068B
    205c:	8f 5f       	subi	r24, 0xFF	; 255
    205e:	80 93 8b 06 	sts	0x068B, r24
    2062:	88 30       	cpi	r24, 0x08	; 8
    2064:	59 f5       	brne	.+86     	; 0x20bc <gfx_term_print+0x7a>
    2066:	81 e0       	ldi	r24, 0x01	; 1
    2068:	0e 94 29 0c 	call	0x1852	; 0x1852 <gfx_term_scroll>
    206c:	27 c0       	rjmp	.+78     	; 0x20bc <gfx_term_print+0x7a>
    206e:	1d 30       	cpi	r17, 0x0D	; 13
    2070:	29 f1       	breq	.+74     	; 0x20bc <gfx_term_print+0x7a>
    2072:	80 91 97 06 	lds	r24, 0x0697
    2076:	85 31       	cpi	r24, 0x15	; 21
    2078:	60 f0       	brcs	.+24     	; 0x2092 <gfx_term_print+0x50>
    207a:	10 92 97 06 	sts	0x0697, r1
    207e:	80 91 8b 06 	lds	r24, 0x068B
    2082:	8f 5f       	subi	r24, 0xFF	; 255
    2084:	80 93 8b 06 	sts	0x068B, r24
    2088:	88 30       	cpi	r24, 0x08	; 8
    208a:	19 f4       	brne	.+6      	; 0x2092 <gfx_term_print+0x50>
    208c:	81 e0       	ldi	r24, 0x01	; 1
    208e:	0e 94 29 0c 	call	0x1852	; 0x1852 <gfx_term_scroll>
    2092:	90 91 97 06 	lds	r25, 0x0697
    2096:	89 2f       	mov	r24, r25
    2098:	88 0f       	add	r24, r24
    209a:	89 0f       	add	r24, r25
    209c:	60 91 8b 06 	lds	r22, 0x068B
    20a0:	66 0f       	add	r22, r22
    20a2:	66 0f       	add	r22, r22
    20a4:	66 0f       	add	r22, r22
    20a6:	88 0f       	add	r24, r24
    20a8:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <gfx_move>
    20ac:	81 2f       	mov	r24, r17
    20ae:	0e 94 fd 0f 	call	0x1ffa	; 0x1ffa <gfx_print_char>
    20b2:	80 91 97 06 	lds	r24, 0x0697
    20b6:	8f 5f       	subi	r24, 0xFF	; 255
    20b8:	80 93 97 06 	sts	0x0697, r24
    20bc:	19 91       	ld	r17, Y+
    20be:	11 23       	and	r17, r17
    20c0:	39 f6       	brne	.-114    	; 0x2050 <gfx_term_print+0xe>
    20c2:	df 91       	pop	r29
    20c4:	cf 91       	pop	r28
    20c6:	1f 91       	pop	r17
    20c8:	08 95       	ret

000020ca <gfx_print_text_P>:
    20ca:	cf 93       	push	r28
    20cc:	df 93       	push	r29
    20ce:	ec 01       	movw	r28, r24
    20d0:	05 c0       	rjmp	.+10     	; 0x20dc <gfx_print_text_P+0x12>
    20d2:	21 96       	adiw	r28, 0x01	; 1
    20d4:	f9 01       	movw	r30, r18
    20d6:	84 91       	lpm	r24, Z+
    20d8:	0e 94 fd 0f 	call	0x1ffa	; 0x1ffa <gfx_print_char>
    20dc:	9e 01       	movw	r18, r28
    20de:	fe 01       	movw	r30, r28
    20e0:	94 91       	lpm	r25, Z+
    20e2:	99 23       	and	r25, r25
    20e4:	b1 f7       	brne	.-20     	; 0x20d2 <gfx_print_text_P+0x8>
    20e6:	df 91       	pop	r29
    20e8:	cf 91       	pop	r28
    20ea:	08 95       	ret

000020ec <gfx_print_text>:
    20ec:	cf 93       	push	r28
    20ee:	df 93       	push	r29
    20f0:	ec 01       	movw	r28, r24
    20f2:	03 c0       	rjmp	.+6      	; 0x20fa <gfx_print_text+0xe>
    20f4:	21 96       	adiw	r28, 0x01	; 1
    20f6:	0e 94 fd 0f 	call	0x1ffa	; 0x1ffa <gfx_print_char>
    20fa:	88 81       	ld	r24, Y
    20fc:	88 23       	and	r24, r24
    20fe:	d1 f7       	brne	.-12     	; 0x20f4 <gfx_print_text+0x8>
    2100:	df 91       	pop	r29
    2102:	cf 91       	pop	r28
    2104:	08 95       	ret

00002106 <_copro_check_busy>:
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	28 2f       	mov	r18, r24
    210a:	30 e0       	ldi	r19, 0x00	; 0
    210c:	f9 01       	movw	r30, r18
    210e:	83 e0       	ldi	r24, 0x03	; 3
    2110:	ee 0f       	add	r30, r30
    2112:	ff 1f       	adc	r31, r31
    2114:	8a 95       	dec	r24
    2116:	e1 f7       	brne	.-8      	; 0x2110 <_copro_check_busy+0xa>
    2118:	e2 1b       	sub	r30, r18
    211a:	f3 0b       	sbc	r31, r19
    211c:	e2 56       	subi	r30, 0x62	; 98
    211e:	f9 4f       	sbci	r31, 0xF9	; 249
    2120:	80 81       	ld	r24, Z
    2122:	8f 3f       	cpi	r24, 0xFF	; 255
    2124:	09 f0       	breq	.+2      	; 0x2128 <_copro_check_busy+0x22>
    2126:	91 e0       	ldi	r25, 0x01	; 1
    2128:	89 2f       	mov	r24, r25
    212a:	08 95       	ret

0000212c <copro_update>:
    212c:	f8 94       	cli
    212e:	90 91 d6 06 	lds	r25, 0x06D6
    2132:	80 e0       	ldi	r24, 0x00	; 0
    2134:	e6 ed       	ldi	r30, 0xD6	; 214
    2136:	f6 e0       	ldi	r31, 0x06	; 6
    2138:	22 91       	ld	r18, -Z
    213a:	82 0f       	add	r24, r18
    213c:	91 1d       	adc	r25, r1
    213e:	90 93 b8 06 	sts	0x06B8, r25
    2142:	80 93 b7 06 	sts	0x06B7, r24
    2146:	93 81       	ldd	r25, Z+3	; 0x03
    2148:	80 e0       	ldi	r24, 0x00	; 0
    214a:	22 81       	ldd	r18, Z+2	; 0x02
    214c:	82 0f       	add	r24, r18
    214e:	91 1d       	adc	r25, r1
    2150:	90 93 ba 06 	sts	0x06BA, r25
    2154:	80 93 b9 06 	sts	0x06B9, r24
    2158:	95 81       	ldd	r25, Z+5	; 0x05
    215a:	80 e0       	ldi	r24, 0x00	; 0
    215c:	24 81       	ldd	r18, Z+4	; 0x04
    215e:	82 0f       	add	r24, r18
    2160:	91 1d       	adc	r25, r1
    2162:	90 93 bc 06 	sts	0x06BC, r25
    2166:	80 93 bb 06 	sts	0x06BB, r24
    216a:	97 81       	ldd	r25, Z+7	; 0x07
    216c:	80 e0       	ldi	r24, 0x00	; 0
    216e:	26 81       	ldd	r18, Z+6	; 0x06
    2170:	82 0f       	add	r24, r18
    2172:	91 1d       	adc	r25, r1
    2174:	90 93 be 06 	sts	0x06BE, r25
    2178:	80 93 bd 06 	sts	0x06BD, r24
    217c:	91 85       	ldd	r25, Z+9	; 0x09
    217e:	80 e0       	ldi	r24, 0x00	; 0
    2180:	20 85       	ldd	r18, Z+8	; 0x08
    2182:	82 0f       	add	r24, r18
    2184:	91 1d       	adc	r25, r1
    2186:	90 93 c0 06 	sts	0x06C0, r25
    218a:	80 93 bf 06 	sts	0x06BF, r24
    218e:	78 94       	sei
    2190:	f8 94       	cli
    2192:	20 91 df 06 	lds	r18, 0x06DF
    2196:	80 91 9a 06 	lds	r24, 0x069A
    219a:	90 91 9b 06 	lds	r25, 0x069B
    219e:	82 0f       	add	r24, r18
    21a0:	91 1d       	adc	r25, r1
    21a2:	30 91 e0 06 	lds	r19, 0x06E0
    21a6:	20 e0       	ldi	r18, 0x00	; 0
    21a8:	82 0f       	add	r24, r18
    21aa:	93 1f       	adc	r25, r19
    21ac:	90 93 b4 06 	sts	0x06B4, r25
    21b0:	80 93 b3 06 	sts	0x06B3, r24
    21b4:	20 91 e1 06 	lds	r18, 0x06E1
    21b8:	80 91 98 06 	lds	r24, 0x0698
    21bc:	90 91 99 06 	lds	r25, 0x0699
    21c0:	82 0f       	add	r24, r18
    21c2:	91 1d       	adc	r25, r1
    21c4:	30 91 e2 06 	lds	r19, 0x06E2
    21c8:	20 e0       	ldi	r18, 0x00	; 0
    21ca:	82 0f       	add	r24, r18
    21cc:	93 1f       	adc	r25, r19
    21ce:	90 93 cc 06 	sts	0x06CC, r25
    21d2:	80 93 cb 06 	sts	0x06CB, r24
    21d6:	90 91 e4 06 	lds	r25, 0x06E4
    21da:	80 e0       	ldi	r24, 0x00	; 0
    21dc:	20 91 e3 06 	lds	r18, 0x06E3
    21e0:	82 0f       	add	r24, r18
    21e2:	91 1d       	adc	r25, r1
    21e4:	90 93 f4 06 	sts	0x06F4, r25
    21e8:	80 93 f3 06 	sts	0x06F3, r24
    21ec:	90 91 e6 06 	lds	r25, 0x06E6
    21f0:	80 e0       	ldi	r24, 0x00	; 0
    21f2:	20 91 e5 06 	lds	r18, 0x06E5
    21f6:	82 0f       	add	r24, r18
    21f8:	91 1d       	adc	r25, r1
    21fa:	90 93 ca 06 	sts	0x06CA, r25
    21fe:	80 93 c9 06 	sts	0x06C9, r24
    2202:	90 91 e8 06 	lds	r25, 0x06E8
    2206:	80 e0       	ldi	r24, 0x00	; 0
    2208:	20 91 e7 06 	lds	r18, 0x06E7
    220c:	82 0f       	add	r24, r18
    220e:	91 1d       	adc	r25, r1
    2210:	90 93 9d 06 	sts	0x069D, r25
    2214:	80 93 9c 06 	sts	0x069C, r24
    2218:	90 91 ea 06 	lds	r25, 0x06EA
    221c:	80 e0       	ldi	r24, 0x00	; 0
    221e:	20 91 e9 06 	lds	r18, 0x06E9
    2222:	82 0f       	add	r24, r18
    2224:	91 1d       	adc	r25, r1
    2226:	90 93 d4 06 	sts	0x06D4, r25
    222a:	80 93 d3 06 	sts	0x06D3, r24
    222e:	78 94       	sei
    2230:	f8 94       	cli
    2232:	90 91 ed 06 	lds	r25, 0x06ED
    2236:	80 e0       	ldi	r24, 0x00	; 0
    2238:	20 91 ec 06 	lds	r18, 0x06EC
    223c:	82 0f       	add	r24, r18
    223e:	91 1d       	adc	r25, r1
    2240:	90 93 b6 06 	sts	0x06B6, r25
    2244:	80 93 b5 06 	sts	0x06B5, r24
    2248:	90 91 ef 06 	lds	r25, 0x06EF
    224c:	80 e0       	ldi	r24, 0x00	; 0
    224e:	20 91 ee 06 	lds	r18, 0x06EE
    2252:	82 0f       	add	r24, r18
    2254:	91 1d       	adc	r25, r1
    2256:	90 93 f1 06 	sts	0x06F1, r25
    225a:	80 93 f0 06 	sts	0x06F0, r24
    225e:	78 94       	sei
    2260:	81 e0       	ldi	r24, 0x01	; 1
    2262:	08 95       	ret

00002264 <copro_stop>:
    2264:	f8 94       	cli
    2266:	81 e0       	ldi	r24, 0x01	; 1
    2268:	80 93 9e 06 	sts	0x069E, r24
    226c:	78 94       	sei
    226e:	08 95       	ret

00002270 <copro_stopImmediate>:
    2270:	f8 94       	cli
    2272:	8a e0       	ldi	r24, 0x0A	; 10
    2274:	80 93 9e 06 	sts	0x069E, r24
    2278:	78 94       	sei
    227a:	81 e0       	ldi	r24, 0x01	; 1
    227c:	08 95       	ret

0000227e <copro_setPWM>:
    227e:	f8 94       	cli
    2280:	25 e0       	ldi	r18, 0x05	; 5
    2282:	20 93 9e 06 	sts	0x069E, r18
    2286:	80 93 9f 06 	sts	0x069F, r24
    228a:	90 93 a0 06 	sts	0x06A0, r25
    228e:	60 93 a1 06 	sts	0x06A1, r22
    2292:	70 93 a2 06 	sts	0x06A2, r23
    2296:	78 94       	sei
    2298:	81 e0       	ldi	r24, 0x01	; 1
    229a:	08 95       	ret

0000229c <copro_setSpeed>:
    229c:	f8 94       	cli
    229e:	22 e0       	ldi	r18, 0x02	; 2
    22a0:	20 93 9e 06 	sts	0x069E, r18
    22a4:	80 93 9f 06 	sts	0x069F, r24
    22a8:	90 93 a0 06 	sts	0x06A0, r25
    22ac:	60 93 a1 06 	sts	0x06A1, r22
    22b0:	70 93 a2 06 	sts	0x06A2, r23
    22b4:	78 94       	sei
    22b6:	81 e0       	ldi	r24, 0x01	; 1
    22b8:	08 95       	ret

000022ba <copro_setTargetAbs>:
    22ba:	20 91 9a 06 	lds	r18, 0x069A
    22be:	30 91 9b 06 	lds	r19, 0x069B
    22c2:	fc 01       	movw	r30, r24
    22c4:	e2 1b       	sub	r30, r18
    22c6:	f3 0b       	sbc	r31, r19
    22c8:	9f 01       	movw	r18, r30
    22ca:	80 91 98 06 	lds	r24, 0x0698
    22ce:	90 91 99 06 	lds	r25, 0x0699
    22d2:	68 1b       	sub	r22, r24
    22d4:	79 0b       	sbc	r23, r25
    22d6:	f8 94       	cli
    22d8:	83 e0       	ldi	r24, 0x03	; 3
    22da:	80 93 9e 06 	sts	0x069E, r24
    22de:	e0 93 9f 06 	sts	0x069F, r30
    22e2:	30 93 a0 06 	sts	0x06A0, r19
    22e6:	60 93 a1 06 	sts	0x06A1, r22
    22ea:	70 93 a2 06 	sts	0x06A2, r23
    22ee:	40 93 a3 06 	sts	0x06A3, r20
    22f2:	50 93 a4 06 	sts	0x06A4, r21
    22f6:	78 94       	sei
    22f8:	81 e0       	ldi	r24, 0x01	; 1
    22fa:	08 95       	ret

000022fc <copro_setTargetRel>:
    22fc:	f8 94       	cli
    22fe:	24 e0       	ldi	r18, 0x04	; 4
    2300:	20 93 9e 06 	sts	0x069E, r18
    2304:	80 93 9f 06 	sts	0x069F, r24
    2308:	90 93 a0 06 	sts	0x06A0, r25
    230c:	60 93 a1 06 	sts	0x06A1, r22
    2310:	70 93 a2 06 	sts	0x06A2, r23
    2314:	40 93 a3 06 	sts	0x06A3, r20
    2318:	50 93 a4 06 	sts	0x06A4, r21
    231c:	78 94       	sei
    231e:	81 e0       	ldi	r24, 0x01	; 1
    2320:	08 95       	ret

00002322 <copro_setSpeedParameters>:
    2322:	78 94       	sei
    2324:	90 91 ac 06 	lds	r25, 0x06AC
    2328:	20 e1       	ldi	r18, 0x10	; 16
    232a:	37 e2       	ldi	r19, 0x27	; 39
    232c:	21 50       	subi	r18, 0x01	; 1
    232e:	30 40       	sbci	r19, 0x00	; 0
    2330:	11 f0       	breq	.+4      	; 0x2336 <copro_setSpeedParameters+0x14>
    2332:	9f 3f       	cpi	r25, 0xFF	; 255
    2334:	d9 f7       	brne	.-10     	; 0x232c <copro_setSpeedParameters+0xa>
    2336:	f8 94       	cli
    2338:	96 e0       	ldi	r25, 0x06	; 6
    233a:	90 93 ac 06 	sts	0x06AC, r25
    233e:	80 93 ad 06 	sts	0x06AD, r24
    2342:	60 93 ae 06 	sts	0x06AE, r22
    2346:	40 93 af 06 	sts	0x06AF, r20
    234a:	78 94       	sei
    234c:	81 e0       	ldi	r24, 0x01	; 1
    234e:	08 95       	ret

00002350 <copro_setPositionParameters>:
    2350:	81 e0       	ldi	r24, 0x01	; 1
    2352:	08 95       	ret

00002354 <copro_resetOdometry>:
    2354:	f8 94       	cli
    2356:	30 91 e2 06 	lds	r19, 0x06E2
    235a:	20 e0       	ldi	r18, 0x00	; 0
    235c:	40 91 e1 06 	lds	r20, 0x06E1
    2360:	f9 01       	movw	r30, r18
    2362:	e4 0f       	add	r30, r20
    2364:	f1 1d       	adc	r31, r1
    2366:	af 01       	movw	r20, r30
    2368:	30 91 e0 06 	lds	r19, 0x06E0
    236c:	20 e0       	ldi	r18, 0x00	; 0
    236e:	e0 91 df 06 	lds	r30, 0x06DF
    2372:	2e 0f       	add	r18, r30
    2374:	31 1d       	adc	r19, r1
    2376:	fc 01       	movw	r30, r24
    2378:	e2 1b       	sub	r30, r18
    237a:	f3 0b       	sbc	r31, r19
    237c:	f0 93 9b 06 	sts	0x069B, r31
    2380:	e0 93 9a 06 	sts	0x069A, r30
    2384:	9b 01       	movw	r18, r22
    2386:	24 1b       	sub	r18, r20
    2388:	35 0b       	sbc	r19, r21
    238a:	30 93 99 06 	sts	0x0699, r19
    238e:	20 93 98 06 	sts	0x0698, r18
    2392:	90 93 b4 06 	sts	0x06B4, r25
    2396:	80 93 b3 06 	sts	0x06B3, r24
    239a:	70 93 cc 06 	sts	0x06CC, r23
    239e:	60 93 cb 06 	sts	0x06CB, r22
    23a2:	78 94       	sei
    23a4:	81 e0       	ldi	r24, 0x01	; 1
    23a6:	08 95       	ret

000023a8 <copro_ir_stop>:
    23a8:	78 94       	sei
    23aa:	20 91 a5 06 	lds	r18, 0x06A5
    23ae:	80 e1       	ldi	r24, 0x10	; 16
    23b0:	97 e2       	ldi	r25, 0x27	; 39
    23b2:	01 97       	sbiw	r24, 0x01	; 1
    23b4:	11 f0       	breq	.+4      	; 0x23ba <copro_ir_stop+0x12>
    23b6:	2f 3f       	cpi	r18, 0xFF	; 255
    23b8:	e1 f7       	brne	.-8      	; 0x23b2 <copro_ir_stop+0xa>
    23ba:	f8 94       	cli
    23bc:	88 e0       	ldi	r24, 0x08	; 8
    23be:	80 93 a5 06 	sts	0x06A5, r24
    23c2:	78 94       	sei
    23c4:	81 e0       	ldi	r24, 0x01	; 1
    23c6:	08 95       	ret

000023c8 <copro_ir_startMeasure>:
    23c8:	78 94       	sei
    23ca:	20 91 a5 06 	lds	r18, 0x06A5
    23ce:	80 e1       	ldi	r24, 0x10	; 16
    23d0:	97 e2       	ldi	r25, 0x27	; 39
    23d2:	01 97       	sbiw	r24, 0x01	; 1
    23d4:	11 f0       	breq	.+4      	; 0x23da <copro_ir_startMeasure+0x12>
    23d6:	2f 3f       	cpi	r18, 0xFF	; 255
    23d8:	e1 f7       	brne	.-8      	; 0x23d2 <copro_ir_startMeasure+0xa>
    23da:	f8 94       	cli
    23dc:	87 e0       	ldi	r24, 0x07	; 7
    23de:	80 93 a5 06 	sts	0x06A5, r24
    23e2:	78 94       	sei
    23e4:	81 e0       	ldi	r24, 0x01	; 1
    23e6:	08 95       	ret

000023e8 <copro_transmitRC5>:
    23e8:	78 94       	sei
    23ea:	40 91 a5 06 	lds	r20, 0x06A5
    23ee:	20 e1       	ldi	r18, 0x10	; 16
    23f0:	37 e2       	ldi	r19, 0x27	; 39
    23f2:	21 50       	subi	r18, 0x01	; 1
    23f4:	30 40       	sbci	r19, 0x00	; 0
    23f6:	11 f0       	breq	.+4      	; 0x23fc <copro_transmitRC5+0x14>
    23f8:	4f 3f       	cpi	r20, 0xFF	; 255
    23fa:	d9 f7       	brne	.-10     	; 0x23f2 <copro_transmitRC5+0xa>
    23fc:	f8 94       	cli
    23fe:	29 e0       	ldi	r18, 0x09	; 9
    2400:	20 93 a5 06 	sts	0x06A5, r18
    2404:	80 93 a6 06 	sts	0x06A6, r24
    2408:	90 93 a7 06 	sts	0x06A7, r25
    240c:	78 94       	sei
    240e:	81 e0       	ldi	r24, 0x01	; 1
    2410:	08 95       	ret

00002412 <spi_finished_callback>:
    2412:	90 91 f2 06 	lds	r25, 0x06F2
    2416:	9f 5f       	subi	r25, 0xFF	; 255
    2418:	90 93 f2 06 	sts	0x06F2, r25
    241c:	8b 31       	cpi	r24, 0x1B	; 27
    241e:	41 f4       	brne	.+16     	; 0x2430 <spi_finished_callback+0x1e>
    2420:	a5 ed       	ldi	r26, 0xD5	; 213
    2422:	b6 e0       	ldi	r27, 0x06	; 6
    2424:	ec e6       	ldi	r30, 0x6C	; 108
    2426:	f6 e0       	ldi	r31, 0x06	; 6
    2428:	01 90       	ld	r0, Z+
    242a:	0d 92       	st	X+, r0
    242c:	81 50       	subi	r24, 0x01	; 1
    242e:	e1 f7       	brne	.-8      	; 0x2428 <spi_finished_callback+0x16>
    2430:	8f ef       	ldi	r24, 0xFF	; 255
    2432:	80 93 5a 06 	sts	0x065A, r24
    2436:	80 93 53 06 	sts	0x0653, r24
    243a:	80 93 4c 06 	sts	0x064C, r24
    243e:	80 91 9e 06 	lds	r24, 0x069E
    2442:	8f 3f       	cpi	r24, 0xFF	; 255
    2444:	11 f4       	brne	.+4      	; 0x244a <spi_finished_callback+0x38>
    2446:	80 e0       	ldi	r24, 0x00	; 0
    2448:	0d c0       	rjmp	.+26     	; 0x2464 <spi_finished_callback+0x52>
    244a:	ac e4       	ldi	r26, 0x4C	; 76
    244c:	b6 e0       	ldi	r27, 0x06	; 6
    244e:	ee e9       	ldi	r30, 0x9E	; 158
    2450:	f6 e0       	ldi	r31, 0x06	; 6
    2452:	87 e0       	ldi	r24, 0x07	; 7
    2454:	01 90       	ld	r0, Z+
    2456:	0d 92       	st	X+, r0
    2458:	81 50       	subi	r24, 0x01	; 1
    245a:	e1 f7       	brne	.-8      	; 0x2454 <spi_finished_callback+0x42>
    245c:	8f ef       	ldi	r24, 0xFF	; 255
    245e:	80 93 9e 06 	sts	0x069E, r24
    2462:	87 e0       	ldi	r24, 0x07	; 7
    2464:	90 91 a5 06 	lds	r25, 0x06A5
    2468:	9f 3f       	cpi	r25, 0xFF	; 255
    246a:	79 f0       	breq	.+30     	; 0x248a <spi_finished_callback+0x78>
    246c:	e8 2f       	mov	r30, r24
    246e:	f0 e0       	ldi	r31, 0x00	; 0
    2470:	e4 5b       	subi	r30, 0xB4	; 180
    2472:	f9 4f       	sbci	r31, 0xF9	; 249
    2474:	a5 ea       	ldi	r26, 0xA5	; 165
    2476:	b6 e0       	ldi	r27, 0x06	; 6
    2478:	97 e0       	ldi	r25, 0x07	; 7
    247a:	0d 90       	ld	r0, X+
    247c:	01 92       	st	Z+, r0
    247e:	91 50       	subi	r25, 0x01	; 1
    2480:	e1 f7       	brne	.-8      	; 0x247a <spi_finished_callback+0x68>
    2482:	9f ef       	ldi	r25, 0xFF	; 255
    2484:	90 93 a5 06 	sts	0x06A5, r25
    2488:	89 5f       	subi	r24, 0xF9	; 249
    248a:	90 91 ac 06 	lds	r25, 0x06AC
    248e:	9f 3f       	cpi	r25, 0xFF	; 255
    2490:	81 f0       	breq	.+32     	; 0x24b2 <spi_finished_callback+0xa0>
    2492:	e8 2f       	mov	r30, r24
    2494:	f0 e0       	ldi	r31, 0x00	; 0
    2496:	e4 5b       	subi	r30, 0xB4	; 180
    2498:	f9 4f       	sbci	r31, 0xF9	; 249
    249a:	ac ea       	ldi	r26, 0xAC	; 172
    249c:	b6 e0       	ldi	r27, 0x06	; 6
    249e:	87 e0       	ldi	r24, 0x07	; 7
    24a0:	0d 90       	ld	r0, X+
    24a2:	01 92       	st	Z+, r0
    24a4:	81 50       	subi	r24, 0x01	; 1
    24a6:	e1 f7       	brne	.-8      	; 0x24a0 <spi_finished_callback+0x8e>
    24a8:	8f ef       	ldi	r24, 0xFF	; 255
    24aa:	80 93 ac 06 	sts	0x06AC, r24
    24ae:	85 e1       	ldi	r24, 0x15	; 21
    24b0:	08 95       	ret
    24b2:	88 23       	and	r24, r24
    24b4:	11 f4       	brne	.+4      	; 0x24ba <spi_finished_callback+0xa8>
    24b6:	87 e0       	ldi	r24, 0x07	; 7
    24b8:	08 95       	ret
    24ba:	85 e1       	ldi	r24, 0x15	; 21
    24bc:	08 95       	ret

000024be <bot_update>:
    24be:	87 e0       	ldi	r24, 0x07	; 7
    24c0:	0e 94 bf 13 	call	0x277e	; 0x277e <adc_read>
    24c4:	90 93 f6 06 	sts	0x06F6, r25
    24c8:	80 93 f5 06 	sts	0x06F5, r24
    24cc:	08 95       	ret

000024ce <bot_init>:
    24ce:	8f 9a       	sbi	0x11, 7	; 17
    24d0:	97 98       	cbi	0x12, 7	; 18
    24d2:	8a e0       	ldi	r24, 0x0A	; 10
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
    24da:	97 9a       	sbi	0x12, 7	; 18
    24dc:	84 e6       	ldi	r24, 0x64	; 100
    24de:	90 e0       	ldi	r25, 0x00	; 0
    24e0:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <delay>
    24e4:	08 95       	ret

000024e6 <leds_init>:
    24e6:	bf 9a       	sbi	0x17, 7	; 23
    24e8:	c7 9a       	sbi	0x18, 7	; 24
    24ea:	bd 9a       	sbi	0x17, 5	; 23
    24ec:	be 9a       	sbi	0x17, 6	; 23
    24ee:	8f ef       	ldi	r24, 0xFF	; 255
    24f0:	82 b9       	out	0x02, r24	; 2
    24f2:	84 bb       	out	0x14, r24	; 20
    24f4:	08 95       	ret

000024f6 <leds_set_status>:
    24f6:	48 2f       	mov	r20, r24
    24f8:	80 ff       	sbrs	r24, 0
    24fa:	0b c0       	rjmp	.+22     	; 0x2512 <leds_set_status+0x1c>
    24fc:	95 b3       	in	r25, 0x15	; 21
    24fe:	21 e0       	ldi	r18, 0x01	; 1
    2500:	30 e0       	ldi	r19, 0x00	; 0
    2502:	06 2e       	mov	r0, r22
    2504:	02 c0       	rjmp	.+4      	; 0x250a <leds_set_status+0x14>
    2506:	22 0f       	add	r18, r18
    2508:	33 1f       	adc	r19, r19
    250a:	0a 94       	dec	r0
    250c:	e2 f7       	brpl	.-8      	; 0x2506 <leds_set_status+0x10>
    250e:	92 2b       	or	r25, r18
    2510:	0c c0       	rjmp	.+24     	; 0x252a <leds_set_status+0x34>
    2512:	85 b3       	in	r24, 0x15	; 21
    2514:	21 e0       	ldi	r18, 0x01	; 1
    2516:	30 e0       	ldi	r19, 0x00	; 0
    2518:	06 2e       	mov	r0, r22
    251a:	02 c0       	rjmp	.+4      	; 0x2520 <leds_set_status+0x2a>
    251c:	22 0f       	add	r18, r18
    251e:	33 1f       	adc	r19, r19
    2520:	0a 94       	dec	r0
    2522:	e2 f7       	brpl	.-8      	; 0x251c <leds_set_status+0x26>
    2524:	92 2f       	mov	r25, r18
    2526:	90 95       	com	r25
    2528:	98 23       	and	r25, r24
    252a:	95 bb       	out	0x15, r25	; 21
    252c:	41 ff       	sbrs	r20, 1
    252e:	0a c0       	rjmp	.+20     	; 0x2544 <leds_set_status+0x4e>
    2530:	83 b1       	in	r24, 0x03	; 3
    2532:	21 e0       	ldi	r18, 0x01	; 1
    2534:	30 e0       	ldi	r19, 0x00	; 0
    2536:	02 c0       	rjmp	.+4      	; 0x253c <leds_set_status+0x46>
    2538:	22 0f       	add	r18, r18
    253a:	33 1f       	adc	r19, r19
    253c:	6a 95       	dec	r22
    253e:	e2 f7       	brpl	.-8      	; 0x2538 <leds_set_status+0x42>
    2540:	82 2b       	or	r24, r18
    2542:	0a c0       	rjmp	.+20     	; 0x2558 <leds_set_status+0x62>
    2544:	23 b1       	in	r18, 0x03	; 3
    2546:	81 e0       	ldi	r24, 0x01	; 1
    2548:	90 e0       	ldi	r25, 0x00	; 0
    254a:	02 c0       	rjmp	.+4      	; 0x2550 <leds_set_status+0x5a>
    254c:	88 0f       	add	r24, r24
    254e:	99 1f       	adc	r25, r25
    2550:	6a 95       	dec	r22
    2552:	e2 f7       	brpl	.-8      	; 0x254c <leds_set_status+0x56>
    2554:	80 95       	com	r24
    2556:	82 23       	and	r24, r18
    2558:	83 b9       	out	0x03, r24	; 3
    255a:	08 95       	ret

0000255c <leds_set_status_intensity>:
    255c:	90 93 fe 06 	sts	0x06FE, r25
    2560:	80 93 fd 06 	sts	0x06FD, r24
    2564:	08 95       	ret

00002566 <leds_get_status_intensity>:
    2566:	80 91 fd 06 	lds	r24, 0x06FD
    256a:	90 91 fe 06 	lds	r25, 0x06FE
    256e:	08 95       	ret

00002570 <leds_set_headlights>:
    2570:	90 93 f8 06 	sts	0x06F8, r25
    2574:	80 93 f7 06 	sts	0x06F7, r24
    2578:	08 95       	ret

0000257a <leds_get_headlights>:
    257a:	80 91 f7 06 	lds	r24, 0x06F7
    257e:	90 91 f8 06 	lds	r25, 0x06F8
    2582:	08 95       	ret

00002584 <leds_set_displaylight>:
    2584:	90 93 fa 06 	sts	0x06FA, r25
    2588:	80 93 f9 06 	sts	0x06F9, r24
    258c:	08 95       	ret

0000258e <leds_get_displaylight>:
    258e:	80 91 f9 06 	lds	r24, 0x06F9
    2592:	90 91 fa 06 	lds	r25, 0x06FA
    2596:	08 95       	ret

00002598 <sound_init>:
    2598:	bc 9a       	sbi	0x17, 4	; 23
    259a:	08 95       	ret

0000259c <sound_tone>:
    259c:	45 e3       	ldi	r20, 0x35	; 53
    259e:	22 c0       	rjmp	.+68     	; 0x25e4 <sound_tone+0x48>
    25a0:	c4 98       	cbi	0x18, 4	; 24
    25a2:	28 2f       	mov	r18, r24
    25a4:	39 2f       	mov	r19, r25
    25a6:	0a c0       	rjmp	.+20     	; 0x25bc <sound_tone+0x20>
    25a8:	61 50       	subi	r22, 0x01	; 1
    25aa:	70 40       	sbci	r23, 0x00	; 0
    25ac:	54 2f       	mov	r21, r20
    25ae:	5a 95       	dec	r21
    25b0:	f1 f7       	brne	.-4      	; 0x25ae <sound_tone+0x12>
    25b2:	61 15       	cp	r22, r1
    25b4:	71 05       	cpc	r23, r1
    25b6:	29 f0       	breq	.+10     	; 0x25c2 <sound_tone+0x26>
    25b8:	21 50       	subi	r18, 0x01	; 1
    25ba:	30 40       	sbci	r19, 0x00	; 0
    25bc:	21 15       	cp	r18, r1
    25be:	31 05       	cpc	r19, r1
    25c0:	99 f7       	brne	.-26     	; 0x25a8 <sound_tone+0xc>
    25c2:	c4 9a       	sbi	0x18, 4	; 24
    25c4:	28 2f       	mov	r18, r24
    25c6:	39 2f       	mov	r19, r25
    25c8:	07 c0       	rjmp	.+14     	; 0x25d8 <sound_tone+0x3c>
    25ca:	61 50       	subi	r22, 0x01	; 1
    25cc:	70 40       	sbci	r23, 0x00	; 0
    25ce:	21 50       	subi	r18, 0x01	; 1
    25d0:	30 40       	sbci	r19, 0x00	; 0
    25d2:	54 2f       	mov	r21, r20
    25d4:	5a 95       	dec	r21
    25d6:	f1 f7       	brne	.-4      	; 0x25d4 <sound_tone+0x38>
    25d8:	61 15       	cp	r22, r1
    25da:	71 05       	cpc	r23, r1
    25dc:	19 f0       	breq	.+6      	; 0x25e4 <sound_tone+0x48>
    25de:	21 15       	cp	r18, r1
    25e0:	31 05       	cpc	r19, r1
    25e2:	99 f7       	brne	.-26     	; 0x25ca <sound_tone+0x2e>
    25e4:	61 15       	cp	r22, r1
    25e6:	71 05       	cpc	r23, r1
    25e8:	d9 f6       	brne	.-74     	; 0x25a0 <sound_tone+0x4>
    25ea:	08 95       	ret

000025ec <pwm_init>:
    25ec:	10 92 00 07 	sts	0x0700, r1
    25f0:	10 92 ff 06 	sts	0x06FF, r1
    25f4:	10 92 fc 06 	sts	0x06FC, r1
    25f8:	10 92 fb 06 	sts	0x06FB, r1
    25fc:	10 92 01 07 	sts	0x0701, r1
    2600:	10 92 02 07 	sts	0x0702, r1
    2604:	10 92 03 07 	sts	0x0703, r1
    2608:	10 92 04 07 	sts	0x0704, r1
    260c:	10 92 f8 06 	sts	0x06F8, r1
    2610:	10 92 f7 06 	sts	0x06F7, r1
    2614:	10 92 fa 06 	sts	0x06FA, r1
    2618:	10 92 f9 06 	sts	0x06F9, r1
    261c:	8f ef       	ldi	r24, 0xFF	; 255
    261e:	93 e0       	ldi	r25, 0x03	; 3
    2620:	90 93 fe 06 	sts	0x06FE, r25
    2624:	80 93 fd 06 	sts	0x06FD, r24
    2628:	c5 98       	cbi	0x18, 5	; 24
    262a:	c6 98       	cbi	0x18, 6	; 24
    262c:	bd 9a       	sbi	0x17, 5	; 23
    262e:	be 9a       	sbi	0x17, 6	; 23
    2630:	bf 9a       	sbi	0x17, 7	; 23
    2632:	c7 9a       	sbi	0x18, 7	; 24
    2634:	1d bc       	out	0x2d, r1	; 45
    2636:	1c bc       	out	0x2c, r1	; 44
    2638:	8a ea       	ldi	r24, 0xAA	; 170
    263a:	8f bd       	out	0x2f, r24	; 47
    263c:	82 e1       	ldi	r24, 0x12	; 18
    263e:	8e bd       	out	0x2e, r24	; 46
    2640:	80 e0       	ldi	r24, 0x00	; 0
    2642:	94 e0       	ldi	r25, 0x04	; 4
    2644:	97 bd       	out	0x27, r25	; 39
    2646:	86 bd       	out	0x26, r24	; 38
    2648:	87 b7       	in	r24, 0x37	; 55
    264a:	84 60       	ori	r24, 0x04	; 4
    264c:	87 bf       	out	0x37, r24	; 55
    264e:	08 95       	ret

00002650 <__vector_14>:
    2650:	1f 92       	push	r1
    2652:	0f 92       	push	r0
    2654:	0f b6       	in	r0, 0x3f	; 63
    2656:	0f 92       	push	r0
    2658:	11 24       	eor	r1, r1
    265a:	2f 93       	push	r18
    265c:	3f 93       	push	r19
    265e:	4f 93       	push	r20
    2660:	8f 93       	push	r24
    2662:	9f 93       	push	r25
    2664:	af 93       	push	r26
    2666:	bf 93       	push	r27
    2668:	80 91 ff 06 	lds	r24, 0x06FF
    266c:	90 91 00 07 	lds	r25, 0x0700
    2670:	9c 01       	movw	r18, r24
    2672:	28 5e       	subi	r18, 0xE8	; 232
    2674:	3f 4f       	sbci	r19, 0xFF	; 255
    2676:	30 93 00 07 	sts	0x0700, r19
    267a:	20 93 ff 06 	sts	0x06FF, r18
    267e:	43 e0       	ldi	r20, 0x03	; 3
    2680:	28 3e       	cpi	r18, 0xE8	; 232
    2682:	34 07       	cpc	r19, r20
    2684:	78 f0       	brcs	.+30     	; 0x26a4 <__vector_14+0x54>
    2686:	80 5d       	subi	r24, 0xD0	; 208
    2688:	93 40       	sbci	r25, 0x03	; 3
    268a:	90 93 00 07 	sts	0x0700, r25
    268e:	80 93 ff 06 	sts	0x06FF, r24
    2692:	80 91 fb 06 	lds	r24, 0x06FB
    2696:	90 91 fc 06 	lds	r25, 0x06FC
    269a:	01 96       	adiw	r24, 0x01	; 1
    269c:	90 93 fc 06 	sts	0x06FC, r25
    26a0:	80 93 fb 06 	sts	0x06FB, r24
    26a4:	80 91 fb 06 	lds	r24, 0x06FB
    26a8:	90 91 fc 06 	lds	r25, 0x06FC
    26ac:	9c 01       	movw	r18, r24
    26ae:	2f 5f       	subi	r18, 0xFF	; 255
    26b0:	3f 4f       	sbci	r19, 0xFF	; 255
    26b2:	30 93 fc 06 	sts	0x06FC, r19
    26b6:	20 93 fb 06 	sts	0x06FB, r18
    26ba:	43 e0       	ldi	r20, 0x03	; 3
    26bc:	28 3e       	cpi	r18, 0xE8	; 232
    26be:	34 07       	cpc	r19, r20
    26c0:	c8 f0       	brcs	.+50     	; 0x26f4 <__vector_14+0xa4>
    26c2:	87 5e       	subi	r24, 0xE7	; 231
    26c4:	93 40       	sbci	r25, 0x03	; 3
    26c6:	90 93 fc 06 	sts	0x06FC, r25
    26ca:	80 93 fb 06 	sts	0x06FB, r24
    26ce:	80 91 01 07 	lds	r24, 0x0701
    26d2:	90 91 02 07 	lds	r25, 0x0702
    26d6:	a0 91 03 07 	lds	r26, 0x0703
    26da:	b0 91 04 07 	lds	r27, 0x0704
    26de:	01 96       	adiw	r24, 0x01	; 1
    26e0:	a1 1d       	adc	r26, r1
    26e2:	b1 1d       	adc	r27, r1
    26e4:	80 93 01 07 	sts	0x0701, r24
    26e8:	90 93 02 07 	sts	0x0702, r25
    26ec:	a0 93 03 07 	sts	0x0703, r26
    26f0:	b0 93 04 07 	sts	0x0704, r27
    26f4:	80 91 f7 06 	lds	r24, 0x06F7
    26f8:	90 91 f8 06 	lds	r25, 0x06F8
    26fc:	23 e0       	ldi	r18, 0x03	; 3
    26fe:	8f 3f       	cpi	r24, 0xFF	; 255
    2700:	92 07       	cpc	r25, r18
    2702:	10 f0       	brcs	.+4      	; 0x2708 <__vector_14+0xb8>
    2704:	80 e0       	ldi	r24, 0x00	; 0
    2706:	94 e0       	ldi	r25, 0x04	; 4
    2708:	9b bd       	out	0x2b, r25	; 43
    270a:	8a bd       	out	0x2a, r24	; 42
    270c:	80 91 f9 06 	lds	r24, 0x06F9
    2710:	90 91 fa 06 	lds	r25, 0x06FA
    2714:	43 e0       	ldi	r20, 0x03	; 3
    2716:	8f 3f       	cpi	r24, 0xFF	; 255
    2718:	94 07       	cpc	r25, r20
    271a:	10 f0       	brcs	.+4      	; 0x2720 <__vector_14+0xd0>
    271c:	80 e0       	ldi	r24, 0x00	; 0
    271e:	94 e0       	ldi	r25, 0x04	; 4
    2720:	99 bd       	out	0x29, r25	; 41
    2722:	88 bd       	out	0x28, r24	; 40
    2724:	80 91 fd 06 	lds	r24, 0x06FD
    2728:	90 91 fe 06 	lds	r25, 0x06FE
    272c:	23 e0       	ldi	r18, 0x03	; 3
    272e:	8f 3f       	cpi	r24, 0xFF	; 255
    2730:	92 07       	cpc	r25, r18
    2732:	10 f0       	brcs	.+4      	; 0x2738 <__vector_14+0xe8>
    2734:	80 e0       	ldi	r24, 0x00	; 0
    2736:	94 e0       	ldi	r25, 0x04	; 4
    2738:	90 93 79 00 	sts	0x0079, r25
    273c:	80 93 78 00 	sts	0x0078, r24
    2740:	bf 91       	pop	r27
    2742:	af 91       	pop	r26
    2744:	9f 91       	pop	r25
    2746:	8f 91       	pop	r24
    2748:	4f 91       	pop	r20
    274a:	3f 91       	pop	r19
    274c:	2f 91       	pop	r18
    274e:	0f 90       	pop	r0
    2750:	0f be       	out	0x3f, r0	; 63
    2752:	0f 90       	pop	r0
    2754:	1f 90       	pop	r1
    2756:	18 95       	reti

00002758 <adc_init>:
    2758:	e1 e6       	ldi	r30, 0x61	; 97
    275a:	f0 e0       	ldi	r31, 0x00	; 0
    275c:	90 81       	ld	r25, Z
    275e:	21 e0       	ldi	r18, 0x01	; 1
    2760:	30 e0       	ldi	r19, 0x00	; 0
    2762:	02 c0       	rjmp	.+4      	; 0x2768 <adc_init+0x10>
    2764:	22 0f       	add	r18, r18
    2766:	33 1f       	adc	r19, r19
    2768:	8a 95       	dec	r24
    276a:	e2 f7       	brpl	.-8      	; 0x2764 <adc_init+0xc>
    276c:	20 95       	com	r18
    276e:	92 23       	and	r25, r18
    2770:	90 83       	st	Z, r25
    2772:	e2 e6       	ldi	r30, 0x62	; 98
    2774:	f0 e0       	ldi	r31, 0x00	; 0
    2776:	80 81       	ld	r24, Z
    2778:	82 23       	and	r24, r18
    277a:	80 83       	st	Z, r24
    277c:	08 95       	ret

0000277e <adc_read>:
    277e:	90 e4       	ldi	r25, 0x40	; 64
    2780:	97 b9       	out	0x07, r25	; 7
    2782:	97 b1       	in	r25, 0x07	; 7
    2784:	87 70       	andi	r24, 0x07	; 7
    2786:	89 2b       	or	r24, r25
    2788:	87 b9       	out	0x07, r24	; 7
    278a:	87 ec       	ldi	r24, 0xC7	; 199
    278c:	86 b9       	out	0x06, r24	; 6
    278e:	01 c0       	rjmp	.+2      	; 0x2792 <adc_read+0x14>
    2790:	00 00       	nop
    2792:	36 99       	sbic	0x06, 6	; 6
    2794:	fd cf       	rjmp	.-6      	; 0x2790 <adc_read+0x12>
    2796:	84 b1       	in	r24, 0x04	; 4
    2798:	95 b1       	in	r25, 0x05	; 5
    279a:	39 2f       	mov	r19, r25
    279c:	20 e0       	ldi	r18, 0x00	; 0
    279e:	28 0f       	add	r18, r24
    27a0:	31 1d       	adc	r19, r1
    27a2:	80 91 05 07 	lds	r24, 0x0705
    27a6:	90 91 06 07 	lds	r25, 0x0706
    27aa:	82 0f       	add	r24, r18
    27ac:	93 1f       	adc	r25, r19
    27ae:	90 93 06 07 	sts	0x0706, r25
    27b2:	80 93 05 07 	sts	0x0705, r24
    27b6:	c9 01       	movw	r24, r18
    27b8:	08 95       	ret

000027ba <adc_get_random_seed>:
    27ba:	80 91 05 07 	lds	r24, 0x0705
    27be:	90 91 06 07 	lds	r25, 0x0706
    27c2:	08 95       	ret

000027c4 <__subsf3>:
    27c4:	50 58       	subi	r21, 0x80	; 128

000027c6 <__addsf3>:
    27c6:	bb 27       	eor	r27, r27
    27c8:	aa 27       	eor	r26, r26
    27ca:	0e d0       	rcall	.+28     	; 0x27e8 <__addsf3x>
    27cc:	dc c0       	rjmp	.+440    	; 0x2986 <__fp_round>
    27ce:	cd d0       	rcall	.+410    	; 0x296a <__fp_pscA>
    27d0:	30 f0       	brcs	.+12     	; 0x27de <__addsf3+0x18>
    27d2:	d2 d0       	rcall	.+420    	; 0x2978 <__fp_pscB>
    27d4:	20 f0       	brcs	.+8      	; 0x27de <__addsf3+0x18>
    27d6:	31 f4       	brne	.+12     	; 0x27e4 <__addsf3+0x1e>
    27d8:	9f 3f       	cpi	r25, 0xFF	; 255
    27da:	11 f4       	brne	.+4      	; 0x27e0 <__addsf3+0x1a>
    27dc:	1e f4       	brtc	.+6      	; 0x27e4 <__addsf3+0x1e>
    27de:	c2 c0       	rjmp	.+388    	; 0x2964 <__fp_nan>
    27e0:	0e f4       	brtc	.+2      	; 0x27e4 <__addsf3+0x1e>
    27e2:	e0 95       	com	r30
    27e4:	e7 fb       	bst	r30, 7
    27e6:	b8 c0       	rjmp	.+368    	; 0x2958 <__fp_inf>

000027e8 <__addsf3x>:
    27e8:	e9 2f       	mov	r30, r25
    27ea:	de d0       	rcall	.+444    	; 0x29a8 <__fp_split3>
    27ec:	80 f3       	brcs	.-32     	; 0x27ce <__addsf3+0x8>
    27ee:	ba 17       	cp	r27, r26
    27f0:	62 07       	cpc	r22, r18
    27f2:	73 07       	cpc	r23, r19
    27f4:	84 07       	cpc	r24, r20
    27f6:	95 07       	cpc	r25, r21
    27f8:	18 f0       	brcs	.+6      	; 0x2800 <__addsf3x+0x18>
    27fa:	71 f4       	brne	.+28     	; 0x2818 <__addsf3x+0x30>
    27fc:	9e f5       	brtc	.+102    	; 0x2864 <__addsf3x+0x7c>
    27fe:	f6 c0       	rjmp	.+492    	; 0x29ec <__fp_zero>
    2800:	0e f4       	brtc	.+2      	; 0x2804 <__addsf3x+0x1c>
    2802:	e0 95       	com	r30
    2804:	0b 2e       	mov	r0, r27
    2806:	ba 2f       	mov	r27, r26
    2808:	a0 2d       	mov	r26, r0
    280a:	0b 01       	movw	r0, r22
    280c:	b9 01       	movw	r22, r18
    280e:	90 01       	movw	r18, r0
    2810:	0c 01       	movw	r0, r24
    2812:	ca 01       	movw	r24, r20
    2814:	a0 01       	movw	r20, r0
    2816:	11 24       	eor	r1, r1
    2818:	ff 27       	eor	r31, r31
    281a:	59 1b       	sub	r21, r25
    281c:	99 f0       	breq	.+38     	; 0x2844 <__addsf3x+0x5c>
    281e:	59 3f       	cpi	r21, 0xF9	; 249
    2820:	50 f4       	brcc	.+20     	; 0x2836 <__addsf3x+0x4e>
    2822:	50 3e       	cpi	r21, 0xE0	; 224
    2824:	68 f1       	brcs	.+90     	; 0x2880 <__addsf3x+0x98>
    2826:	1a 16       	cp	r1, r26
    2828:	f0 40       	sbci	r31, 0x00	; 0
    282a:	a2 2f       	mov	r26, r18
    282c:	23 2f       	mov	r18, r19
    282e:	34 2f       	mov	r19, r20
    2830:	44 27       	eor	r20, r20
    2832:	58 5f       	subi	r21, 0xF8	; 248
    2834:	f3 cf       	rjmp	.-26     	; 0x281c <__addsf3x+0x34>
    2836:	46 95       	lsr	r20
    2838:	37 95       	ror	r19
    283a:	27 95       	ror	r18
    283c:	a7 95       	ror	r26
    283e:	f0 40       	sbci	r31, 0x00	; 0
    2840:	53 95       	inc	r21
    2842:	c9 f7       	brne	.-14     	; 0x2836 <__addsf3x+0x4e>
    2844:	7e f4       	brtc	.+30     	; 0x2864 <__addsf3x+0x7c>
    2846:	1f 16       	cp	r1, r31
    2848:	ba 0b       	sbc	r27, r26
    284a:	62 0b       	sbc	r22, r18
    284c:	73 0b       	sbc	r23, r19
    284e:	84 0b       	sbc	r24, r20
    2850:	ba f0       	brmi	.+46     	; 0x2880 <__addsf3x+0x98>
    2852:	91 50       	subi	r25, 0x01	; 1
    2854:	a1 f0       	breq	.+40     	; 0x287e <__addsf3x+0x96>
    2856:	ff 0f       	add	r31, r31
    2858:	bb 1f       	adc	r27, r27
    285a:	66 1f       	adc	r22, r22
    285c:	77 1f       	adc	r23, r23
    285e:	88 1f       	adc	r24, r24
    2860:	c2 f7       	brpl	.-16     	; 0x2852 <__addsf3x+0x6a>
    2862:	0e c0       	rjmp	.+28     	; 0x2880 <__addsf3x+0x98>
    2864:	ba 0f       	add	r27, r26
    2866:	62 1f       	adc	r22, r18
    2868:	73 1f       	adc	r23, r19
    286a:	84 1f       	adc	r24, r20
    286c:	48 f4       	brcc	.+18     	; 0x2880 <__addsf3x+0x98>
    286e:	87 95       	ror	r24
    2870:	77 95       	ror	r23
    2872:	67 95       	ror	r22
    2874:	b7 95       	ror	r27
    2876:	f7 95       	ror	r31
    2878:	9e 3f       	cpi	r25, 0xFE	; 254
    287a:	08 f0       	brcs	.+2      	; 0x287e <__addsf3x+0x96>
    287c:	b3 cf       	rjmp	.-154    	; 0x27e4 <__addsf3+0x1e>
    287e:	93 95       	inc	r25
    2880:	88 0f       	add	r24, r24
    2882:	08 f0       	brcs	.+2      	; 0x2886 <__addsf3x+0x9e>
    2884:	99 27       	eor	r25, r25
    2886:	ee 0f       	add	r30, r30
    2888:	97 95       	ror	r25
    288a:	87 95       	ror	r24
    288c:	08 95       	ret

0000288e <__cmpsf2>:
    288e:	40 d0       	rcall	.+128    	; 0x2910 <__fp_cmp>
    2890:	08 f4       	brcc	.+2      	; 0x2894 <__cmpsf2+0x6>
    2892:	81 e0       	ldi	r24, 0x01	; 1
    2894:	08 95       	ret

00002896 <__floatunsisf>:
    2896:	e8 94       	clt
    2898:	09 c0       	rjmp	.+18     	; 0x28ac <__floatsisf+0x12>

0000289a <__floatsisf>:
    289a:	97 fb       	bst	r25, 7
    289c:	3e f4       	brtc	.+14     	; 0x28ac <__floatsisf+0x12>
    289e:	90 95       	com	r25
    28a0:	80 95       	com	r24
    28a2:	70 95       	com	r23
    28a4:	61 95       	neg	r22
    28a6:	7f 4f       	sbci	r23, 0xFF	; 255
    28a8:	8f 4f       	sbci	r24, 0xFF	; 255
    28aa:	9f 4f       	sbci	r25, 0xFF	; 255
    28ac:	99 23       	and	r25, r25
    28ae:	a9 f0       	breq	.+42     	; 0x28da <__floatsisf+0x40>
    28b0:	f9 2f       	mov	r31, r25
    28b2:	96 e9       	ldi	r25, 0x96	; 150
    28b4:	bb 27       	eor	r27, r27
    28b6:	93 95       	inc	r25
    28b8:	f6 95       	lsr	r31
    28ba:	87 95       	ror	r24
    28bc:	77 95       	ror	r23
    28be:	67 95       	ror	r22
    28c0:	b7 95       	ror	r27
    28c2:	f1 11       	cpse	r31, r1
    28c4:	f8 cf       	rjmp	.-16     	; 0x28b6 <__floatsisf+0x1c>
    28c6:	fa f4       	brpl	.+62     	; 0x2906 <__floatsisf+0x6c>
    28c8:	bb 0f       	add	r27, r27
    28ca:	11 f4       	brne	.+4      	; 0x28d0 <__floatsisf+0x36>
    28cc:	60 ff       	sbrs	r22, 0
    28ce:	1b c0       	rjmp	.+54     	; 0x2906 <__floatsisf+0x6c>
    28d0:	6f 5f       	subi	r22, 0xFF	; 255
    28d2:	7f 4f       	sbci	r23, 0xFF	; 255
    28d4:	8f 4f       	sbci	r24, 0xFF	; 255
    28d6:	9f 4f       	sbci	r25, 0xFF	; 255
    28d8:	16 c0       	rjmp	.+44     	; 0x2906 <__floatsisf+0x6c>
    28da:	88 23       	and	r24, r24
    28dc:	11 f0       	breq	.+4      	; 0x28e2 <__floatsisf+0x48>
    28de:	96 e9       	ldi	r25, 0x96	; 150
    28e0:	11 c0       	rjmp	.+34     	; 0x2904 <__floatsisf+0x6a>
    28e2:	77 23       	and	r23, r23
    28e4:	21 f0       	breq	.+8      	; 0x28ee <__floatsisf+0x54>
    28e6:	9e e8       	ldi	r25, 0x8E	; 142
    28e8:	87 2f       	mov	r24, r23
    28ea:	76 2f       	mov	r23, r22
    28ec:	05 c0       	rjmp	.+10     	; 0x28f8 <__floatsisf+0x5e>
    28ee:	66 23       	and	r22, r22
    28f0:	71 f0       	breq	.+28     	; 0x290e <__floatsisf+0x74>
    28f2:	96 e8       	ldi	r25, 0x86	; 134
    28f4:	86 2f       	mov	r24, r22
    28f6:	70 e0       	ldi	r23, 0x00	; 0
    28f8:	60 e0       	ldi	r22, 0x00	; 0
    28fa:	2a f0       	brmi	.+10     	; 0x2906 <__floatsisf+0x6c>
    28fc:	9a 95       	dec	r25
    28fe:	66 0f       	add	r22, r22
    2900:	77 1f       	adc	r23, r23
    2902:	88 1f       	adc	r24, r24
    2904:	da f7       	brpl	.-10     	; 0x28fc <__floatsisf+0x62>
    2906:	88 0f       	add	r24, r24
    2908:	96 95       	lsr	r25
    290a:	87 95       	ror	r24
    290c:	97 f9       	bld	r25, 7
    290e:	08 95       	ret

00002910 <__fp_cmp>:
    2910:	99 0f       	add	r25, r25
    2912:	00 08       	sbc	r0, r0
    2914:	55 0f       	add	r21, r21
    2916:	aa 0b       	sbc	r26, r26
    2918:	e0 e8       	ldi	r30, 0x80	; 128
    291a:	fe ef       	ldi	r31, 0xFE	; 254
    291c:	16 16       	cp	r1, r22
    291e:	17 06       	cpc	r1, r23
    2920:	e8 07       	cpc	r30, r24
    2922:	f9 07       	cpc	r31, r25
    2924:	c0 f0       	brcs	.+48     	; 0x2956 <__fp_cmp+0x46>
    2926:	12 16       	cp	r1, r18
    2928:	13 06       	cpc	r1, r19
    292a:	e4 07       	cpc	r30, r20
    292c:	f5 07       	cpc	r31, r21
    292e:	98 f0       	brcs	.+38     	; 0x2956 <__fp_cmp+0x46>
    2930:	62 1b       	sub	r22, r18
    2932:	73 0b       	sbc	r23, r19
    2934:	84 0b       	sbc	r24, r20
    2936:	95 0b       	sbc	r25, r21
    2938:	39 f4       	brne	.+14     	; 0x2948 <__fp_cmp+0x38>
    293a:	0a 26       	eor	r0, r26
    293c:	61 f0       	breq	.+24     	; 0x2956 <__fp_cmp+0x46>
    293e:	23 2b       	or	r18, r19
    2940:	24 2b       	or	r18, r20
    2942:	25 2b       	or	r18, r21
    2944:	21 f4       	brne	.+8      	; 0x294e <__fp_cmp+0x3e>
    2946:	08 95       	ret
    2948:	0a 26       	eor	r0, r26
    294a:	09 f4       	brne	.+2      	; 0x294e <__fp_cmp+0x3e>
    294c:	a1 40       	sbci	r26, 0x01	; 1
    294e:	a6 95       	lsr	r26
    2950:	8f ef       	ldi	r24, 0xFF	; 255
    2952:	81 1d       	adc	r24, r1
    2954:	81 1d       	adc	r24, r1
    2956:	08 95       	ret

00002958 <__fp_inf>:
    2958:	97 f9       	bld	r25, 7
    295a:	9f 67       	ori	r25, 0x7F	; 127
    295c:	80 e8       	ldi	r24, 0x80	; 128
    295e:	70 e0       	ldi	r23, 0x00	; 0
    2960:	60 e0       	ldi	r22, 0x00	; 0
    2962:	08 95       	ret

00002964 <__fp_nan>:
    2964:	9f ef       	ldi	r25, 0xFF	; 255
    2966:	80 ec       	ldi	r24, 0xC0	; 192
    2968:	08 95       	ret

0000296a <__fp_pscA>:
    296a:	00 24       	eor	r0, r0
    296c:	0a 94       	dec	r0
    296e:	16 16       	cp	r1, r22
    2970:	17 06       	cpc	r1, r23
    2972:	18 06       	cpc	r1, r24
    2974:	09 06       	cpc	r0, r25
    2976:	08 95       	ret

00002978 <__fp_pscB>:
    2978:	00 24       	eor	r0, r0
    297a:	0a 94       	dec	r0
    297c:	12 16       	cp	r1, r18
    297e:	13 06       	cpc	r1, r19
    2980:	14 06       	cpc	r1, r20
    2982:	05 06       	cpc	r0, r21
    2984:	08 95       	ret

00002986 <__fp_round>:
    2986:	09 2e       	mov	r0, r25
    2988:	03 94       	inc	r0
    298a:	00 0c       	add	r0, r0
    298c:	11 f4       	brne	.+4      	; 0x2992 <__fp_round+0xc>
    298e:	88 23       	and	r24, r24
    2990:	52 f0       	brmi	.+20     	; 0x29a6 <__fp_round+0x20>
    2992:	bb 0f       	add	r27, r27
    2994:	40 f4       	brcc	.+16     	; 0x29a6 <__fp_round+0x20>
    2996:	bf 2b       	or	r27, r31
    2998:	11 f4       	brne	.+4      	; 0x299e <__fp_round+0x18>
    299a:	60 ff       	sbrs	r22, 0
    299c:	04 c0       	rjmp	.+8      	; 0x29a6 <__fp_round+0x20>
    299e:	6f 5f       	subi	r22, 0xFF	; 255
    29a0:	7f 4f       	sbci	r23, 0xFF	; 255
    29a2:	8f 4f       	sbci	r24, 0xFF	; 255
    29a4:	9f 4f       	sbci	r25, 0xFF	; 255
    29a6:	08 95       	ret

000029a8 <__fp_split3>:
    29a8:	57 fd       	sbrc	r21, 7
    29aa:	90 58       	subi	r25, 0x80	; 128
    29ac:	44 0f       	add	r20, r20
    29ae:	55 1f       	adc	r21, r21
    29b0:	59 f0       	breq	.+22     	; 0x29c8 <__fp_splitA+0x10>
    29b2:	5f 3f       	cpi	r21, 0xFF	; 255
    29b4:	71 f0       	breq	.+28     	; 0x29d2 <__fp_splitA+0x1a>
    29b6:	47 95       	ror	r20

000029b8 <__fp_splitA>:
    29b8:	88 0f       	add	r24, r24
    29ba:	97 fb       	bst	r25, 7
    29bc:	99 1f       	adc	r25, r25
    29be:	61 f0       	breq	.+24     	; 0x29d8 <__fp_splitA+0x20>
    29c0:	9f 3f       	cpi	r25, 0xFF	; 255
    29c2:	79 f0       	breq	.+30     	; 0x29e2 <__fp_splitA+0x2a>
    29c4:	87 95       	ror	r24
    29c6:	08 95       	ret
    29c8:	12 16       	cp	r1, r18
    29ca:	13 06       	cpc	r1, r19
    29cc:	14 06       	cpc	r1, r20
    29ce:	55 1f       	adc	r21, r21
    29d0:	f2 cf       	rjmp	.-28     	; 0x29b6 <__fp_split3+0xe>
    29d2:	46 95       	lsr	r20
    29d4:	f1 df       	rcall	.-30     	; 0x29b8 <__fp_splitA>
    29d6:	08 c0       	rjmp	.+16     	; 0x29e8 <__fp_splitA+0x30>
    29d8:	16 16       	cp	r1, r22
    29da:	17 06       	cpc	r1, r23
    29dc:	18 06       	cpc	r1, r24
    29de:	99 1f       	adc	r25, r25
    29e0:	f1 cf       	rjmp	.-30     	; 0x29c4 <__fp_splitA+0xc>
    29e2:	86 95       	lsr	r24
    29e4:	71 05       	cpc	r23, r1
    29e6:	61 05       	cpc	r22, r1
    29e8:	08 94       	sec
    29ea:	08 95       	ret

000029ec <__fp_zero>:
    29ec:	e8 94       	clt

000029ee <__fp_szero>:
    29ee:	bb 27       	eor	r27, r27
    29f0:	66 27       	eor	r22, r22
    29f2:	77 27       	eor	r23, r23
    29f4:	cb 01       	movw	r24, r22
    29f6:	97 f9       	bld	r25, 7
    29f8:	08 95       	ret

000029fa <__mulsf3>:
    29fa:	0b d0       	rcall	.+22     	; 0x2a12 <__mulsf3x>
    29fc:	c4 cf       	rjmp	.-120    	; 0x2986 <__fp_round>
    29fe:	b5 df       	rcall	.-150    	; 0x296a <__fp_pscA>
    2a00:	28 f0       	brcs	.+10     	; 0x2a0c <__mulsf3+0x12>
    2a02:	ba df       	rcall	.-140    	; 0x2978 <__fp_pscB>
    2a04:	18 f0       	brcs	.+6      	; 0x2a0c <__mulsf3+0x12>
    2a06:	95 23       	and	r25, r21
    2a08:	09 f0       	breq	.+2      	; 0x2a0c <__mulsf3+0x12>
    2a0a:	a6 cf       	rjmp	.-180    	; 0x2958 <__fp_inf>
    2a0c:	ab cf       	rjmp	.-170    	; 0x2964 <__fp_nan>
    2a0e:	11 24       	eor	r1, r1
    2a10:	ee cf       	rjmp	.-36     	; 0x29ee <__fp_szero>

00002a12 <__mulsf3x>:
    2a12:	ca df       	rcall	.-108    	; 0x29a8 <__fp_split3>
    2a14:	a0 f3       	brcs	.-24     	; 0x29fe <__mulsf3+0x4>

00002a16 <__mulsf3_pse>:
    2a16:	95 9f       	mul	r25, r21
    2a18:	d1 f3       	breq	.-12     	; 0x2a0e <__mulsf3+0x14>
    2a1a:	95 0f       	add	r25, r21
    2a1c:	50 e0       	ldi	r21, 0x00	; 0
    2a1e:	55 1f       	adc	r21, r21
    2a20:	62 9f       	mul	r22, r18
    2a22:	f0 01       	movw	r30, r0
    2a24:	72 9f       	mul	r23, r18
    2a26:	bb 27       	eor	r27, r27
    2a28:	f0 0d       	add	r31, r0
    2a2a:	b1 1d       	adc	r27, r1
    2a2c:	63 9f       	mul	r22, r19
    2a2e:	aa 27       	eor	r26, r26
    2a30:	f0 0d       	add	r31, r0
    2a32:	b1 1d       	adc	r27, r1
    2a34:	aa 1f       	adc	r26, r26
    2a36:	64 9f       	mul	r22, r20
    2a38:	66 27       	eor	r22, r22
    2a3a:	b0 0d       	add	r27, r0
    2a3c:	a1 1d       	adc	r26, r1
    2a3e:	66 1f       	adc	r22, r22
    2a40:	82 9f       	mul	r24, r18
    2a42:	22 27       	eor	r18, r18
    2a44:	b0 0d       	add	r27, r0
    2a46:	a1 1d       	adc	r26, r1
    2a48:	62 1f       	adc	r22, r18
    2a4a:	73 9f       	mul	r23, r19
    2a4c:	b0 0d       	add	r27, r0
    2a4e:	a1 1d       	adc	r26, r1
    2a50:	62 1f       	adc	r22, r18
    2a52:	83 9f       	mul	r24, r19
    2a54:	a0 0d       	add	r26, r0
    2a56:	61 1d       	adc	r22, r1
    2a58:	22 1f       	adc	r18, r18
    2a5a:	74 9f       	mul	r23, r20
    2a5c:	33 27       	eor	r19, r19
    2a5e:	a0 0d       	add	r26, r0
    2a60:	61 1d       	adc	r22, r1
    2a62:	23 1f       	adc	r18, r19
    2a64:	84 9f       	mul	r24, r20
    2a66:	60 0d       	add	r22, r0
    2a68:	21 1d       	adc	r18, r1
    2a6a:	82 2f       	mov	r24, r18
    2a6c:	76 2f       	mov	r23, r22
    2a6e:	6a 2f       	mov	r22, r26
    2a70:	11 24       	eor	r1, r1
    2a72:	9f 57       	subi	r25, 0x7F	; 127
    2a74:	50 40       	sbci	r21, 0x00	; 0
    2a76:	8a f0       	brmi	.+34     	; 0x2a9a <__mulsf3_pse+0x84>
    2a78:	e1 f0       	breq	.+56     	; 0x2ab2 <__mulsf3_pse+0x9c>
    2a7a:	88 23       	and	r24, r24
    2a7c:	4a f0       	brmi	.+18     	; 0x2a90 <__mulsf3_pse+0x7a>
    2a7e:	ee 0f       	add	r30, r30
    2a80:	ff 1f       	adc	r31, r31
    2a82:	bb 1f       	adc	r27, r27
    2a84:	66 1f       	adc	r22, r22
    2a86:	77 1f       	adc	r23, r23
    2a88:	88 1f       	adc	r24, r24
    2a8a:	91 50       	subi	r25, 0x01	; 1
    2a8c:	50 40       	sbci	r21, 0x00	; 0
    2a8e:	a9 f7       	brne	.-22     	; 0x2a7a <__mulsf3_pse+0x64>
    2a90:	9e 3f       	cpi	r25, 0xFE	; 254
    2a92:	51 05       	cpc	r21, r1
    2a94:	70 f0       	brcs	.+28     	; 0x2ab2 <__mulsf3_pse+0x9c>
    2a96:	60 cf       	rjmp	.-320    	; 0x2958 <__fp_inf>
    2a98:	aa cf       	rjmp	.-172    	; 0x29ee <__fp_szero>
    2a9a:	5f 3f       	cpi	r21, 0xFF	; 255
    2a9c:	ec f3       	brlt	.-6      	; 0x2a98 <__mulsf3_pse+0x82>
    2a9e:	98 3e       	cpi	r25, 0xE8	; 232
    2aa0:	dc f3       	brlt	.-10     	; 0x2a98 <__mulsf3_pse+0x82>
    2aa2:	86 95       	lsr	r24
    2aa4:	77 95       	ror	r23
    2aa6:	67 95       	ror	r22
    2aa8:	b7 95       	ror	r27
    2aaa:	f7 95       	ror	r31
    2aac:	e7 95       	ror	r30
    2aae:	9f 5f       	subi	r25, 0xFF	; 255
    2ab0:	c1 f7       	brne	.-16     	; 0x2aa2 <__mulsf3_pse+0x8c>
    2ab2:	fe 2b       	or	r31, r30
    2ab4:	88 0f       	add	r24, r24
    2ab6:	91 1d       	adc	r25, r1
    2ab8:	96 95       	lsr	r25
    2aba:	87 95       	ror	r24
    2abc:	97 f9       	bld	r25, 7
    2abe:	08 95       	ret

00002ac0 <vfprintf>:
    2ac0:	2f 92       	push	r2
    2ac2:	3f 92       	push	r3
    2ac4:	4f 92       	push	r4
    2ac6:	5f 92       	push	r5
    2ac8:	6f 92       	push	r6
    2aca:	7f 92       	push	r7
    2acc:	8f 92       	push	r8
    2ace:	9f 92       	push	r9
    2ad0:	af 92       	push	r10
    2ad2:	bf 92       	push	r11
    2ad4:	cf 92       	push	r12
    2ad6:	df 92       	push	r13
    2ad8:	ef 92       	push	r14
    2ada:	ff 92       	push	r15
    2adc:	0f 93       	push	r16
    2ade:	1f 93       	push	r17
    2ae0:	df 93       	push	r29
    2ae2:	cf 93       	push	r28
    2ae4:	cd b7       	in	r28, 0x3d	; 61
    2ae6:	de b7       	in	r29, 0x3e	; 62
    2ae8:	61 97       	sbiw	r28, 0x11	; 17
    2aea:	0f b6       	in	r0, 0x3f	; 63
    2aec:	f8 94       	cli
    2aee:	de bf       	out	0x3e, r29	; 62
    2af0:	0f be       	out	0x3f, r0	; 63
    2af2:	cd bf       	out	0x3d, r28	; 61
    2af4:	3c 01       	movw	r6, r24
    2af6:	7f 87       	std	Y+15, r23	; 0x0f
    2af8:	6e 87       	std	Y+14, r22	; 0x0e
    2afa:	6a 01       	movw	r12, r20
    2afc:	fc 01       	movw	r30, r24
    2afe:	17 82       	std	Z+7, r1	; 0x07
    2b00:	16 82       	std	Z+6, r1	; 0x06
    2b02:	83 81       	ldd	r24, Z+3	; 0x03
    2b04:	81 fd       	sbrc	r24, 1
    2b06:	03 c0       	rjmp	.+6      	; 0x2b0e <vfprintf+0x4e>
    2b08:	6f ef       	ldi	r22, 0xFF	; 255
    2b0a:	7f ef       	ldi	r23, 0xFF	; 255
    2b0c:	71 c3       	rjmp	.+1762   	; 0x31f0 <vfprintf+0x730>
    2b0e:	9e 01       	movw	r18, r28
    2b10:	2f 5f       	subi	r18, 0xFF	; 255
    2b12:	3f 4f       	sbci	r19, 0xFF	; 255
    2b14:	39 8b       	std	Y+17, r19	; 0x11
    2b16:	28 8b       	std	Y+16, r18	; 0x10
    2b18:	f3 01       	movw	r30, r6
    2b1a:	23 81       	ldd	r18, Z+3	; 0x03
    2b1c:	ee 85       	ldd	r30, Y+14	; 0x0e
    2b1e:	ff 85       	ldd	r31, Y+15	; 0x0f
    2b20:	23 fd       	sbrc	r18, 3
    2b22:	85 91       	lpm	r24, Z+
    2b24:	23 ff       	sbrs	r18, 3
    2b26:	81 91       	ld	r24, Z+
    2b28:	ff 87       	std	Y+15, r31	; 0x0f
    2b2a:	ee 87       	std	Y+14, r30	; 0x0e
    2b2c:	88 23       	and	r24, r24
    2b2e:	09 f4       	brne	.+2      	; 0x2b32 <vfprintf+0x72>
    2b30:	5c c3       	rjmp	.+1720   	; 0x31ea <vfprintf+0x72a>
    2b32:	85 32       	cpi	r24, 0x25	; 37
    2b34:	51 f4       	brne	.+20     	; 0x2b4a <vfprintf+0x8a>
    2b36:	ee 85       	ldd	r30, Y+14	; 0x0e
    2b38:	ff 85       	ldd	r31, Y+15	; 0x0f
    2b3a:	23 fd       	sbrc	r18, 3
    2b3c:	85 91       	lpm	r24, Z+
    2b3e:	23 ff       	sbrs	r18, 3
    2b40:	81 91       	ld	r24, Z+
    2b42:	ff 87       	std	Y+15, r31	; 0x0f
    2b44:	ee 87       	std	Y+14, r30	; 0x0e
    2b46:	85 32       	cpi	r24, 0x25	; 37
    2b48:	29 f4       	brne	.+10     	; 0x2b54 <vfprintf+0x94>
    2b4a:	90 e0       	ldi	r25, 0x00	; 0
    2b4c:	b3 01       	movw	r22, r6
    2b4e:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2b52:	e2 cf       	rjmp	.-60     	; 0x2b18 <vfprintf+0x58>
    2b54:	98 2f       	mov	r25, r24
    2b56:	10 e0       	ldi	r17, 0x00	; 0
    2b58:	88 24       	eor	r8, r8
    2b5a:	99 24       	eor	r9, r9
    2b5c:	10 32       	cpi	r17, 0x20	; 32
    2b5e:	b0 f4       	brcc	.+44     	; 0x2b8c <vfprintf+0xcc>
    2b60:	9b 32       	cpi	r25, 0x2B	; 43
    2b62:	69 f0       	breq	.+26     	; 0x2b7e <vfprintf+0xbe>
    2b64:	9c 32       	cpi	r25, 0x2C	; 44
    2b66:	28 f4       	brcc	.+10     	; 0x2b72 <vfprintf+0xb2>
    2b68:	90 32       	cpi	r25, 0x20	; 32
    2b6a:	51 f0       	breq	.+20     	; 0x2b80 <vfprintf+0xc0>
    2b6c:	93 32       	cpi	r25, 0x23	; 35
    2b6e:	71 f4       	brne	.+28     	; 0x2b8c <vfprintf+0xcc>
    2b70:	0b c0       	rjmp	.+22     	; 0x2b88 <vfprintf+0xc8>
    2b72:	9d 32       	cpi	r25, 0x2D	; 45
    2b74:	39 f0       	breq	.+14     	; 0x2b84 <vfprintf+0xc4>
    2b76:	90 33       	cpi	r25, 0x30	; 48
    2b78:	49 f4       	brne	.+18     	; 0x2b8c <vfprintf+0xcc>
    2b7a:	11 60       	ori	r17, 0x01	; 1
    2b7c:	28 c0       	rjmp	.+80     	; 0x2bce <vfprintf+0x10e>
    2b7e:	12 60       	ori	r17, 0x02	; 2
    2b80:	14 60       	ori	r17, 0x04	; 4
    2b82:	25 c0       	rjmp	.+74     	; 0x2bce <vfprintf+0x10e>
    2b84:	18 60       	ori	r17, 0x08	; 8
    2b86:	23 c0       	rjmp	.+70     	; 0x2bce <vfprintf+0x10e>
    2b88:	10 61       	ori	r17, 0x10	; 16
    2b8a:	21 c0       	rjmp	.+66     	; 0x2bce <vfprintf+0x10e>
    2b8c:	17 fd       	sbrc	r17, 7
    2b8e:	2a c0       	rjmp	.+84     	; 0x2be4 <vfprintf+0x124>
    2b90:	89 2f       	mov	r24, r25
    2b92:	80 53       	subi	r24, 0x30	; 48
    2b94:	8a 30       	cpi	r24, 0x0A	; 10
    2b96:	78 f4       	brcc	.+30     	; 0x2bb6 <vfprintf+0xf6>
    2b98:	16 ff       	sbrs	r17, 6
    2b9a:	06 c0       	rjmp	.+12     	; 0x2ba8 <vfprintf+0xe8>
    2b9c:	fa e0       	ldi	r31, 0x0A	; 10
    2b9e:	9f 9e       	mul	r9, r31
    2ba0:	90 2c       	mov	r9, r0
    2ba2:	11 24       	eor	r1, r1
    2ba4:	98 0e       	add	r9, r24
    2ba6:	13 c0       	rjmp	.+38     	; 0x2bce <vfprintf+0x10e>
    2ba8:	3a e0       	ldi	r19, 0x0A	; 10
    2baa:	83 9e       	mul	r8, r19
    2bac:	80 2c       	mov	r8, r0
    2bae:	11 24       	eor	r1, r1
    2bb0:	88 0e       	add	r8, r24
    2bb2:	10 62       	ori	r17, 0x20	; 32
    2bb4:	0c c0       	rjmp	.+24     	; 0x2bce <vfprintf+0x10e>
    2bb6:	9e 32       	cpi	r25, 0x2E	; 46
    2bb8:	21 f4       	brne	.+8      	; 0x2bc2 <vfprintf+0x102>
    2bba:	16 fd       	sbrc	r17, 6
    2bbc:	16 c3       	rjmp	.+1580   	; 0x31ea <vfprintf+0x72a>
    2bbe:	10 64       	ori	r17, 0x40	; 64
    2bc0:	06 c0       	rjmp	.+12     	; 0x2bce <vfprintf+0x10e>
    2bc2:	9c 36       	cpi	r25, 0x6C	; 108
    2bc4:	11 f4       	brne	.+4      	; 0x2bca <vfprintf+0x10a>
    2bc6:	10 68       	ori	r17, 0x80	; 128
    2bc8:	02 c0       	rjmp	.+4      	; 0x2bce <vfprintf+0x10e>
    2bca:	98 36       	cpi	r25, 0x68	; 104
    2bcc:	59 f4       	brne	.+22     	; 0x2be4 <vfprintf+0x124>
    2bce:	ee 85       	ldd	r30, Y+14	; 0x0e
    2bd0:	ff 85       	ldd	r31, Y+15	; 0x0f
    2bd2:	23 fd       	sbrc	r18, 3
    2bd4:	95 91       	lpm	r25, Z+
    2bd6:	23 ff       	sbrs	r18, 3
    2bd8:	91 91       	ld	r25, Z+
    2bda:	ff 87       	std	Y+15, r31	; 0x0f
    2bdc:	ee 87       	std	Y+14, r30	; 0x0e
    2bde:	99 23       	and	r25, r25
    2be0:	09 f0       	breq	.+2      	; 0x2be4 <vfprintf+0x124>
    2be2:	bc cf       	rjmp	.-136    	; 0x2b5c <vfprintf+0x9c>
    2be4:	89 2f       	mov	r24, r25
    2be6:	85 54       	subi	r24, 0x45	; 69
    2be8:	83 30       	cpi	r24, 0x03	; 3
    2bea:	20 f4       	brcc	.+8      	; 0x2bf4 <vfprintf+0x134>
    2bec:	81 2f       	mov	r24, r17
    2bee:	80 61       	ori	r24, 0x10	; 16
    2bf0:	90 5e       	subi	r25, 0xE0	; 224
    2bf2:	07 c0       	rjmp	.+14     	; 0x2c02 <vfprintf+0x142>
    2bf4:	89 2f       	mov	r24, r25
    2bf6:	85 56       	subi	r24, 0x65	; 101
    2bf8:	83 30       	cpi	r24, 0x03	; 3
    2bfa:	08 f0       	brcs	.+2      	; 0x2bfe <vfprintf+0x13e>
    2bfc:	a1 c1       	rjmp	.+834    	; 0x2f40 <vfprintf+0x480>
    2bfe:	81 2f       	mov	r24, r17
    2c00:	8f 7e       	andi	r24, 0xEF	; 239
    2c02:	86 fd       	sbrc	r24, 6
    2c04:	02 c0       	rjmp	.+4      	; 0x2c0a <vfprintf+0x14a>
    2c06:	76 e0       	ldi	r23, 0x06	; 6
    2c08:	97 2e       	mov	r9, r23
    2c0a:	6f e3       	ldi	r22, 0x3F	; 63
    2c0c:	f6 2e       	mov	r15, r22
    2c0e:	f8 22       	and	r15, r24
    2c10:	95 36       	cpi	r25, 0x65	; 101
    2c12:	19 f4       	brne	.+6      	; 0x2c1a <vfprintf+0x15a>
    2c14:	f0 e4       	ldi	r31, 0x40	; 64
    2c16:	ff 2a       	or	r15, r31
    2c18:	07 c0       	rjmp	.+14     	; 0x2c28 <vfprintf+0x168>
    2c1a:	96 36       	cpi	r25, 0x66	; 102
    2c1c:	19 f4       	brne	.+6      	; 0x2c24 <vfprintf+0x164>
    2c1e:	20 e8       	ldi	r18, 0x80	; 128
    2c20:	f2 2a       	or	r15, r18
    2c22:	02 c0       	rjmp	.+4      	; 0x2c28 <vfprintf+0x168>
    2c24:	91 10       	cpse	r9, r1
    2c26:	9a 94       	dec	r9
    2c28:	f7 fe       	sbrs	r15, 7
    2c2a:	0b c0       	rjmp	.+22     	; 0x2c42 <vfprintf+0x182>
    2c2c:	3b e3       	ldi	r19, 0x3B	; 59
    2c2e:	39 15       	cp	r19, r9
    2c30:	20 f4       	brcc	.+8      	; 0x2c3a <vfprintf+0x17a>
    2c32:	27 e0       	ldi	r18, 0x07	; 7
    2c34:	5c e3       	ldi	r21, 0x3C	; 60
    2c36:	b5 2e       	mov	r11, r21
    2c38:	0e c0       	rjmp	.+28     	; 0x2c56 <vfprintf+0x196>
    2c3a:	b9 2c       	mov	r11, r9
    2c3c:	b3 94       	inc	r11
    2c3e:	27 e0       	ldi	r18, 0x07	; 7
    2c40:	0a c0       	rjmp	.+20     	; 0x2c56 <vfprintf+0x196>
    2c42:	47 e0       	ldi	r20, 0x07	; 7
    2c44:	49 15       	cp	r20, r9
    2c46:	28 f4       	brcc	.+10     	; 0x2c52 <vfprintf+0x192>
    2c48:	27 e0       	ldi	r18, 0x07	; 7
    2c4a:	bb 24       	eor	r11, r11
    2c4c:	47 e0       	ldi	r20, 0x07	; 7
    2c4e:	94 2e       	mov	r9, r20
    2c50:	02 c0       	rjmp	.+4      	; 0x2c56 <vfprintf+0x196>
    2c52:	29 2d       	mov	r18, r9
    2c54:	bb 24       	eor	r11, r11
    2c56:	c6 01       	movw	r24, r12
    2c58:	04 96       	adiw	r24, 0x04	; 4
    2c5a:	9d 87       	std	Y+13, r25	; 0x0d
    2c5c:	8c 87       	std	Y+12, r24	; 0x0c
    2c5e:	f6 01       	movw	r30, r12
    2c60:	60 81       	ld	r22, Z
    2c62:	71 81       	ldd	r23, Z+1	; 0x01
    2c64:	82 81       	ldd	r24, Z+2	; 0x02
    2c66:	93 81       	ldd	r25, Z+3	; 0x03
    2c68:	ae 01       	movw	r20, r28
    2c6a:	4f 5f       	subi	r20, 0xFF	; 255
    2c6c:	5f 4f       	sbci	r21, 0xFF	; 255
    2c6e:	0b 2d       	mov	r16, r11
    2c70:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <__ftoa_engine>
    2c74:	6c 01       	movw	r12, r24
    2c76:	09 81       	ldd	r16, Y+1	; 0x01
    2c78:	20 2e       	mov	r2, r16
    2c7a:	33 24       	eor	r3, r3
    2c7c:	00 ff       	sbrs	r16, 0
    2c7e:	04 c0       	rjmp	.+8      	; 0x2c88 <vfprintf+0x1c8>
    2c80:	03 fd       	sbrc	r16, 3
    2c82:	02 c0       	rjmp	.+4      	; 0x2c88 <vfprintf+0x1c8>
    2c84:	1d e2       	ldi	r17, 0x2D	; 45
    2c86:	09 c0       	rjmp	.+18     	; 0x2c9a <vfprintf+0x1da>
    2c88:	f1 fe       	sbrs	r15, 1
    2c8a:	02 c0       	rjmp	.+4      	; 0x2c90 <vfprintf+0x1d0>
    2c8c:	1b e2       	ldi	r17, 0x2B	; 43
    2c8e:	05 c0       	rjmp	.+10     	; 0x2c9a <vfprintf+0x1da>
    2c90:	f2 fc       	sbrc	r15, 2
    2c92:	02 c0       	rjmp	.+4      	; 0x2c98 <vfprintf+0x1d8>
    2c94:	10 e0       	ldi	r17, 0x00	; 0
    2c96:	01 c0       	rjmp	.+2      	; 0x2c9a <vfprintf+0x1da>
    2c98:	10 e2       	ldi	r17, 0x20	; 32
    2c9a:	c1 01       	movw	r24, r2
    2c9c:	8c 70       	andi	r24, 0x0C	; 12
    2c9e:	90 70       	andi	r25, 0x00	; 0
    2ca0:	89 2b       	or	r24, r25
    2ca2:	b9 f1       	breq	.+110    	; 0x2d12 <vfprintf+0x252>
    2ca4:	11 23       	and	r17, r17
    2ca6:	11 f4       	brne	.+4      	; 0x2cac <vfprintf+0x1ec>
    2ca8:	83 e0       	ldi	r24, 0x03	; 3
    2caa:	01 c0       	rjmp	.+2      	; 0x2cae <vfprintf+0x1ee>
    2cac:	84 e0       	ldi	r24, 0x04	; 4
    2cae:	88 15       	cp	r24, r8
    2cb0:	10 f0       	brcs	.+4      	; 0x2cb6 <vfprintf+0x1f6>
    2cb2:	88 24       	eor	r8, r8
    2cb4:	0a c0       	rjmp	.+20     	; 0x2cca <vfprintf+0x20a>
    2cb6:	88 1a       	sub	r8, r24
    2cb8:	f3 fc       	sbrc	r15, 3
    2cba:	07 c0       	rjmp	.+14     	; 0x2cca <vfprintf+0x20a>
    2cbc:	80 e2       	ldi	r24, 0x20	; 32
    2cbe:	90 e0       	ldi	r25, 0x00	; 0
    2cc0:	b3 01       	movw	r22, r6
    2cc2:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2cc6:	8a 94       	dec	r8
    2cc8:	c9 f7       	brne	.-14     	; 0x2cbc <vfprintf+0x1fc>
    2cca:	11 23       	and	r17, r17
    2ccc:	29 f0       	breq	.+10     	; 0x2cd8 <vfprintf+0x218>
    2cce:	81 2f       	mov	r24, r17
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	b3 01       	movw	r22, r6
    2cd4:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2cd8:	23 fe       	sbrs	r2, 3
    2cda:	03 c0       	rjmp	.+6      	; 0x2ce2 <vfprintf+0x222>
    2cdc:	09 e3       	ldi	r16, 0x39	; 57
    2cde:	12 e0       	ldi	r17, 0x02	; 2
    2ce0:	0e c0       	rjmp	.+28     	; 0x2cfe <vfprintf+0x23e>
    2ce2:	0d e3       	ldi	r16, 0x3D	; 61
    2ce4:	12 e0       	ldi	r17, 0x02	; 2
    2ce6:	0b c0       	rjmp	.+22     	; 0x2cfe <vfprintf+0x23e>
    2ce8:	e1 14       	cp	r14, r1
    2cea:	f1 04       	cpc	r15, r1
    2cec:	09 f0       	breq	.+2      	; 0x2cf0 <vfprintf+0x230>
    2cee:	80 52       	subi	r24, 0x20	; 32
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	b3 01       	movw	r22, r6
    2cf4:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2cf8:	0f 5f       	subi	r16, 0xFF	; 255
    2cfa:	1f 4f       	sbci	r17, 0xFF	; 255
    2cfc:	05 c0       	rjmp	.+10     	; 0x2d08 <vfprintf+0x248>
    2cfe:	ef 2c       	mov	r14, r15
    2d00:	ff 24       	eor	r15, r15
    2d02:	f0 e1       	ldi	r31, 0x10	; 16
    2d04:	ef 22       	and	r14, r31
    2d06:	ff 24       	eor	r15, r15
    2d08:	f8 01       	movw	r30, r16
    2d0a:	84 91       	lpm	r24, Z+
    2d0c:	88 23       	and	r24, r24
    2d0e:	61 f7       	brne	.-40     	; 0x2ce8 <vfprintf+0x228>
    2d10:	14 c1       	rjmp	.+552    	; 0x2f3a <vfprintf+0x47a>
    2d12:	f7 fe       	sbrs	r15, 7
    2d14:	12 c0       	rjmp	.+36     	; 0x2d3a <vfprintf+0x27a>
    2d16:	bc 0c       	add	r11, r12
    2d18:	24 fe       	sbrs	r2, 4
    2d1a:	04 c0       	rjmp	.+8      	; 0x2d24 <vfprintf+0x264>
    2d1c:	8a 81       	ldd	r24, Y+2	; 0x02
    2d1e:	81 33       	cpi	r24, 0x31	; 49
    2d20:	09 f4       	brne	.+2      	; 0x2d24 <vfprintf+0x264>
    2d22:	ba 94       	dec	r11
    2d24:	1b 14       	cp	r1, r11
    2d26:	1c f0       	brlt	.+6      	; 0x2d2e <vfprintf+0x26e>
    2d28:	bb 24       	eor	r11, r11
    2d2a:	b3 94       	inc	r11
    2d2c:	2d c0       	rjmp	.+90     	; 0x2d88 <vfprintf+0x2c8>
    2d2e:	f8 e0       	ldi	r31, 0x08	; 8
    2d30:	fb 15       	cp	r31, r11
    2d32:	50 f5       	brcc	.+84     	; 0x2d88 <vfprintf+0x2c8>
    2d34:	38 e0       	ldi	r19, 0x08	; 8
    2d36:	b3 2e       	mov	r11, r19
    2d38:	27 c0       	rjmp	.+78     	; 0x2d88 <vfprintf+0x2c8>
    2d3a:	f6 fc       	sbrc	r15, 6
    2d3c:	25 c0       	rjmp	.+74     	; 0x2d88 <vfprintf+0x2c8>
    2d3e:	89 2d       	mov	r24, r9
    2d40:	90 e0       	ldi	r25, 0x00	; 0
    2d42:	8c 15       	cp	r24, r12
    2d44:	9d 05       	cpc	r25, r13
    2d46:	4c f0       	brlt	.+18     	; 0x2d5a <vfprintf+0x29a>
    2d48:	2c ef       	ldi	r18, 0xFC	; 252
    2d4a:	c2 16       	cp	r12, r18
    2d4c:	2f ef       	ldi	r18, 0xFF	; 255
    2d4e:	d2 06       	cpc	r13, r18
    2d50:	24 f0       	brlt	.+8      	; 0x2d5a <vfprintf+0x29a>
    2d52:	30 e8       	ldi	r19, 0x80	; 128
    2d54:	f3 2a       	or	r15, r19
    2d56:	01 c0       	rjmp	.+2      	; 0x2d5a <vfprintf+0x29a>
    2d58:	9a 94       	dec	r9
    2d5a:	99 20       	and	r9, r9
    2d5c:	49 f0       	breq	.+18     	; 0x2d70 <vfprintf+0x2b0>
    2d5e:	e2 e0       	ldi	r30, 0x02	; 2
    2d60:	f0 e0       	ldi	r31, 0x00	; 0
    2d62:	ec 0f       	add	r30, r28
    2d64:	fd 1f       	adc	r31, r29
    2d66:	e9 0d       	add	r30, r9
    2d68:	f1 1d       	adc	r31, r1
    2d6a:	80 81       	ld	r24, Z
    2d6c:	80 33       	cpi	r24, 0x30	; 48
    2d6e:	a1 f3       	breq	.-24     	; 0x2d58 <vfprintf+0x298>
    2d70:	f7 fe       	sbrs	r15, 7
    2d72:	0a c0       	rjmp	.+20     	; 0x2d88 <vfprintf+0x2c8>
    2d74:	b9 2c       	mov	r11, r9
    2d76:	b3 94       	inc	r11
    2d78:	89 2d       	mov	r24, r9
    2d7a:	90 e0       	ldi	r25, 0x00	; 0
    2d7c:	c8 16       	cp	r12, r24
    2d7e:	d9 06       	cpc	r13, r25
    2d80:	14 f0       	brlt	.+4      	; 0x2d86 <vfprintf+0x2c6>
    2d82:	99 24       	eor	r9, r9
    2d84:	01 c0       	rjmp	.+2      	; 0x2d88 <vfprintf+0x2c8>
    2d86:	9c 18       	sub	r9, r12
    2d88:	f7 fc       	sbrc	r15, 7
    2d8a:	03 c0       	rjmp	.+6      	; 0x2d92 <vfprintf+0x2d2>
    2d8c:	25 e0       	ldi	r18, 0x05	; 5
    2d8e:	30 e0       	ldi	r19, 0x00	; 0
    2d90:	09 c0       	rjmp	.+18     	; 0x2da4 <vfprintf+0x2e4>
    2d92:	1c 14       	cp	r1, r12
    2d94:	1d 04       	cpc	r1, r13
    2d96:	1c f0       	brlt	.+6      	; 0x2d9e <vfprintf+0x2de>
    2d98:	21 e0       	ldi	r18, 0x01	; 1
    2d9a:	30 e0       	ldi	r19, 0x00	; 0
    2d9c:	03 c0       	rjmp	.+6      	; 0x2da4 <vfprintf+0x2e4>
    2d9e:	96 01       	movw	r18, r12
    2da0:	2f 5f       	subi	r18, 0xFF	; 255
    2da2:	3f 4f       	sbci	r19, 0xFF	; 255
    2da4:	11 23       	and	r17, r17
    2da6:	11 f0       	breq	.+4      	; 0x2dac <vfprintf+0x2ec>
    2da8:	2f 5f       	subi	r18, 0xFF	; 255
    2daa:	3f 4f       	sbci	r19, 0xFF	; 255
    2dac:	99 20       	and	r9, r9
    2dae:	29 f0       	breq	.+10     	; 0x2dba <vfprintf+0x2fa>
    2db0:	89 2d       	mov	r24, r9
    2db2:	90 e0       	ldi	r25, 0x00	; 0
    2db4:	01 96       	adiw	r24, 0x01	; 1
    2db6:	28 0f       	add	r18, r24
    2db8:	39 1f       	adc	r19, r25
    2dba:	88 2d       	mov	r24, r8
    2dbc:	90 e0       	ldi	r25, 0x00	; 0
    2dbe:	28 17       	cp	r18, r24
    2dc0:	39 07       	cpc	r19, r25
    2dc2:	14 f0       	brlt	.+4      	; 0x2dc8 <vfprintf+0x308>
    2dc4:	88 24       	eor	r8, r8
    2dc6:	01 c0       	rjmp	.+2      	; 0x2dca <vfprintf+0x30a>
    2dc8:	82 1a       	sub	r8, r18
    2dca:	4f 2c       	mov	r4, r15
    2dcc:	55 24       	eor	r5, r5
    2dce:	c2 01       	movw	r24, r4
    2dd0:	89 70       	andi	r24, 0x09	; 9
    2dd2:	90 70       	andi	r25, 0x00	; 0
    2dd4:	89 2b       	or	r24, r25
    2dd6:	39 f0       	breq	.+14     	; 0x2de6 <vfprintf+0x326>
    2dd8:	08 c0       	rjmp	.+16     	; 0x2dea <vfprintf+0x32a>
    2dda:	80 e2       	ldi	r24, 0x20	; 32
    2ddc:	90 e0       	ldi	r25, 0x00	; 0
    2dde:	b3 01       	movw	r22, r6
    2de0:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2de4:	8a 94       	dec	r8
    2de6:	88 20       	and	r8, r8
    2de8:	c1 f7       	brne	.-16     	; 0x2dda <vfprintf+0x31a>
    2dea:	11 23       	and	r17, r17
    2dec:	29 f0       	breq	.+10     	; 0x2df8 <vfprintf+0x338>
    2dee:	81 2f       	mov	r24, r17
    2df0:	90 e0       	ldi	r25, 0x00	; 0
    2df2:	b3 01       	movw	r22, r6
    2df4:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2df8:	43 fe       	sbrs	r4, 3
    2dfa:	07 c0       	rjmp	.+14     	; 0x2e0a <vfprintf+0x34a>
    2dfc:	08 c0       	rjmp	.+16     	; 0x2e0e <vfprintf+0x34e>
    2dfe:	80 e3       	ldi	r24, 0x30	; 48
    2e00:	90 e0       	ldi	r25, 0x00	; 0
    2e02:	b3 01       	movw	r22, r6
    2e04:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2e08:	8a 94       	dec	r8
    2e0a:	88 20       	and	r8, r8
    2e0c:	c1 f7       	brne	.-16     	; 0x2dfe <vfprintf+0x33e>
    2e0e:	f7 fe       	sbrs	r15, 7
    2e10:	46 c0       	rjmp	.+140    	; 0x2e9e <vfprintf+0x3de>
    2e12:	86 01       	movw	r16, r12
    2e14:	d7 fe       	sbrs	r13, 7
    2e16:	02 c0       	rjmp	.+4      	; 0x2e1c <vfprintf+0x35c>
    2e18:	00 e0       	ldi	r16, 0x00	; 0
    2e1a:	10 e0       	ldi	r17, 0x00	; 0
    2e1c:	76 01       	movw	r14, r12
    2e1e:	08 94       	sec
    2e20:	e1 1c       	adc	r14, r1
    2e22:	f1 1c       	adc	r15, r1
    2e24:	e0 1a       	sub	r14, r16
    2e26:	f1 0a       	sbc	r15, r17
    2e28:	41 e0       	ldi	r20, 0x01	; 1
    2e2a:	50 e0       	ldi	r21, 0x00	; 0
    2e2c:	4c 0f       	add	r20, r28
    2e2e:	5d 1f       	adc	r21, r29
    2e30:	e4 0e       	add	r14, r20
    2e32:	f5 1e       	adc	r15, r21
    2e34:	26 01       	movw	r4, r12
    2e36:	4b 18       	sub	r4, r11
    2e38:	51 08       	sbc	r5, r1
    2e3a:	89 2d       	mov	r24, r9
    2e3c:	90 e0       	ldi	r25, 0x00	; 0
    2e3e:	aa 24       	eor	r10, r10
    2e40:	bb 24       	eor	r11, r11
    2e42:	a8 1a       	sub	r10, r24
    2e44:	b9 0a       	sbc	r11, r25
    2e46:	5f ef       	ldi	r21, 0xFF	; 255
    2e48:	0f 3f       	cpi	r16, 0xFF	; 255
    2e4a:	15 07       	cpc	r17, r21
    2e4c:	29 f4       	brne	.+10     	; 0x2e58 <vfprintf+0x398>
    2e4e:	8e e2       	ldi	r24, 0x2E	; 46
    2e50:	90 e0       	ldi	r25, 0x00	; 0
    2e52:	b3 01       	movw	r22, r6
    2e54:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2e58:	c0 16       	cp	r12, r16
    2e5a:	d1 06       	cpc	r13, r17
    2e5c:	34 f0       	brlt	.+12     	; 0x2e6a <vfprintf+0x3aa>
    2e5e:	40 16       	cp	r4, r16
    2e60:	51 06       	cpc	r5, r17
    2e62:	1c f4       	brge	.+6      	; 0x2e6a <vfprintf+0x3aa>
    2e64:	f7 01       	movw	r30, r14
    2e66:	80 81       	ld	r24, Z
    2e68:	01 c0       	rjmp	.+2      	; 0x2e6c <vfprintf+0x3ac>
    2e6a:	80 e3       	ldi	r24, 0x30	; 48
    2e6c:	01 50       	subi	r16, 0x01	; 1
    2e6e:	10 40       	sbci	r17, 0x00	; 0
    2e70:	08 94       	sec
    2e72:	e1 1c       	adc	r14, r1
    2e74:	f1 1c       	adc	r15, r1
    2e76:	0a 15       	cp	r16, r10
    2e78:	1b 05       	cpc	r17, r11
    2e7a:	2c f0       	brlt	.+10     	; 0x2e86 <vfprintf+0x3c6>
    2e7c:	90 e0       	ldi	r25, 0x00	; 0
    2e7e:	b3 01       	movw	r22, r6
    2e80:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2e84:	e0 cf       	rjmp	.-64     	; 0x2e46 <vfprintf+0x386>
    2e86:	0c 15       	cp	r16, r12
    2e88:	1d 05       	cpc	r17, r13
    2e8a:	39 f4       	brne	.+14     	; 0x2e9a <vfprintf+0x3da>
    2e8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e8e:	96 33       	cpi	r25, 0x36	; 54
    2e90:	18 f4       	brcc	.+6      	; 0x2e98 <vfprintf+0x3d8>
    2e92:	95 33       	cpi	r25, 0x35	; 53
    2e94:	11 f4       	brne	.+4      	; 0x2e9a <vfprintf+0x3da>
    2e96:	24 fe       	sbrs	r2, 4
    2e98:	81 e3       	ldi	r24, 0x31	; 49
    2e9a:	90 e0       	ldi	r25, 0x00	; 0
    2e9c:	4b c0       	rjmp	.+150    	; 0x2f34 <vfprintf+0x474>
    2e9e:	8a 81       	ldd	r24, Y+2	; 0x02
    2ea0:	81 33       	cpi	r24, 0x31	; 49
    2ea2:	09 f0       	breq	.+2      	; 0x2ea6 <vfprintf+0x3e6>
    2ea4:	0f 7e       	andi	r16, 0xEF	; 239
    2ea6:	90 e0       	ldi	r25, 0x00	; 0
    2ea8:	b3 01       	movw	r22, r6
    2eaa:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2eae:	99 20       	and	r9, r9
    2eb0:	a1 f0       	breq	.+40     	; 0x2eda <vfprintf+0x41a>
    2eb2:	8e e2       	ldi	r24, 0x2E	; 46
    2eb4:	90 e0       	ldi	r25, 0x00	; 0
    2eb6:	b3 01       	movw	r22, r6
    2eb8:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2ebc:	12 e0       	ldi	r17, 0x02	; 2
    2ebe:	e1 e0       	ldi	r30, 0x01	; 1
    2ec0:	f0 e0       	ldi	r31, 0x00	; 0
    2ec2:	ec 0f       	add	r30, r28
    2ec4:	fd 1f       	adc	r31, r29
    2ec6:	e1 0f       	add	r30, r17
    2ec8:	f1 1d       	adc	r31, r1
    2eca:	1f 5f       	subi	r17, 0xFF	; 255
    2ecc:	80 81       	ld	r24, Z
    2ece:	90 e0       	ldi	r25, 0x00	; 0
    2ed0:	b3 01       	movw	r22, r6
    2ed2:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2ed6:	9a 94       	dec	r9
    2ed8:	91 f7       	brne	.-28     	; 0x2ebe <vfprintf+0x3fe>
    2eda:	44 fc       	sbrc	r4, 4
    2edc:	03 c0       	rjmp	.+6      	; 0x2ee4 <vfprintf+0x424>
    2ede:	85 e6       	ldi	r24, 0x65	; 101
    2ee0:	90 e0       	ldi	r25, 0x00	; 0
    2ee2:	02 c0       	rjmp	.+4      	; 0x2ee8 <vfprintf+0x428>
    2ee4:	85 e4       	ldi	r24, 0x45	; 69
    2ee6:	90 e0       	ldi	r25, 0x00	; 0
    2ee8:	b3 01       	movw	r22, r6
    2eea:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2eee:	d7 fc       	sbrc	r13, 7
    2ef0:	05 c0       	rjmp	.+10     	; 0x2efc <vfprintf+0x43c>
    2ef2:	c1 14       	cp	r12, r1
    2ef4:	d1 04       	cpc	r13, r1
    2ef6:	41 f4       	brne	.+16     	; 0x2f08 <vfprintf+0x448>
    2ef8:	04 ff       	sbrs	r16, 4
    2efa:	06 c0       	rjmp	.+12     	; 0x2f08 <vfprintf+0x448>
    2efc:	d0 94       	com	r13
    2efe:	c1 94       	neg	r12
    2f00:	d1 08       	sbc	r13, r1
    2f02:	d3 94       	inc	r13
    2f04:	8d e2       	ldi	r24, 0x2D	; 45
    2f06:	01 c0       	rjmp	.+2      	; 0x2f0a <vfprintf+0x44a>
    2f08:	8b e2       	ldi	r24, 0x2B	; 43
    2f0a:	90 e0       	ldi	r25, 0x00	; 0
    2f0c:	b3 01       	movw	r22, r6
    2f0e:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2f12:	80 e3       	ldi	r24, 0x30	; 48
    2f14:	05 c0       	rjmp	.+10     	; 0x2f20 <vfprintf+0x460>
    2f16:	8f 5f       	subi	r24, 0xFF	; 255
    2f18:	26 ef       	ldi	r18, 0xF6	; 246
    2f1a:	3f ef       	ldi	r19, 0xFF	; 255
    2f1c:	c2 0e       	add	r12, r18
    2f1e:	d3 1e       	adc	r13, r19
    2f20:	3a e0       	ldi	r19, 0x0A	; 10
    2f22:	c3 16       	cp	r12, r19
    2f24:	d1 04       	cpc	r13, r1
    2f26:	bc f7       	brge	.-18     	; 0x2f16 <vfprintf+0x456>
    2f28:	90 e0       	ldi	r25, 0x00	; 0
    2f2a:	b3 01       	movw	r22, r6
    2f2c:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2f30:	c6 01       	movw	r24, r12
    2f32:	c0 96       	adiw	r24, 0x30	; 48
    2f34:	b3 01       	movw	r22, r6
    2f36:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2f3a:	cc 84       	ldd	r12, Y+12	; 0x0c
    2f3c:	dd 84       	ldd	r13, Y+13	; 0x0d
    2f3e:	52 c1       	rjmp	.+676    	; 0x31e4 <vfprintf+0x724>
    2f40:	93 36       	cpi	r25, 0x63	; 99
    2f42:	31 f0       	breq	.+12     	; 0x2f50 <vfprintf+0x490>
    2f44:	93 37       	cpi	r25, 0x73	; 115
    2f46:	99 f0       	breq	.+38     	; 0x2f6e <vfprintf+0x4ae>
    2f48:	93 35       	cpi	r25, 0x53	; 83
    2f4a:	09 f0       	breq	.+2      	; 0x2f4e <vfprintf+0x48e>
    2f4c:	59 c0       	rjmp	.+178    	; 0x3000 <vfprintf+0x540>
    2f4e:	23 c0       	rjmp	.+70     	; 0x2f96 <vfprintf+0x4d6>
    2f50:	f6 01       	movw	r30, r12
    2f52:	80 81       	ld	r24, Z
    2f54:	89 83       	std	Y+1, r24	; 0x01
    2f56:	5e 01       	movw	r10, r28
    2f58:	08 94       	sec
    2f5a:	a1 1c       	adc	r10, r1
    2f5c:	b1 1c       	adc	r11, r1
    2f5e:	22 e0       	ldi	r18, 0x02	; 2
    2f60:	30 e0       	ldi	r19, 0x00	; 0
    2f62:	c2 0e       	add	r12, r18
    2f64:	d3 1e       	adc	r13, r19
    2f66:	21 e0       	ldi	r18, 0x01	; 1
    2f68:	e2 2e       	mov	r14, r18
    2f6a:	f1 2c       	mov	r15, r1
    2f6c:	12 c0       	rjmp	.+36     	; 0x2f92 <vfprintf+0x4d2>
    2f6e:	f6 01       	movw	r30, r12
    2f70:	a0 80       	ld	r10, Z
    2f72:	b1 80       	ldd	r11, Z+1	; 0x01
    2f74:	16 fd       	sbrc	r17, 6
    2f76:	03 c0       	rjmp	.+6      	; 0x2f7e <vfprintf+0x4be>
    2f78:	6f ef       	ldi	r22, 0xFF	; 255
    2f7a:	7f ef       	ldi	r23, 0xFF	; 255
    2f7c:	02 c0       	rjmp	.+4      	; 0x2f82 <vfprintf+0x4c2>
    2f7e:	69 2d       	mov	r22, r9
    2f80:	70 e0       	ldi	r23, 0x00	; 0
    2f82:	22 e0       	ldi	r18, 0x02	; 2
    2f84:	30 e0       	ldi	r19, 0x00	; 0
    2f86:	c2 0e       	add	r12, r18
    2f88:	d3 1e       	adc	r13, r19
    2f8a:	c5 01       	movw	r24, r10
    2f8c:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <strnlen>
    2f90:	7c 01       	movw	r14, r24
    2f92:	1f 77       	andi	r17, 0x7F	; 127
    2f94:	13 c0       	rjmp	.+38     	; 0x2fbc <vfprintf+0x4fc>
    2f96:	f6 01       	movw	r30, r12
    2f98:	a0 80       	ld	r10, Z
    2f9a:	b1 80       	ldd	r11, Z+1	; 0x01
    2f9c:	16 fd       	sbrc	r17, 6
    2f9e:	03 c0       	rjmp	.+6      	; 0x2fa6 <vfprintf+0x4e6>
    2fa0:	6f ef       	ldi	r22, 0xFF	; 255
    2fa2:	7f ef       	ldi	r23, 0xFF	; 255
    2fa4:	02 c0       	rjmp	.+4      	; 0x2faa <vfprintf+0x4ea>
    2fa6:	69 2d       	mov	r22, r9
    2fa8:	70 e0       	ldi	r23, 0x00	; 0
    2faa:	22 e0       	ldi	r18, 0x02	; 2
    2fac:	30 e0       	ldi	r19, 0x00	; 0
    2fae:	c2 0e       	add	r12, r18
    2fb0:	d3 1e       	adc	r13, r19
    2fb2:	c5 01       	movw	r24, r10
    2fb4:	0e 94 ca 1c 	call	0x3994	; 0x3994 <strnlen_P>
    2fb8:	7c 01       	movw	r14, r24
    2fba:	10 68       	ori	r17, 0x80	; 128
    2fbc:	13 ff       	sbrs	r17, 3
    2fbe:	07 c0       	rjmp	.+14     	; 0x2fce <vfprintf+0x50e>
    2fc0:	1b c0       	rjmp	.+54     	; 0x2ff8 <vfprintf+0x538>
    2fc2:	80 e2       	ldi	r24, 0x20	; 32
    2fc4:	90 e0       	ldi	r25, 0x00	; 0
    2fc6:	b3 01       	movw	r22, r6
    2fc8:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2fcc:	8a 94       	dec	r8
    2fce:	88 2d       	mov	r24, r8
    2fd0:	90 e0       	ldi	r25, 0x00	; 0
    2fd2:	e8 16       	cp	r14, r24
    2fd4:	f9 06       	cpc	r15, r25
    2fd6:	a8 f3       	brcs	.-22     	; 0x2fc2 <vfprintf+0x502>
    2fd8:	0f c0       	rjmp	.+30     	; 0x2ff8 <vfprintf+0x538>
    2fda:	f5 01       	movw	r30, r10
    2fdc:	17 fd       	sbrc	r17, 7
    2fde:	85 91       	lpm	r24, Z+
    2fe0:	17 ff       	sbrs	r17, 7
    2fe2:	81 91       	ld	r24, Z+
    2fe4:	5f 01       	movw	r10, r30
    2fe6:	90 e0       	ldi	r25, 0x00	; 0
    2fe8:	b3 01       	movw	r22, r6
    2fea:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    2fee:	81 10       	cpse	r8, r1
    2ff0:	8a 94       	dec	r8
    2ff2:	08 94       	sec
    2ff4:	e1 08       	sbc	r14, r1
    2ff6:	f1 08       	sbc	r15, r1
    2ff8:	e1 14       	cp	r14, r1
    2ffa:	f1 04       	cpc	r15, r1
    2ffc:	71 f7       	brne	.-36     	; 0x2fda <vfprintf+0x51a>
    2ffe:	f2 c0       	rjmp	.+484    	; 0x31e4 <vfprintf+0x724>
    3000:	94 36       	cpi	r25, 0x64	; 100
    3002:	11 f0       	breq	.+4      	; 0x3008 <vfprintf+0x548>
    3004:	99 36       	cpi	r25, 0x69	; 105
    3006:	89 f5       	brne	.+98     	; 0x306a <vfprintf+0x5aa>
    3008:	17 ff       	sbrs	r17, 7
    300a:	08 c0       	rjmp	.+16     	; 0x301c <vfprintf+0x55c>
    300c:	f6 01       	movw	r30, r12
    300e:	20 81       	ld	r18, Z
    3010:	31 81       	ldd	r19, Z+1	; 0x01
    3012:	42 81       	ldd	r20, Z+2	; 0x02
    3014:	53 81       	ldd	r21, Z+3	; 0x03
    3016:	84 e0       	ldi	r24, 0x04	; 4
    3018:	90 e0       	ldi	r25, 0x00	; 0
    301a:	0a c0       	rjmp	.+20     	; 0x3030 <vfprintf+0x570>
    301c:	f6 01       	movw	r30, r12
    301e:	80 81       	ld	r24, Z
    3020:	91 81       	ldd	r25, Z+1	; 0x01
    3022:	9c 01       	movw	r18, r24
    3024:	44 27       	eor	r20, r20
    3026:	37 fd       	sbrc	r19, 7
    3028:	40 95       	com	r20
    302a:	54 2f       	mov	r21, r20
    302c:	82 e0       	ldi	r24, 0x02	; 2
    302e:	90 e0       	ldi	r25, 0x00	; 0
    3030:	c8 0e       	add	r12, r24
    3032:	d9 1e       	adc	r13, r25
    3034:	9f e6       	ldi	r25, 0x6F	; 111
    3036:	f9 2e       	mov	r15, r25
    3038:	f1 22       	and	r15, r17
    303a:	57 ff       	sbrs	r21, 7
    303c:	09 c0       	rjmp	.+18     	; 0x3050 <vfprintf+0x590>
    303e:	50 95       	com	r21
    3040:	40 95       	com	r20
    3042:	30 95       	com	r19
    3044:	21 95       	neg	r18
    3046:	3f 4f       	sbci	r19, 0xFF	; 255
    3048:	4f 4f       	sbci	r20, 0xFF	; 255
    304a:	5f 4f       	sbci	r21, 0xFF	; 255
    304c:	90 e8       	ldi	r25, 0x80	; 128
    304e:	f9 2a       	or	r15, r25
    3050:	ca 01       	movw	r24, r20
    3052:	b9 01       	movw	r22, r18
    3054:	ae 01       	movw	r20, r28
    3056:	4f 5f       	subi	r20, 0xFF	; 255
    3058:	5f 4f       	sbci	r21, 0xFF	; 255
    305a:	2a e0       	ldi	r18, 0x0A	; 10
    305c:	30 e0       	ldi	r19, 0x00	; 0
    305e:	0e 94 44 1d 	call	0x3a88	; 0x3a88 <__ultoa_invert>
    3062:	e8 2e       	mov	r14, r24
    3064:	e8 89       	ldd	r30, Y+16	; 0x10
    3066:	ee 1a       	sub	r14, r30
    3068:	41 c0       	rjmp	.+130    	; 0x30ec <vfprintf+0x62c>
    306a:	95 37       	cpi	r25, 0x75	; 117
    306c:	21 f4       	brne	.+8      	; 0x3076 <vfprintf+0x5b6>
    306e:	1f 7e       	andi	r17, 0xEF	; 239
    3070:	2a e0       	ldi	r18, 0x0A	; 10
    3072:	30 e0       	ldi	r19, 0x00	; 0
    3074:	1c c0       	rjmp	.+56     	; 0x30ae <vfprintf+0x5ee>
    3076:	19 7f       	andi	r17, 0xF9	; 249
    3078:	9f 36       	cpi	r25, 0x6F	; 111
    307a:	61 f0       	breq	.+24     	; 0x3094 <vfprintf+0x5d4>
    307c:	90 37       	cpi	r25, 0x70	; 112
    307e:	20 f4       	brcc	.+8      	; 0x3088 <vfprintf+0x5c8>
    3080:	98 35       	cpi	r25, 0x58	; 88
    3082:	09 f0       	breq	.+2      	; 0x3086 <vfprintf+0x5c6>
    3084:	b2 c0       	rjmp	.+356    	; 0x31ea <vfprintf+0x72a>
    3086:	0f c0       	rjmp	.+30     	; 0x30a6 <vfprintf+0x5e6>
    3088:	90 37       	cpi	r25, 0x70	; 112
    308a:	39 f0       	breq	.+14     	; 0x309a <vfprintf+0x5da>
    308c:	98 37       	cpi	r25, 0x78	; 120
    308e:	09 f0       	breq	.+2      	; 0x3092 <vfprintf+0x5d2>
    3090:	ac c0       	rjmp	.+344    	; 0x31ea <vfprintf+0x72a>
    3092:	04 c0       	rjmp	.+8      	; 0x309c <vfprintf+0x5dc>
    3094:	28 e0       	ldi	r18, 0x08	; 8
    3096:	30 e0       	ldi	r19, 0x00	; 0
    3098:	0a c0       	rjmp	.+20     	; 0x30ae <vfprintf+0x5ee>
    309a:	10 61       	ori	r17, 0x10	; 16
    309c:	14 fd       	sbrc	r17, 4
    309e:	14 60       	ori	r17, 0x04	; 4
    30a0:	20 e1       	ldi	r18, 0x10	; 16
    30a2:	30 e0       	ldi	r19, 0x00	; 0
    30a4:	04 c0       	rjmp	.+8      	; 0x30ae <vfprintf+0x5ee>
    30a6:	14 fd       	sbrc	r17, 4
    30a8:	16 60       	ori	r17, 0x06	; 6
    30aa:	20 e1       	ldi	r18, 0x10	; 16
    30ac:	32 e0       	ldi	r19, 0x02	; 2
    30ae:	17 ff       	sbrs	r17, 7
    30b0:	08 c0       	rjmp	.+16     	; 0x30c2 <vfprintf+0x602>
    30b2:	f6 01       	movw	r30, r12
    30b4:	60 81       	ld	r22, Z
    30b6:	71 81       	ldd	r23, Z+1	; 0x01
    30b8:	82 81       	ldd	r24, Z+2	; 0x02
    30ba:	93 81       	ldd	r25, Z+3	; 0x03
    30bc:	44 e0       	ldi	r20, 0x04	; 4
    30be:	50 e0       	ldi	r21, 0x00	; 0
    30c0:	08 c0       	rjmp	.+16     	; 0x30d2 <vfprintf+0x612>
    30c2:	f6 01       	movw	r30, r12
    30c4:	80 81       	ld	r24, Z
    30c6:	91 81       	ldd	r25, Z+1	; 0x01
    30c8:	bc 01       	movw	r22, r24
    30ca:	80 e0       	ldi	r24, 0x00	; 0
    30cc:	90 e0       	ldi	r25, 0x00	; 0
    30ce:	42 e0       	ldi	r20, 0x02	; 2
    30d0:	50 e0       	ldi	r21, 0x00	; 0
    30d2:	c4 0e       	add	r12, r20
    30d4:	d5 1e       	adc	r13, r21
    30d6:	ae 01       	movw	r20, r28
    30d8:	4f 5f       	subi	r20, 0xFF	; 255
    30da:	5f 4f       	sbci	r21, 0xFF	; 255
    30dc:	0e 94 44 1d 	call	0x3a88	; 0x3a88 <__ultoa_invert>
    30e0:	e8 2e       	mov	r14, r24
    30e2:	58 89       	ldd	r21, Y+16	; 0x10
    30e4:	e5 1a       	sub	r14, r21
    30e6:	8f e7       	ldi	r24, 0x7F	; 127
    30e8:	f8 2e       	mov	r15, r24
    30ea:	f1 22       	and	r15, r17
    30ec:	f6 fe       	sbrs	r15, 6
    30ee:	0b c0       	rjmp	.+22     	; 0x3106 <vfprintf+0x646>
    30f0:	8e ef       	ldi	r24, 0xFE	; 254
    30f2:	f8 22       	and	r15, r24
    30f4:	e9 14       	cp	r14, r9
    30f6:	38 f4       	brcc	.+14     	; 0x3106 <vfprintf+0x646>
    30f8:	f4 fe       	sbrs	r15, 4
    30fa:	07 c0       	rjmp	.+14     	; 0x310a <vfprintf+0x64a>
    30fc:	f2 fc       	sbrc	r15, 2
    30fe:	05 c0       	rjmp	.+10     	; 0x310a <vfprintf+0x64a>
    3100:	9f ee       	ldi	r25, 0xEF	; 239
    3102:	f9 22       	and	r15, r25
    3104:	02 c0       	rjmp	.+4      	; 0x310a <vfprintf+0x64a>
    3106:	1e 2d       	mov	r17, r14
    3108:	01 c0       	rjmp	.+2      	; 0x310c <vfprintf+0x64c>
    310a:	19 2d       	mov	r17, r9
    310c:	f4 fe       	sbrs	r15, 4
    310e:	0d c0       	rjmp	.+26     	; 0x312a <vfprintf+0x66a>
    3110:	fe 01       	movw	r30, r28
    3112:	ee 0d       	add	r30, r14
    3114:	f1 1d       	adc	r31, r1
    3116:	80 81       	ld	r24, Z
    3118:	80 33       	cpi	r24, 0x30	; 48
    311a:	19 f4       	brne	.+6      	; 0x3122 <vfprintf+0x662>
    311c:	e9 ee       	ldi	r30, 0xE9	; 233
    311e:	fe 22       	and	r15, r30
    3120:	08 c0       	rjmp	.+16     	; 0x3132 <vfprintf+0x672>
    3122:	1f 5f       	subi	r17, 0xFF	; 255
    3124:	f2 fe       	sbrs	r15, 2
    3126:	05 c0       	rjmp	.+10     	; 0x3132 <vfprintf+0x672>
    3128:	03 c0       	rjmp	.+6      	; 0x3130 <vfprintf+0x670>
    312a:	8f 2d       	mov	r24, r15
    312c:	86 78       	andi	r24, 0x86	; 134
    312e:	09 f0       	breq	.+2      	; 0x3132 <vfprintf+0x672>
    3130:	1f 5f       	subi	r17, 0xFF	; 255
    3132:	0f 2d       	mov	r16, r15
    3134:	f3 fc       	sbrc	r15, 3
    3136:	14 c0       	rjmp	.+40     	; 0x3160 <vfprintf+0x6a0>
    3138:	f0 fe       	sbrs	r15, 0
    313a:	0f c0       	rjmp	.+30     	; 0x315a <vfprintf+0x69a>
    313c:	18 15       	cp	r17, r8
    313e:	10 f0       	brcs	.+4      	; 0x3144 <vfprintf+0x684>
    3140:	9e 2c       	mov	r9, r14
    3142:	0b c0       	rjmp	.+22     	; 0x315a <vfprintf+0x69a>
    3144:	9e 2c       	mov	r9, r14
    3146:	98 0c       	add	r9, r8
    3148:	91 1a       	sub	r9, r17
    314a:	18 2d       	mov	r17, r8
    314c:	06 c0       	rjmp	.+12     	; 0x315a <vfprintf+0x69a>
    314e:	80 e2       	ldi	r24, 0x20	; 32
    3150:	90 e0       	ldi	r25, 0x00	; 0
    3152:	b3 01       	movw	r22, r6
    3154:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    3158:	1f 5f       	subi	r17, 0xFF	; 255
    315a:	18 15       	cp	r17, r8
    315c:	c0 f3       	brcs	.-16     	; 0x314e <vfprintf+0x68e>
    315e:	04 c0       	rjmp	.+8      	; 0x3168 <vfprintf+0x6a8>
    3160:	18 15       	cp	r17, r8
    3162:	10 f4       	brcc	.+4      	; 0x3168 <vfprintf+0x6a8>
    3164:	81 1a       	sub	r8, r17
    3166:	01 c0       	rjmp	.+2      	; 0x316a <vfprintf+0x6aa>
    3168:	88 24       	eor	r8, r8
    316a:	04 ff       	sbrs	r16, 4
    316c:	0f c0       	rjmp	.+30     	; 0x318c <vfprintf+0x6cc>
    316e:	80 e3       	ldi	r24, 0x30	; 48
    3170:	90 e0       	ldi	r25, 0x00	; 0
    3172:	b3 01       	movw	r22, r6
    3174:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    3178:	02 ff       	sbrs	r16, 2
    317a:	1d c0       	rjmp	.+58     	; 0x31b6 <vfprintf+0x6f6>
    317c:	01 fd       	sbrc	r16, 1
    317e:	03 c0       	rjmp	.+6      	; 0x3186 <vfprintf+0x6c6>
    3180:	88 e7       	ldi	r24, 0x78	; 120
    3182:	90 e0       	ldi	r25, 0x00	; 0
    3184:	0e c0       	rjmp	.+28     	; 0x31a2 <vfprintf+0x6e2>
    3186:	88 e5       	ldi	r24, 0x58	; 88
    3188:	90 e0       	ldi	r25, 0x00	; 0
    318a:	0b c0       	rjmp	.+22     	; 0x31a2 <vfprintf+0x6e2>
    318c:	80 2f       	mov	r24, r16
    318e:	86 78       	andi	r24, 0x86	; 134
    3190:	91 f0       	breq	.+36     	; 0x31b6 <vfprintf+0x6f6>
    3192:	01 ff       	sbrs	r16, 1
    3194:	02 c0       	rjmp	.+4      	; 0x319a <vfprintf+0x6da>
    3196:	8b e2       	ldi	r24, 0x2B	; 43
    3198:	01 c0       	rjmp	.+2      	; 0x319c <vfprintf+0x6dc>
    319a:	80 e2       	ldi	r24, 0x20	; 32
    319c:	f7 fc       	sbrc	r15, 7
    319e:	8d e2       	ldi	r24, 0x2D	; 45
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	b3 01       	movw	r22, r6
    31a4:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    31a8:	06 c0       	rjmp	.+12     	; 0x31b6 <vfprintf+0x6f6>
    31aa:	80 e3       	ldi	r24, 0x30	; 48
    31ac:	90 e0       	ldi	r25, 0x00	; 0
    31ae:	b3 01       	movw	r22, r6
    31b0:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    31b4:	9a 94       	dec	r9
    31b6:	e9 14       	cp	r14, r9
    31b8:	c0 f3       	brcs	.-16     	; 0x31aa <vfprintf+0x6ea>
    31ba:	ea 94       	dec	r14
    31bc:	e1 e0       	ldi	r30, 0x01	; 1
    31be:	f0 e0       	ldi	r31, 0x00	; 0
    31c0:	ec 0f       	add	r30, r28
    31c2:	fd 1f       	adc	r31, r29
    31c4:	ee 0d       	add	r30, r14
    31c6:	f1 1d       	adc	r31, r1
    31c8:	80 81       	ld	r24, Z
    31ca:	90 e0       	ldi	r25, 0x00	; 0
    31cc:	b3 01       	movw	r22, r6
    31ce:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    31d2:	ee 20       	and	r14, r14
    31d4:	91 f7       	brne	.-28     	; 0x31ba <vfprintf+0x6fa>
    31d6:	06 c0       	rjmp	.+12     	; 0x31e4 <vfprintf+0x724>
    31d8:	80 e2       	ldi	r24, 0x20	; 32
    31da:	90 e0       	ldi	r25, 0x00	; 0
    31dc:	b3 01       	movw	r22, r6
    31de:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <fputc>
    31e2:	8a 94       	dec	r8
    31e4:	88 20       	and	r8, r8
    31e6:	c1 f7       	brne	.-16     	; 0x31d8 <vfprintf+0x718>
    31e8:	97 cc       	rjmp	.-1746   	; 0x2b18 <vfprintf+0x58>
    31ea:	f3 01       	movw	r30, r6
    31ec:	66 81       	ldd	r22, Z+6	; 0x06
    31ee:	77 81       	ldd	r23, Z+7	; 0x07
    31f0:	cb 01       	movw	r24, r22
    31f2:	61 96       	adiw	r28, 0x11	; 17
    31f4:	0f b6       	in	r0, 0x3f	; 63
    31f6:	f8 94       	cli
    31f8:	de bf       	out	0x3e, r29	; 62
    31fa:	0f be       	out	0x3f, r0	; 63
    31fc:	cd bf       	out	0x3d, r28	; 61
    31fe:	cf 91       	pop	r28
    3200:	df 91       	pop	r29
    3202:	1f 91       	pop	r17
    3204:	0f 91       	pop	r16
    3206:	ff 90       	pop	r15
    3208:	ef 90       	pop	r14
    320a:	df 90       	pop	r13
    320c:	cf 90       	pop	r12
    320e:	bf 90       	pop	r11
    3210:	af 90       	pop	r10
    3212:	9f 90       	pop	r9
    3214:	8f 90       	pop	r8
    3216:	7f 90       	pop	r7
    3218:	6f 90       	pop	r6
    321a:	5f 90       	pop	r5
    321c:	4f 90       	pop	r4
    321e:	3f 90       	pop	r3
    3220:	2f 90       	pop	r2
    3222:	08 95       	ret

00003224 <i2c_start_transmission>:
    3224:	f8 94       	cli
    3226:	80 91 1b 07 	lds	r24, 0x071B
    322a:	88 23       	and	r24, r24
    322c:	11 f4       	brne	.+4      	; 0x3232 <i2c_start_transmission+0xe>
    322e:	81 e1       	ldi	r24, 0x11	; 17
    3230:	05 c0       	rjmp	.+10     	; 0x323c <i2c_start_transmission+0x18>
    3232:	80 91 74 00 	lds	r24, 0x0074
    3236:	84 ff       	sbrs	r24, 4
    3238:	05 c0       	rjmp	.+10     	; 0x3244 <i2c_start_transmission+0x20>
    323a:	82 e1       	ldi	r24, 0x12	; 18
    323c:	80 93 1b 07 	sts	0x071B, r24
    3240:	80 e0       	ldi	r24, 0x00	; 0
    3242:	15 c0       	rjmp	.+42     	; 0x326e <i2c_start_transmission+0x4a>
    3244:	80 91 74 00 	lds	r24, 0x0074
    3248:	85 ff       	sbrs	r24, 5
    324a:	07 c0       	rjmp	.+14     	; 0x325a <i2c_start_transmission+0x36>
    324c:	10 92 74 00 	sts	0x0074, r1
    3250:	84 e0       	ldi	r24, 0x04	; 4
    3252:	80 93 74 00 	sts	0x0074, r24
    3256:	88 e1       	ldi	r24, 0x18	; 24
    3258:	f1 cf       	rjmp	.-30     	; 0x323c <i2c_start_transmission+0x18>
    325a:	10 92 1b 07 	sts	0x071B, r1
    325e:	80 91 1e 07 	lds	r24, 0x071E
    3262:	80 93 1c 07 	sts	0x071C, r24
    3266:	85 ea       	ldi	r24, 0xA5	; 165
    3268:	80 93 74 00 	sts	0x0074, r24
    326c:	81 e0       	ldi	r24, 0x01	; 1
    326e:	78 94       	sei
    3270:	08 95       	ret

00003272 <i2c_wait_transmission>:
    3272:	80 e1       	ldi	r24, 0x10	; 16
    3274:	97 e2       	ldi	r25, 0x27	; 39
    3276:	35 e0       	ldi	r19, 0x05	; 5
    3278:	0d c0       	rjmp	.+26     	; 0x3294 <i2c_wait_transmission+0x22>
    327a:	20 91 74 00 	lds	r18, 0x0074
    327e:	20 fd       	sbrc	r18, 0
    3280:	06 c0       	rjmp	.+12     	; 0x328e <i2c_wait_transmission+0x1c>
    3282:	20 91 74 00 	lds	r18, 0x0074
    3286:	24 fd       	sbrc	r18, 4
    3288:	02 c0       	rjmp	.+4      	; 0x328e <i2c_wait_transmission+0x1c>
    328a:	81 e0       	ldi	r24, 0x01	; 1
    328c:	08 95       	ret
    328e:	23 2f       	mov	r18, r19
    3290:	2a 95       	dec	r18
    3292:	f1 f7       	brne	.-4      	; 0x3290 <i2c_wait_transmission+0x1e>
    3294:	01 97       	sbiw	r24, 0x01	; 1
    3296:	2f ef       	ldi	r18, 0xFF	; 255
    3298:	8f 3f       	cpi	r24, 0xFF	; 255
    329a:	92 07       	cpc	r25, r18
    329c:	71 f7       	brne	.-36     	; 0x327a <i2c_wait_transmission+0x8>
    329e:	f8 94       	cli
    32a0:	10 92 74 00 	sts	0x0074, r1
    32a4:	84 e0       	ldi	r24, 0x04	; 4
    32a6:	80 93 74 00 	sts	0x0074, r24
    32aa:	80 91 1b 07 	lds	r24, 0x071B
    32ae:	80 31       	cpi	r24, 0x10	; 16
    32b0:	18 f4       	brcc	.+6      	; 0x32b8 <i2c_wait_transmission+0x46>
    32b2:	83 e1       	ldi	r24, 0x13	; 19
    32b4:	80 93 1b 07 	sts	0x071B, r24
    32b8:	78 94       	sei
    32ba:	80 e0       	ldi	r24, 0x00	; 0
    32bc:	08 95       	ret

000032be <i2c_status>:
    32be:	80 91 1b 07 	lds	r24, 0x071B
    32c2:	08 95       	ret

000032c4 <i2c_init>:
    32c4:	e4 e7       	ldi	r30, 0x74	; 116
    32c6:	f0 e0       	ldi	r31, 0x00	; 0
    32c8:	10 82       	st	Z, r1
    32ca:	88 e4       	ldi	r24, 0x48	; 72
    32cc:	80 93 70 00 	sts	0x0070, r24
    32d0:	8f ef       	ldi	r24, 0xFF	; 255
    32d2:	80 93 73 00 	sts	0x0073, r24
    32d6:	84 e0       	ldi	r24, 0x04	; 4
    32d8:	80 83       	st	Z, r24
    32da:	81 e0       	ldi	r24, 0x01	; 1
    32dc:	80 93 1b 07 	sts	0x071B, r24
    32e0:	08 95       	ret

000032e2 <__vector_33>:
    32e2:	1f 92       	push	r1
    32e4:	0f 92       	push	r0
    32e6:	0f b6       	in	r0, 0x3f	; 63
    32e8:	0f 92       	push	r0
    32ea:	0b b6       	in	r0, 0x3b	; 59
    32ec:	0f 92       	push	r0
    32ee:	11 24       	eor	r1, r1
    32f0:	2f 93       	push	r18
    32f2:	3f 93       	push	r19
    32f4:	8f 93       	push	r24
    32f6:	9f 93       	push	r25
    32f8:	ef 93       	push	r30
    32fa:	ff 93       	push	r31
    32fc:	80 91 71 00 	lds	r24, 0x0071
    3300:	88 7f       	andi	r24, 0xF8	; 248
    3302:	80 93 1d 07 	sts	0x071D, r24
    3306:	88 32       	cpi	r24, 0x28	; 40
    3308:	51 f1       	breq	.+84     	; 0x335e <__vector_33+0x7c>
    330a:	89 32       	cpi	r24, 0x29	; 41
    330c:	88 f4       	brcc	.+34     	; 0x3330 <__vector_33+0x4e>
    330e:	80 31       	cpi	r24, 0x10	; 16
    3310:	21 f1       	breq	.+72     	; 0x335a <__vector_33+0x78>
    3312:	81 31       	cpi	r24, 0x11	; 17
    3314:	38 f4       	brcc	.+14     	; 0x3324 <__vector_33+0x42>
    3316:	88 23       	and	r24, r24
    3318:	09 f4       	brne	.+2      	; 0x331c <__vector_33+0x3a>
    331a:	71 c0       	rjmp	.+226    	; 0x33fe <__vector_33+0x11c>
    331c:	88 30       	cpi	r24, 0x08	; 8
    331e:	09 f0       	breq	.+2      	; 0x3322 <__vector_33+0x40>
    3320:	73 c0       	rjmp	.+230    	; 0x3408 <__vector_33+0x126>
    3322:	1b c0       	rjmp	.+54     	; 0x335a <__vector_33+0x78>
    3324:	88 31       	cpi	r24, 0x18	; 24
    3326:	d9 f0       	breq	.+54     	; 0x335e <__vector_33+0x7c>
    3328:	80 32       	cpi	r24, 0x20	; 32
    332a:	09 f0       	breq	.+2      	; 0x332e <__vector_33+0x4c>
    332c:	6d c0       	rjmp	.+218    	; 0x3408 <__vector_33+0x126>
    332e:	67 c0       	rjmp	.+206    	; 0x33fe <__vector_33+0x11c>
    3330:	80 34       	cpi	r24, 0x40	; 64
    3332:	09 f4       	brne	.+2      	; 0x3336 <__vector_33+0x54>
    3334:	42 c0       	rjmp	.+132    	; 0x33ba <__vector_33+0xd8>
    3336:	81 34       	cpi	r24, 0x41	; 65
    3338:	38 f4       	brcc	.+14     	; 0x3348 <__vector_33+0x66>
    333a:	80 33       	cpi	r24, 0x30	; 48
    333c:	09 f4       	brne	.+2      	; 0x3340 <__vector_33+0x5e>
    333e:	5f c0       	rjmp	.+190    	; 0x33fe <__vector_33+0x11c>
    3340:	88 33       	cpi	r24, 0x38	; 56
    3342:	09 f0       	breq	.+2      	; 0x3346 <__vector_33+0x64>
    3344:	61 c0       	rjmp	.+194    	; 0x3408 <__vector_33+0x126>
    3346:	56 c0       	rjmp	.+172    	; 0x33f4 <__vector_33+0x112>
    3348:	80 35       	cpi	r24, 0x50	; 80
    334a:	59 f1       	breq	.+86     	; 0x33a2 <__vector_33+0xc0>
    334c:	88 35       	cpi	r24, 0x58	; 88
    334e:	09 f4       	brne	.+2      	; 0x3352 <__vector_33+0x70>
    3350:	42 c0       	rjmp	.+132    	; 0x33d6 <__vector_33+0xf4>
    3352:	88 34       	cpi	r24, 0x48	; 72
    3354:	09 f0       	breq	.+2      	; 0x3358 <__vector_33+0x76>
    3356:	58 c0       	rjmp	.+176    	; 0x3408 <__vector_33+0x126>
    3358:	52 c0       	rjmp	.+164    	; 0x33fe <__vector_33+0x11c>
    335a:	10 92 1f 07 	sts	0x071F, r1
    335e:	90 91 1f 07 	lds	r25, 0x071F
    3362:	80 91 1c 07 	lds	r24, 0x071C
    3366:	98 17       	cp	r25, r24
    3368:	68 f4       	brcc	.+26     	; 0x3384 <__vector_33+0xa2>
    336a:	80 91 1f 07 	lds	r24, 0x071F
    336e:	e8 2f       	mov	r30, r24
    3370:	f0 e0       	ldi	r31, 0x00	; 0
    3372:	e9 5f       	subi	r30, 0xF9	; 249
    3374:	f8 4f       	sbci	r31, 0xF8	; 248
    3376:	90 81       	ld	r25, Z
    3378:	8f 5f       	subi	r24, 0xFF	; 255
    337a:	80 93 1f 07 	sts	0x071F, r24
    337e:	90 93 73 00 	sts	0x0073, r25
    3382:	27 c0       	rjmp	.+78     	; 0x33d2 <__vector_33+0xf0>
    3384:	80 91 20 07 	lds	r24, 0x0720
    3388:	88 23       	and	r24, r24
    338a:	69 f1       	breq	.+90     	; 0x33e6 <__vector_33+0x104>
    338c:	80 91 20 07 	lds	r24, 0x0720
    3390:	80 93 1c 07 	sts	0x071C, r24
    3394:	80 91 07 07 	lds	r24, 0x0707
    3398:	81 60       	ori	r24, 0x01	; 1
    339a:	80 93 07 07 	sts	0x0707, r24
    339e:	85 ea       	ldi	r24, 0xA5	; 165
    33a0:	26 c0       	rjmp	.+76     	; 0x33ee <__vector_33+0x10c>
    33a2:	80 91 1f 07 	lds	r24, 0x071F
    33a6:	90 91 73 00 	lds	r25, 0x0073
    33aa:	e8 2f       	mov	r30, r24
    33ac:	f0 e0       	ldi	r31, 0x00	; 0
    33ae:	e9 5f       	subi	r30, 0xF9	; 249
    33b0:	f8 4f       	sbci	r31, 0xF8	; 248
    33b2:	90 83       	st	Z, r25
    33b4:	8f 5f       	subi	r24, 0xFF	; 255
    33b6:	80 93 1f 07 	sts	0x071F, r24
    33ba:	80 91 1f 07 	lds	r24, 0x071F
    33be:	20 91 1c 07 	lds	r18, 0x071C
    33c2:	90 e0       	ldi	r25, 0x00	; 0
    33c4:	01 96       	adiw	r24, 0x01	; 1
    33c6:	30 e0       	ldi	r19, 0x00	; 0
    33c8:	82 17       	cp	r24, r18
    33ca:	93 07       	cpc	r25, r19
    33cc:	14 f4       	brge	.+4      	; 0x33d2 <__vector_33+0xf0>
    33ce:	85 ec       	ldi	r24, 0xC5	; 197
    33d0:	0e c0       	rjmp	.+28     	; 0x33ee <__vector_33+0x10c>
    33d2:	85 e8       	ldi	r24, 0x85	; 133
    33d4:	0c c0       	rjmp	.+24     	; 0x33ee <__vector_33+0x10c>
    33d6:	e0 91 1f 07 	lds	r30, 0x071F
    33da:	80 91 73 00 	lds	r24, 0x0073
    33de:	f0 e0       	ldi	r31, 0x00	; 0
    33e0:	e9 5f       	subi	r30, 0xF9	; 249
    33e2:	f8 4f       	sbci	r31, 0xF8	; 248
    33e4:	80 83       	st	Z, r24
    33e6:	82 e0       	ldi	r24, 0x02	; 2
    33e8:	80 93 1b 07 	sts	0x071B, r24
    33ec:	84 e9       	ldi	r24, 0x94	; 148
    33ee:	80 93 74 00 	sts	0x0074, r24
    33f2:	10 c0       	rjmp	.+32     	; 0x3414 <__vector_33+0x132>
    33f4:	84 e8       	ldi	r24, 0x84	; 132
    33f6:	80 93 74 00 	sts	0x0074, r24
    33fa:	85 e1       	ldi	r24, 0x15	; 21
    33fc:	09 c0       	rjmp	.+18     	; 0x3410 <__vector_33+0x12e>
    33fe:	84 e9       	ldi	r24, 0x94	; 148
    3400:	80 93 74 00 	sts	0x0074, r24
    3404:	86 e1       	ldi	r24, 0x16	; 22
    3406:	04 c0       	rjmp	.+8      	; 0x3410 <__vector_33+0x12e>
    3408:	84 e8       	ldi	r24, 0x84	; 132
    340a:	80 93 74 00 	sts	0x0074, r24
    340e:	87 e1       	ldi	r24, 0x17	; 23
    3410:	80 93 1b 07 	sts	0x071B, r24
    3414:	ff 91       	pop	r31
    3416:	ef 91       	pop	r30
    3418:	9f 91       	pop	r25
    341a:	8f 91       	pop	r24
    341c:	3f 91       	pop	r19
    341e:	2f 91       	pop	r18
    3420:	0f 90       	pop	r0
    3422:	0b be       	out	0x3b, r0	; 59
    3424:	0f 90       	pop	r0
    3426:	0f be       	out	0x3f, r0	; 63
    3428:	0f 90       	pop	r0
    342a:	1f 90       	pop	r1
    342c:	18 95       	reti

0000342e <nds3_init>:
    342e:	08 95       	ret

00003430 <nds3_transaction>:
    3430:	80 93 1e 07 	sts	0x071E, r24
    3434:	60 93 20 07 	sts	0x0720, r22
    3438:	0e 94 12 19 	call	0x3224	; 0x3224 <i2c_start_transmission>
    343c:	0e 94 39 19 	call	0x3272	; 0x3272 <i2c_wait_transmission>
    3440:	08 95       	ret

00003442 <nds3_distcalib_commit>:
    3442:	84 e5       	ldi	r24, 0x54	; 84
    3444:	80 93 07 07 	sts	0x0707, r24
    3448:	84 e2       	ldi	r24, 0x24	; 36
    344a:	80 93 08 07 	sts	0x0708, r24
    344e:	80 91 df 07 	lds	r24, 0x07DF
    3452:	90 91 e0 07 	lds	r25, 0x07E0
    3456:	90 93 09 07 	sts	0x0709, r25
    345a:	80 93 0a 07 	sts	0x070A, r24
    345e:	80 91 e1 07 	lds	r24, 0x07E1
    3462:	90 91 e2 07 	lds	r25, 0x07E2
    3466:	90 93 0b 07 	sts	0x070B, r25
    346a:	80 93 0c 07 	sts	0x070C, r24
    346e:	80 91 21 07 	lds	r24, 0x0721
    3472:	90 91 22 07 	lds	r25, 0x0722
    3476:	90 93 0d 07 	sts	0x070D, r25
    347a:	80 93 0e 07 	sts	0x070E, r24
    347e:	88 e0       	ldi	r24, 0x08	; 8
    3480:	62 e0       	ldi	r22, 0x02	; 2
    3482:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    3486:	08 95       	ret

00003488 <nds3_distcalib_update>:
    3488:	84 e5       	ldi	r24, 0x54	; 84
    348a:	80 93 07 07 	sts	0x0707, r24
    348e:	83 e2       	ldi	r24, 0x23	; 35
    3490:	80 93 08 07 	sts	0x0708, r24
    3494:	82 e0       	ldi	r24, 0x02	; 2
    3496:	67 e0       	ldi	r22, 0x07	; 7
    3498:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    349c:	90 91 08 07 	lds	r25, 0x0708
    34a0:	80 e0       	ldi	r24, 0x00	; 0
    34a2:	20 91 09 07 	lds	r18, 0x0709
    34a6:	82 0f       	add	r24, r18
    34a8:	91 1d       	adc	r25, r1
    34aa:	90 93 e0 07 	sts	0x07E0, r25
    34ae:	80 93 df 07 	sts	0x07DF, r24
    34b2:	90 91 0a 07 	lds	r25, 0x070A
    34b6:	80 e0       	ldi	r24, 0x00	; 0
    34b8:	20 91 0b 07 	lds	r18, 0x070B
    34bc:	82 0f       	add	r24, r18
    34be:	91 1d       	adc	r25, r1
    34c0:	90 93 e2 07 	sts	0x07E2, r25
    34c4:	80 93 e1 07 	sts	0x07E1, r24
    34c8:	90 91 0c 07 	lds	r25, 0x070C
    34cc:	80 e0       	ldi	r24, 0x00	; 0
    34ce:	20 91 0d 07 	lds	r18, 0x070D
    34d2:	82 0f       	add	r24, r18
    34d4:	91 1d       	adc	r25, r1
    34d6:	90 93 22 07 	sts	0x0722, r25
    34da:	80 93 21 07 	sts	0x0721, r24
    34de:	08 95       	ret

000034e0 <nds3_servocalib_commit>:
    34e0:	84 e5       	ldi	r24, 0x54	; 84
    34e2:	80 93 07 07 	sts	0x0707, r24
    34e6:	82 e2       	ldi	r24, 0x22	; 34
    34e8:	80 93 08 07 	sts	0x0708, r24
    34ec:	80 91 dd 07 	lds	r24, 0x07DD
    34f0:	90 91 de 07 	lds	r25, 0x07DE
    34f4:	90 93 09 07 	sts	0x0709, r25
    34f8:	80 93 0a 07 	sts	0x070A, r24
    34fc:	80 91 23 07 	lds	r24, 0x0723
    3500:	90 91 24 07 	lds	r25, 0x0724
    3504:	90 93 0b 07 	sts	0x070B, r25
    3508:	80 93 0c 07 	sts	0x070C, r24
    350c:	80 91 e3 07 	lds	r24, 0x07E3
    3510:	90 91 e4 07 	lds	r25, 0x07E4
    3514:	90 93 0d 07 	sts	0x070D, r25
    3518:	80 93 0e 07 	sts	0x070E, r24
    351c:	88 e0       	ldi	r24, 0x08	; 8
    351e:	62 e0       	ldi	r22, 0x02	; 2
    3520:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    3524:	08 95       	ret

00003526 <nds3_servocalib_update>:
    3526:	84 e5       	ldi	r24, 0x54	; 84
    3528:	80 93 07 07 	sts	0x0707, r24
    352c:	81 e2       	ldi	r24, 0x21	; 33
    352e:	80 93 08 07 	sts	0x0708, r24
    3532:	82 e0       	ldi	r24, 0x02	; 2
    3534:	67 e0       	ldi	r22, 0x07	; 7
    3536:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    353a:	90 91 08 07 	lds	r25, 0x0708
    353e:	80 e0       	ldi	r24, 0x00	; 0
    3540:	20 91 09 07 	lds	r18, 0x0709
    3544:	82 0f       	add	r24, r18
    3546:	91 1d       	adc	r25, r1
    3548:	90 93 de 07 	sts	0x07DE, r25
    354c:	80 93 dd 07 	sts	0x07DD, r24
    3550:	90 91 0a 07 	lds	r25, 0x070A
    3554:	80 e0       	ldi	r24, 0x00	; 0
    3556:	20 91 0b 07 	lds	r18, 0x070B
    355a:	82 0f       	add	r24, r18
    355c:	91 1d       	adc	r25, r1
    355e:	90 93 24 07 	sts	0x0724, r25
    3562:	80 93 23 07 	sts	0x0723, r24
    3566:	90 91 0c 07 	lds	r25, 0x070C
    356a:	80 e0       	ldi	r24, 0x00	; 0
    356c:	20 91 0d 07 	lds	r18, 0x070D
    3570:	82 0f       	add	r24, r18
    3572:	91 1d       	adc	r25, r1
    3574:	90 93 e4 07 	sts	0x07E4, r25
    3578:	80 93 e3 07 	sts	0x07E3, r24
    357c:	08 95       	ret

0000357e <nds3_move_servo>:
    357e:	24 e5       	ldi	r18, 0x54	; 84
    3580:	20 93 07 07 	sts	0x0707, r18
    3584:	20 e2       	ldi	r18, 0x20	; 32
    3586:	20 93 08 07 	sts	0x0708, r18
    358a:	90 93 09 07 	sts	0x0709, r25
    358e:	80 93 0a 07 	sts	0x070A, r24
    3592:	84 e0       	ldi	r24, 0x04	; 4
    3594:	62 e0       	ldi	r22, 0x02	; 2
    3596:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    359a:	08 95       	ret

0000359c <nds3_get_analog>:
    359c:	94 e5       	ldi	r25, 0x54	; 84
    359e:	90 93 07 07 	sts	0x0707, r25
    35a2:	93 e1       	ldi	r25, 0x13	; 19
    35a4:	90 93 08 07 	sts	0x0708, r25
    35a8:	80 93 09 07 	sts	0x0709, r24
    35ac:	83 e0       	ldi	r24, 0x03	; 3
    35ae:	63 e0       	ldi	r22, 0x03	; 3
    35b0:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    35b4:	30 91 08 07 	lds	r19, 0x0708
    35b8:	20 e0       	ldi	r18, 0x00	; 0
    35ba:	80 91 09 07 	lds	r24, 0x0709
    35be:	28 0f       	add	r18, r24
    35c0:	31 1d       	adc	r19, r1
    35c2:	c9 01       	movw	r24, r18
    35c4:	08 95       	ret

000035c6 <nds3_pin_update>:
    35c6:	84 e5       	ldi	r24, 0x54	; 84
    35c8:	80 93 07 07 	sts	0x0707, r24
    35cc:	82 e1       	ldi	r24, 0x12	; 18
    35ce:	80 93 08 07 	sts	0x0708, r24
    35d2:	82 e0       	ldi	r24, 0x02	; 2
    35d4:	62 e0       	ldi	r22, 0x02	; 2
    35d6:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    35da:	80 91 08 07 	lds	r24, 0x0708
    35de:	80 93 25 07 	sts	0x0725, r24
    35e2:	08 95       	ret

000035e4 <nds3_port_commit>:
    35e4:	84 e5       	ldi	r24, 0x54	; 84
    35e6:	80 93 07 07 	sts	0x0707, r24
    35ea:	81 e1       	ldi	r24, 0x11	; 17
    35ec:	80 93 08 07 	sts	0x0708, r24
    35f0:	80 91 dc 07 	lds	r24, 0x07DC
    35f4:	80 93 09 07 	sts	0x0709, r24
    35f8:	83 e0       	ldi	r24, 0x03	; 3
    35fa:	62 e0       	ldi	r22, 0x02	; 2
    35fc:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    3600:	08 95       	ret

00003602 <nds3_ddr_commit>:
    3602:	84 e5       	ldi	r24, 0x54	; 84
    3604:	80 93 07 07 	sts	0x0707, r24
    3608:	80 e1       	ldi	r24, 0x10	; 16
    360a:	80 93 08 07 	sts	0x0708, r24
    360e:	80 91 26 07 	lds	r24, 0x0726
    3612:	80 93 09 07 	sts	0x0709, r24
    3616:	83 e0       	ldi	r24, 0x03	; 3
    3618:	62 e0       	ldi	r22, 0x02	; 2
    361a:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    361e:	08 95       	ret

00003620 <nds3_get_busy>:
    3620:	84 e5       	ldi	r24, 0x54	; 84
    3622:	80 93 07 07 	sts	0x0707, r24
    3626:	86 e0       	ldi	r24, 0x06	; 6
    3628:	80 93 08 07 	sts	0x0708, r24
    362c:	82 e0       	ldi	r24, 0x02	; 2
    362e:	62 e0       	ldi	r22, 0x02	; 2
    3630:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    3634:	80 91 08 07 	lds	r24, 0x0708
    3638:	08 95       	ret

0000363a <nds3_get_dist>:
    363a:	84 e5       	ldi	r24, 0x54	; 84
    363c:	80 93 07 07 	sts	0x0707, r24
    3640:	85 e0       	ldi	r24, 0x05	; 5
    3642:	80 93 08 07 	sts	0x0708, r24
    3646:	82 e0       	ldi	r24, 0x02	; 2
    3648:	62 e0       	ldi	r22, 0x02	; 2
    364a:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    364e:	80 91 08 07 	lds	r24, 0x0708
    3652:	08 95       	ret

00003654 <nds3_get_pos>:
    3654:	84 e5       	ldi	r24, 0x54	; 84
    3656:	80 93 07 07 	sts	0x0707, r24
    365a:	84 e0       	ldi	r24, 0x04	; 4
    365c:	80 93 08 07 	sts	0x0708, r24
    3660:	82 e0       	ldi	r24, 0x02	; 2
    3662:	62 e0       	ldi	r22, 0x02	; 2
    3664:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    3668:	80 91 08 07 	lds	r24, 0x0708
    366c:	08 95       	ret

0000366e <nds3_read>:
    366e:	0f 93       	push	r16
    3670:	1f 93       	push	r17
    3672:	18 2f       	mov	r17, r24
    3674:	06 2f       	mov	r16, r22
    3676:	84 e5       	ldi	r24, 0x54	; 84
    3678:	80 93 07 07 	sts	0x0707, r24
    367c:	83 e0       	ldi	r24, 0x03	; 3
    367e:	80 93 08 07 	sts	0x0708, r24
    3682:	10 93 09 07 	sts	0x0709, r17
    3686:	60 93 0a 07 	sts	0x070A, r22
    368a:	84 e0       	ldi	r24, 0x04	; 4
    368c:	61 e1       	ldi	r22, 0x11	; 17
    368e:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    3692:	e8 e0       	ldi	r30, 0x08	; 8
    3694:	f7 e0       	ldi	r31, 0x07	; 7
    3696:	07 c0       	rjmp	.+14     	; 0x36a6 <nds3_read+0x38>
    3698:	a1 2f       	mov	r26, r17
    369a:	b0 e0       	ldi	r27, 0x00	; 0
    369c:	a9 5d       	subi	r26, 0xD9	; 217
    369e:	b8 4f       	sbci	r27, 0xF8	; 248
    36a0:	81 91       	ld	r24, Z+
    36a2:	8c 93       	st	X, r24
    36a4:	10 0f       	add	r17, r16
    36a6:	15 3b       	cpi	r17, 0xB5	; 181
    36a8:	20 f4       	brcc	.+8      	; 0x36b2 <nds3_read+0x44>
    36aa:	87 e0       	ldi	r24, 0x07	; 7
    36ac:	e8 31       	cpi	r30, 0x18	; 24
    36ae:	f8 07       	cpc	r31, r24
    36b0:	99 f7       	brne	.-26     	; 0x3698 <nds3_read+0x2a>
    36b2:	1f 91       	pop	r17
    36b4:	0f 91       	pop	r16
    36b6:	08 95       	ret

000036b8 <nds3_measure>:
    36b8:	94 e5       	ldi	r25, 0x54	; 84
    36ba:	90 93 07 07 	sts	0x0707, r25
    36be:	92 e0       	ldi	r25, 0x02	; 2
    36c0:	90 93 08 07 	sts	0x0708, r25
    36c4:	80 93 09 07 	sts	0x0709, r24
    36c8:	60 93 0a 07 	sts	0x070A, r22
    36cc:	84 e0       	ldi	r24, 0x04	; 4
    36ce:	62 e0       	ldi	r22, 0x02	; 2
    36d0:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    36d4:	08 95       	ret

000036d6 <nds3_move>:
    36d6:	94 e5       	ldi	r25, 0x54	; 84
    36d8:	90 93 07 07 	sts	0x0707, r25
    36dc:	91 e0       	ldi	r25, 0x01	; 1
    36de:	90 93 08 07 	sts	0x0708, r25
    36e2:	80 93 09 07 	sts	0x0709, r24
    36e6:	83 e0       	ldi	r24, 0x03	; 3
    36e8:	62 e0       	ldi	r22, 0x02	; 2
    36ea:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    36ee:	08 95       	ret

000036f0 <nds3_reset>:
    36f0:	84 e5       	ldi	r24, 0x54	; 84
    36f2:	80 93 07 07 	sts	0x0707, r24
    36f6:	10 92 08 07 	sts	0x0708, r1
    36fa:	82 e0       	ldi	r24, 0x02	; 2
    36fc:	62 e0       	ldi	r22, 0x02	; 2
    36fe:	0e 94 18 1a 	call	0x3430	; 0x3430 <nds3_transaction>
    3702:	08 95       	ret

00003704 <__udivmodqi4>:
    3704:	99 1b       	sub	r25, r25
    3706:	79 e0       	ldi	r23, 0x09	; 9
    3708:	04 c0       	rjmp	.+8      	; 0x3712 <__udivmodqi4_ep>

0000370a <__udivmodqi4_loop>:
    370a:	99 1f       	adc	r25, r25
    370c:	96 17       	cp	r25, r22
    370e:	08 f0       	brcs	.+2      	; 0x3712 <__udivmodqi4_ep>
    3710:	96 1b       	sub	r25, r22

00003712 <__udivmodqi4_ep>:
    3712:	88 1f       	adc	r24, r24
    3714:	7a 95       	dec	r23
    3716:	c9 f7       	brne	.-14     	; 0x370a <__udivmodqi4_loop>
    3718:	80 95       	com	r24
    371a:	08 95       	ret

0000371c <__divmodhi4>:
    371c:	97 fb       	bst	r25, 7
    371e:	09 2e       	mov	r0, r25
    3720:	07 26       	eor	r0, r23
    3722:	0a d0       	rcall	.+20     	; 0x3738 <__divmodhi4_neg1>
    3724:	77 fd       	sbrc	r23, 7
    3726:	04 d0       	rcall	.+8      	; 0x3730 <__divmodhi4_neg2>
    3728:	49 d0       	rcall	.+146    	; 0x37bc <__udivmodhi4>
    372a:	06 d0       	rcall	.+12     	; 0x3738 <__divmodhi4_neg1>
    372c:	00 20       	and	r0, r0
    372e:	1a f4       	brpl	.+6      	; 0x3736 <__divmodhi4_exit>

00003730 <__divmodhi4_neg2>:
    3730:	70 95       	com	r23
    3732:	61 95       	neg	r22
    3734:	7f 4f       	sbci	r23, 0xFF	; 255

00003736 <__divmodhi4_exit>:
    3736:	08 95       	ret

00003738 <__divmodhi4_neg1>:
    3738:	f6 f7       	brtc	.-4      	; 0x3736 <__divmodhi4_exit>
    373a:	90 95       	com	r25
    373c:	81 95       	neg	r24
    373e:	9f 4f       	sbci	r25, 0xFF	; 255
    3740:	08 95       	ret

00003742 <__udivmodsi4>:
    3742:	a1 e2       	ldi	r26, 0x21	; 33
    3744:	1a 2e       	mov	r1, r26
    3746:	aa 1b       	sub	r26, r26
    3748:	bb 1b       	sub	r27, r27
    374a:	fd 01       	movw	r30, r26
    374c:	0d c0       	rjmp	.+26     	; 0x3768 <__udivmodsi4_ep>

0000374e <__udivmodsi4_loop>:
    374e:	aa 1f       	adc	r26, r26
    3750:	bb 1f       	adc	r27, r27
    3752:	ee 1f       	adc	r30, r30
    3754:	ff 1f       	adc	r31, r31
    3756:	a2 17       	cp	r26, r18
    3758:	b3 07       	cpc	r27, r19
    375a:	e4 07       	cpc	r30, r20
    375c:	f5 07       	cpc	r31, r21
    375e:	20 f0       	brcs	.+8      	; 0x3768 <__udivmodsi4_ep>
    3760:	a2 1b       	sub	r26, r18
    3762:	b3 0b       	sbc	r27, r19
    3764:	e4 0b       	sbc	r30, r20
    3766:	f5 0b       	sbc	r31, r21

00003768 <__udivmodsi4_ep>:
    3768:	66 1f       	adc	r22, r22
    376a:	77 1f       	adc	r23, r23
    376c:	88 1f       	adc	r24, r24
    376e:	99 1f       	adc	r25, r25
    3770:	1a 94       	dec	r1
    3772:	69 f7       	brne	.-38     	; 0x374e <__udivmodsi4_loop>
    3774:	60 95       	com	r22
    3776:	70 95       	com	r23
    3778:	80 95       	com	r24
    377a:	90 95       	com	r25
    377c:	9b 01       	movw	r18, r22
    377e:	ac 01       	movw	r20, r24
    3780:	bd 01       	movw	r22, r26
    3782:	cf 01       	movw	r24, r30
    3784:	08 95       	ret

00003786 <__divmodsi4>:
    3786:	97 fb       	bst	r25, 7
    3788:	09 2e       	mov	r0, r25
    378a:	05 26       	eor	r0, r21
    378c:	0e d0       	rcall	.+28     	; 0x37aa <__divmodsi4_neg1>
    378e:	57 fd       	sbrc	r21, 7
    3790:	04 d0       	rcall	.+8      	; 0x379a <__divmodsi4_neg2>
    3792:	d7 df       	rcall	.-82     	; 0x3742 <__udivmodsi4>
    3794:	0a d0       	rcall	.+20     	; 0x37aa <__divmodsi4_neg1>
    3796:	00 1c       	adc	r0, r0
    3798:	38 f4       	brcc	.+14     	; 0x37a8 <__divmodsi4_exit>

0000379a <__divmodsi4_neg2>:
    379a:	50 95       	com	r21
    379c:	40 95       	com	r20
    379e:	30 95       	com	r19
    37a0:	21 95       	neg	r18
    37a2:	3f 4f       	sbci	r19, 0xFF	; 255
    37a4:	4f 4f       	sbci	r20, 0xFF	; 255
    37a6:	5f 4f       	sbci	r21, 0xFF	; 255

000037a8 <__divmodsi4_exit>:
    37a8:	08 95       	ret

000037aa <__divmodsi4_neg1>:
    37aa:	f6 f7       	brtc	.-4      	; 0x37a8 <__divmodsi4_exit>
    37ac:	90 95       	com	r25
    37ae:	80 95       	com	r24
    37b0:	70 95       	com	r23
    37b2:	61 95       	neg	r22
    37b4:	7f 4f       	sbci	r23, 0xFF	; 255
    37b6:	8f 4f       	sbci	r24, 0xFF	; 255
    37b8:	9f 4f       	sbci	r25, 0xFF	; 255
    37ba:	08 95       	ret

000037bc <__udivmodhi4>:
    37bc:	aa 1b       	sub	r26, r26
    37be:	bb 1b       	sub	r27, r27
    37c0:	51 e1       	ldi	r21, 0x11	; 17
    37c2:	07 c0       	rjmp	.+14     	; 0x37d2 <__udivmodhi4_ep>

000037c4 <__udivmodhi4_loop>:
    37c4:	aa 1f       	adc	r26, r26
    37c6:	bb 1f       	adc	r27, r27
    37c8:	a6 17       	cp	r26, r22
    37ca:	b7 07       	cpc	r27, r23
    37cc:	10 f0       	brcs	.+4      	; 0x37d2 <__udivmodhi4_ep>
    37ce:	a6 1b       	sub	r26, r22
    37d0:	b7 0b       	sbc	r27, r23

000037d2 <__udivmodhi4_ep>:
    37d2:	88 1f       	adc	r24, r24
    37d4:	99 1f       	adc	r25, r25
    37d6:	5a 95       	dec	r21
    37d8:	a9 f7       	brne	.-22     	; 0x37c4 <__udivmodhi4_loop>
    37da:	80 95       	com	r24
    37dc:	90 95       	com	r25
    37de:	bc 01       	movw	r22, r24
    37e0:	cd 01       	movw	r24, r26
    37e2:	08 95       	ret

000037e4 <__ftoa_engine>:
    37e4:	28 30       	cpi	r18, 0x08	; 8
    37e6:	08 f0       	brcs	.+2      	; 0x37ea <__ftoa_engine+0x6>
    37e8:	27 e0       	ldi	r18, 0x07	; 7
    37ea:	33 27       	eor	r19, r19
    37ec:	da 01       	movw	r26, r20
    37ee:	99 0f       	add	r25, r25
    37f0:	31 1d       	adc	r19, r1
    37f2:	87 fd       	sbrc	r24, 7
    37f4:	91 60       	ori	r25, 0x01	; 1
    37f6:	00 96       	adiw	r24, 0x00	; 0
    37f8:	61 05       	cpc	r22, r1
    37fa:	71 05       	cpc	r23, r1
    37fc:	39 f4       	brne	.+14     	; 0x380c <__ftoa_engine+0x28>
    37fe:	32 60       	ori	r19, 0x02	; 2
    3800:	2e 5f       	subi	r18, 0xFE	; 254
    3802:	3d 93       	st	X+, r19
    3804:	30 e3       	ldi	r19, 0x30	; 48
    3806:	2a 95       	dec	r18
    3808:	e1 f7       	brne	.-8      	; 0x3802 <__ftoa_engine+0x1e>
    380a:	08 95       	ret
    380c:	9f 3f       	cpi	r25, 0xFF	; 255
    380e:	30 f0       	brcs	.+12     	; 0x381c <__ftoa_engine+0x38>
    3810:	80 38       	cpi	r24, 0x80	; 128
    3812:	71 05       	cpc	r23, r1
    3814:	61 05       	cpc	r22, r1
    3816:	09 f0       	breq	.+2      	; 0x381a <__ftoa_engine+0x36>
    3818:	3c 5f       	subi	r19, 0xFC	; 252
    381a:	3c 5f       	subi	r19, 0xFC	; 252
    381c:	3d 93       	st	X+, r19
    381e:	91 30       	cpi	r25, 0x01	; 1
    3820:	08 f0       	brcs	.+2      	; 0x3824 <__ftoa_engine+0x40>
    3822:	80 68       	ori	r24, 0x80	; 128
    3824:	91 1d       	adc	r25, r1
    3826:	df 93       	push	r29
    3828:	cf 93       	push	r28
    382a:	1f 93       	push	r17
    382c:	0f 93       	push	r16
    382e:	ff 92       	push	r15
    3830:	ef 92       	push	r14
    3832:	19 2f       	mov	r17, r25
    3834:	98 7f       	andi	r25, 0xF8	; 248
    3836:	96 95       	lsr	r25
    3838:	e9 2f       	mov	r30, r25
    383a:	96 95       	lsr	r25
    383c:	96 95       	lsr	r25
    383e:	e9 0f       	add	r30, r25
    3840:	ff 27       	eor	r31, r31
    3842:	e5 56       	subi	r30, 0x65	; 101
    3844:	fd 4f       	sbci	r31, 0xFD	; 253
    3846:	99 27       	eor	r25, r25
    3848:	33 27       	eor	r19, r19
    384a:	ee 24       	eor	r14, r14
    384c:	ff 24       	eor	r15, r15
    384e:	a7 01       	movw	r20, r14
    3850:	e7 01       	movw	r28, r14
    3852:	05 90       	lpm	r0, Z+
    3854:	08 94       	sec
    3856:	07 94       	ror	r0
    3858:	28 f4       	brcc	.+10     	; 0x3864 <__ftoa_engine+0x80>
    385a:	36 0f       	add	r19, r22
    385c:	e7 1e       	adc	r14, r23
    385e:	f8 1e       	adc	r15, r24
    3860:	49 1f       	adc	r20, r25
    3862:	51 1d       	adc	r21, r1
    3864:	66 0f       	add	r22, r22
    3866:	77 1f       	adc	r23, r23
    3868:	88 1f       	adc	r24, r24
    386a:	99 1f       	adc	r25, r25
    386c:	06 94       	lsr	r0
    386e:	a1 f7       	brne	.-24     	; 0x3858 <__ftoa_engine+0x74>
    3870:	05 90       	lpm	r0, Z+
    3872:	07 94       	ror	r0
    3874:	28 f4       	brcc	.+10     	; 0x3880 <__ftoa_engine+0x9c>
    3876:	e7 0e       	add	r14, r23
    3878:	f8 1e       	adc	r15, r24
    387a:	49 1f       	adc	r20, r25
    387c:	56 1f       	adc	r21, r22
    387e:	c1 1d       	adc	r28, r1
    3880:	77 0f       	add	r23, r23
    3882:	88 1f       	adc	r24, r24
    3884:	99 1f       	adc	r25, r25
    3886:	66 1f       	adc	r22, r22
    3888:	06 94       	lsr	r0
    388a:	a1 f7       	brne	.-24     	; 0x3874 <__ftoa_engine+0x90>
    388c:	05 90       	lpm	r0, Z+
    388e:	07 94       	ror	r0
    3890:	28 f4       	brcc	.+10     	; 0x389c <__ftoa_engine+0xb8>
    3892:	f8 0e       	add	r15, r24
    3894:	49 1f       	adc	r20, r25
    3896:	56 1f       	adc	r21, r22
    3898:	c7 1f       	adc	r28, r23
    389a:	d1 1d       	adc	r29, r1
    389c:	88 0f       	add	r24, r24
    389e:	99 1f       	adc	r25, r25
    38a0:	66 1f       	adc	r22, r22
    38a2:	77 1f       	adc	r23, r23
    38a4:	06 94       	lsr	r0
    38a6:	a1 f7       	brne	.-24     	; 0x3890 <__ftoa_engine+0xac>
    38a8:	05 90       	lpm	r0, Z+
    38aa:	07 94       	ror	r0
    38ac:	20 f4       	brcc	.+8      	; 0x38b6 <__ftoa_engine+0xd2>
    38ae:	49 0f       	add	r20, r25
    38b0:	56 1f       	adc	r21, r22
    38b2:	c7 1f       	adc	r28, r23
    38b4:	d8 1f       	adc	r29, r24
    38b6:	99 0f       	add	r25, r25
    38b8:	66 1f       	adc	r22, r22
    38ba:	77 1f       	adc	r23, r23
    38bc:	88 1f       	adc	r24, r24
    38be:	06 94       	lsr	r0
    38c0:	a9 f7       	brne	.-22     	; 0x38ac <__ftoa_engine+0xc8>
    38c2:	84 91       	lpm	r24, Z+
    38c4:	10 95       	com	r17
    38c6:	17 70       	andi	r17, 0x07	; 7
    38c8:	41 f0       	breq	.+16     	; 0x38da <__ftoa_engine+0xf6>
    38ca:	d6 95       	lsr	r29
    38cc:	c7 95       	ror	r28
    38ce:	57 95       	ror	r21
    38d0:	47 95       	ror	r20
    38d2:	f7 94       	ror	r15
    38d4:	e7 94       	ror	r14
    38d6:	1a 95       	dec	r17
    38d8:	c1 f7       	brne	.-16     	; 0x38ca <__ftoa_engine+0xe6>
    38da:	e1 e4       	ldi	r30, 0x41	; 65
    38dc:	f2 e0       	ldi	r31, 0x02	; 2
    38de:	68 94       	set
    38e0:	15 90       	lpm	r1, Z+
    38e2:	15 91       	lpm	r17, Z+
    38e4:	35 91       	lpm	r19, Z+
    38e6:	65 91       	lpm	r22, Z+
    38e8:	95 91       	lpm	r25, Z+
    38ea:	05 90       	lpm	r0, Z+
    38ec:	7f e2       	ldi	r23, 0x2F	; 47
    38ee:	73 95       	inc	r23
    38f0:	e1 18       	sub	r14, r1
    38f2:	f1 0a       	sbc	r15, r17
    38f4:	43 0b       	sbc	r20, r19
    38f6:	56 0b       	sbc	r21, r22
    38f8:	c9 0b       	sbc	r28, r25
    38fa:	d0 09       	sbc	r29, r0
    38fc:	c0 f7       	brcc	.-16     	; 0x38ee <__ftoa_engine+0x10a>
    38fe:	e1 0c       	add	r14, r1
    3900:	f1 1e       	adc	r15, r17
    3902:	43 1f       	adc	r20, r19
    3904:	56 1f       	adc	r21, r22
    3906:	c9 1f       	adc	r28, r25
    3908:	d0 1d       	adc	r29, r0
    390a:	7e f4       	brtc	.+30     	; 0x392a <__ftoa_engine+0x146>
    390c:	70 33       	cpi	r23, 0x30	; 48
    390e:	11 f4       	brne	.+4      	; 0x3914 <__ftoa_engine+0x130>
    3910:	8a 95       	dec	r24
    3912:	e6 cf       	rjmp	.-52     	; 0x38e0 <__ftoa_engine+0xfc>
    3914:	e8 94       	clt
    3916:	01 50       	subi	r16, 0x01	; 1
    3918:	30 f0       	brcs	.+12     	; 0x3926 <__ftoa_engine+0x142>
    391a:	08 0f       	add	r16, r24
    391c:	0a f4       	brpl	.+2      	; 0x3920 <__ftoa_engine+0x13c>
    391e:	00 27       	eor	r16, r16
    3920:	02 17       	cp	r16, r18
    3922:	08 f4       	brcc	.+2      	; 0x3926 <__ftoa_engine+0x142>
    3924:	20 2f       	mov	r18, r16
    3926:	23 95       	inc	r18
    3928:	02 2f       	mov	r16, r18
    392a:	7a 33       	cpi	r23, 0x3A	; 58
    392c:	28 f0       	brcs	.+10     	; 0x3938 <__ftoa_engine+0x154>
    392e:	79 e3       	ldi	r23, 0x39	; 57
    3930:	7d 93       	st	X+, r23
    3932:	2a 95       	dec	r18
    3934:	e9 f7       	brne	.-6      	; 0x3930 <__ftoa_engine+0x14c>
    3936:	10 c0       	rjmp	.+32     	; 0x3958 <__ftoa_engine+0x174>
    3938:	7d 93       	st	X+, r23
    393a:	2a 95       	dec	r18
    393c:	89 f6       	brne	.-94     	; 0x38e0 <__ftoa_engine+0xfc>
    393e:	06 94       	lsr	r0
    3940:	97 95       	ror	r25
    3942:	67 95       	ror	r22
    3944:	37 95       	ror	r19
    3946:	17 95       	ror	r17
    3948:	17 94       	ror	r1
    394a:	e1 18       	sub	r14, r1
    394c:	f1 0a       	sbc	r15, r17
    394e:	43 0b       	sbc	r20, r19
    3950:	56 0b       	sbc	r21, r22
    3952:	c9 0b       	sbc	r28, r25
    3954:	d0 09       	sbc	r29, r0
    3956:	98 f0       	brcs	.+38     	; 0x397e <__ftoa_engine+0x19a>
    3958:	23 95       	inc	r18
    395a:	7e 91       	ld	r23, -X
    395c:	73 95       	inc	r23
    395e:	7a 33       	cpi	r23, 0x3A	; 58
    3960:	08 f0       	brcs	.+2      	; 0x3964 <__ftoa_engine+0x180>
    3962:	70 e3       	ldi	r23, 0x30	; 48
    3964:	7c 93       	st	X, r23
    3966:	20 13       	cpse	r18, r16
    3968:	b8 f7       	brcc	.-18     	; 0x3958 <__ftoa_engine+0x174>
    396a:	7e 91       	ld	r23, -X
    396c:	70 61       	ori	r23, 0x10	; 16
    396e:	7d 93       	st	X+, r23
    3970:	30 f0       	brcs	.+12     	; 0x397e <__ftoa_engine+0x19a>
    3972:	83 95       	inc	r24
    3974:	71 e3       	ldi	r23, 0x31	; 49
    3976:	7d 93       	st	X+, r23
    3978:	70 e3       	ldi	r23, 0x30	; 48
    397a:	2a 95       	dec	r18
    397c:	e1 f7       	brne	.-8      	; 0x3976 <__ftoa_engine+0x192>
    397e:	11 24       	eor	r1, r1
    3980:	ef 90       	pop	r14
    3982:	ff 90       	pop	r15
    3984:	0f 91       	pop	r16
    3986:	1f 91       	pop	r17
    3988:	cf 91       	pop	r28
    398a:	df 91       	pop	r29
    398c:	99 27       	eor	r25, r25
    398e:	87 fd       	sbrc	r24, 7
    3990:	90 95       	com	r25
    3992:	08 95       	ret

00003994 <strnlen_P>:
    3994:	fc 01       	movw	r30, r24
    3996:	05 90       	lpm	r0, Z+
    3998:	61 50       	subi	r22, 0x01	; 1
    399a:	70 40       	sbci	r23, 0x00	; 0
    399c:	01 10       	cpse	r0, r1
    399e:	d8 f7       	brcc	.-10     	; 0x3996 <strnlen_P+0x2>
    39a0:	80 95       	com	r24
    39a2:	90 95       	com	r25
    39a4:	8e 0f       	add	r24, r30
    39a6:	9f 1f       	adc	r25, r31
    39a8:	08 95       	ret

000039aa <strcpy>:
    39aa:	fb 01       	movw	r30, r22
    39ac:	dc 01       	movw	r26, r24
    39ae:	01 90       	ld	r0, Z+
    39b0:	0d 92       	st	X+, r0
    39b2:	00 20       	and	r0, r0
    39b4:	e1 f7       	brne	.-8      	; 0x39ae <strcpy+0x4>
    39b6:	08 95       	ret

000039b8 <strnlen>:
    39b8:	fc 01       	movw	r30, r24
    39ba:	61 50       	subi	r22, 0x01	; 1
    39bc:	70 40       	sbci	r23, 0x00	; 0
    39be:	01 90       	ld	r0, Z+
    39c0:	01 10       	cpse	r0, r1
    39c2:	d8 f7       	brcc	.-10     	; 0x39ba <strnlen+0x2>
    39c4:	80 95       	com	r24
    39c6:	90 95       	com	r25
    39c8:	8e 0f       	add	r24, r30
    39ca:	9f 1f       	adc	r25, r31
    39cc:	08 95       	ret

000039ce <fputc>:
    39ce:	0f 93       	push	r16
    39d0:	1f 93       	push	r17
    39d2:	cf 93       	push	r28
    39d4:	df 93       	push	r29
    39d6:	8c 01       	movw	r16, r24
    39d8:	eb 01       	movw	r28, r22
    39da:	8b 81       	ldd	r24, Y+3	; 0x03
    39dc:	81 ff       	sbrs	r24, 1
    39de:	1b c0       	rjmp	.+54     	; 0x3a16 <fputc+0x48>
    39e0:	82 ff       	sbrs	r24, 2
    39e2:	0d c0       	rjmp	.+26     	; 0x39fe <fputc+0x30>
    39e4:	2e 81       	ldd	r18, Y+6	; 0x06
    39e6:	3f 81       	ldd	r19, Y+7	; 0x07
    39e8:	8c 81       	ldd	r24, Y+4	; 0x04
    39ea:	9d 81       	ldd	r25, Y+5	; 0x05
    39ec:	28 17       	cp	r18, r24
    39ee:	39 07       	cpc	r19, r25
    39f0:	64 f4       	brge	.+24     	; 0x3a0a <fputc+0x3c>
    39f2:	e8 81       	ld	r30, Y
    39f4:	f9 81       	ldd	r31, Y+1	; 0x01
    39f6:	01 93       	st	Z+, r16
    39f8:	f9 83       	std	Y+1, r31	; 0x01
    39fa:	e8 83       	st	Y, r30
    39fc:	06 c0       	rjmp	.+12     	; 0x3a0a <fputc+0x3c>
    39fe:	e8 85       	ldd	r30, Y+8	; 0x08
    3a00:	f9 85       	ldd	r31, Y+9	; 0x09
    3a02:	80 2f       	mov	r24, r16
    3a04:	09 95       	icall
    3a06:	89 2b       	or	r24, r25
    3a08:	31 f4       	brne	.+12     	; 0x3a16 <fputc+0x48>
    3a0a:	8e 81       	ldd	r24, Y+6	; 0x06
    3a0c:	9f 81       	ldd	r25, Y+7	; 0x07
    3a0e:	01 96       	adiw	r24, 0x01	; 1
    3a10:	9f 83       	std	Y+7, r25	; 0x07
    3a12:	8e 83       	std	Y+6, r24	; 0x06
    3a14:	02 c0       	rjmp	.+4      	; 0x3a1a <fputc+0x4c>
    3a16:	0f ef       	ldi	r16, 0xFF	; 255
    3a18:	1f ef       	ldi	r17, 0xFF	; 255
    3a1a:	c8 01       	movw	r24, r16
    3a1c:	df 91       	pop	r29
    3a1e:	cf 91       	pop	r28
    3a20:	1f 91       	pop	r17
    3a22:	0f 91       	pop	r16
    3a24:	08 95       	ret

00003a26 <sprintf>:
    3a26:	0f 93       	push	r16
    3a28:	1f 93       	push	r17
    3a2a:	df 93       	push	r29
    3a2c:	cf 93       	push	r28
    3a2e:	cd b7       	in	r28, 0x3d	; 61
    3a30:	de b7       	in	r29, 0x3e	; 62
    3a32:	2e 97       	sbiw	r28, 0x0e	; 14
    3a34:	0f b6       	in	r0, 0x3f	; 63
    3a36:	f8 94       	cli
    3a38:	de bf       	out	0x3e, r29	; 62
    3a3a:	0f be       	out	0x3f, r0	; 63
    3a3c:	cd bf       	out	0x3d, r28	; 61
    3a3e:	0d 89       	ldd	r16, Y+21	; 0x15
    3a40:	1e 89       	ldd	r17, Y+22	; 0x16
    3a42:	86 e0       	ldi	r24, 0x06	; 6
    3a44:	8c 83       	std	Y+4, r24	; 0x04
    3a46:	1a 83       	std	Y+2, r17	; 0x02
    3a48:	09 83       	std	Y+1, r16	; 0x01
    3a4a:	8f ef       	ldi	r24, 0xFF	; 255
    3a4c:	9f e7       	ldi	r25, 0x7F	; 127
    3a4e:	9e 83       	std	Y+6, r25	; 0x06
    3a50:	8d 83       	std	Y+5, r24	; 0x05
    3a52:	9e 01       	movw	r18, r28
    3a54:	27 5e       	subi	r18, 0xE7	; 231
    3a56:	3f 4f       	sbci	r19, 0xFF	; 255
    3a58:	ce 01       	movw	r24, r28
    3a5a:	01 96       	adiw	r24, 0x01	; 1
    3a5c:	6f 89       	ldd	r22, Y+23	; 0x17
    3a5e:	78 8d       	ldd	r23, Y+24	; 0x18
    3a60:	a9 01       	movw	r20, r18
    3a62:	0e 94 60 15 	call	0x2ac0	; 0x2ac0 <vfprintf>
    3a66:	2f 81       	ldd	r18, Y+7	; 0x07
    3a68:	38 85       	ldd	r19, Y+8	; 0x08
    3a6a:	02 0f       	add	r16, r18
    3a6c:	13 1f       	adc	r17, r19
    3a6e:	f8 01       	movw	r30, r16
    3a70:	10 82       	st	Z, r1
    3a72:	2e 96       	adiw	r28, 0x0e	; 14
    3a74:	0f b6       	in	r0, 0x3f	; 63
    3a76:	f8 94       	cli
    3a78:	de bf       	out	0x3e, r29	; 62
    3a7a:	0f be       	out	0x3f, r0	; 63
    3a7c:	cd bf       	out	0x3d, r28	; 61
    3a7e:	cf 91       	pop	r28
    3a80:	df 91       	pop	r29
    3a82:	1f 91       	pop	r17
    3a84:	0f 91       	pop	r16
    3a86:	08 95       	ret

00003a88 <__ultoa_invert>:
    3a88:	fa 01       	movw	r30, r20
    3a8a:	aa 27       	eor	r26, r26
    3a8c:	28 30       	cpi	r18, 0x08	; 8
    3a8e:	51 f1       	breq	.+84     	; 0x3ae4 <__ultoa_invert+0x5c>
    3a90:	20 31       	cpi	r18, 0x10	; 16
    3a92:	81 f1       	breq	.+96     	; 0x3af4 <__ultoa_invert+0x6c>
    3a94:	e8 94       	clt
    3a96:	6f 93       	push	r22
    3a98:	6e 7f       	andi	r22, 0xFE	; 254
    3a9a:	6e 5f       	subi	r22, 0xFE	; 254
    3a9c:	7f 4f       	sbci	r23, 0xFF	; 255
    3a9e:	8f 4f       	sbci	r24, 0xFF	; 255
    3aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    3aa2:	af 4f       	sbci	r26, 0xFF	; 255
    3aa4:	b1 e0       	ldi	r27, 0x01	; 1
    3aa6:	3e d0       	rcall	.+124    	; 0x3b24 <__ultoa_invert+0x9c>
    3aa8:	b4 e0       	ldi	r27, 0x04	; 4
    3aaa:	3c d0       	rcall	.+120    	; 0x3b24 <__ultoa_invert+0x9c>
    3aac:	67 0f       	add	r22, r23
    3aae:	78 1f       	adc	r23, r24
    3ab0:	89 1f       	adc	r24, r25
    3ab2:	9a 1f       	adc	r25, r26
    3ab4:	a1 1d       	adc	r26, r1
    3ab6:	68 0f       	add	r22, r24
    3ab8:	79 1f       	adc	r23, r25
    3aba:	8a 1f       	adc	r24, r26
    3abc:	91 1d       	adc	r25, r1
    3abe:	a1 1d       	adc	r26, r1
    3ac0:	6a 0f       	add	r22, r26
    3ac2:	71 1d       	adc	r23, r1
    3ac4:	81 1d       	adc	r24, r1
    3ac6:	91 1d       	adc	r25, r1
    3ac8:	a1 1d       	adc	r26, r1
    3aca:	20 d0       	rcall	.+64     	; 0x3b0c <__ultoa_invert+0x84>
    3acc:	09 f4       	brne	.+2      	; 0x3ad0 <__ultoa_invert+0x48>
    3ace:	68 94       	set
    3ad0:	3f 91       	pop	r19
    3ad2:	2a e0       	ldi	r18, 0x0A	; 10
    3ad4:	26 9f       	mul	r18, r22
    3ad6:	11 24       	eor	r1, r1
    3ad8:	30 19       	sub	r19, r0
    3ada:	30 5d       	subi	r19, 0xD0	; 208
    3adc:	31 93       	st	Z+, r19
    3ade:	de f6       	brtc	.-74     	; 0x3a96 <__ultoa_invert+0xe>
    3ae0:	cf 01       	movw	r24, r30
    3ae2:	08 95       	ret
    3ae4:	46 2f       	mov	r20, r22
    3ae6:	47 70       	andi	r20, 0x07	; 7
    3ae8:	40 5d       	subi	r20, 0xD0	; 208
    3aea:	41 93       	st	Z+, r20
    3aec:	b3 e0       	ldi	r27, 0x03	; 3
    3aee:	0f d0       	rcall	.+30     	; 0x3b0e <__ultoa_invert+0x86>
    3af0:	c9 f7       	brne	.-14     	; 0x3ae4 <__ultoa_invert+0x5c>
    3af2:	f6 cf       	rjmp	.-20     	; 0x3ae0 <__ultoa_invert+0x58>
    3af4:	46 2f       	mov	r20, r22
    3af6:	4f 70       	andi	r20, 0x0F	; 15
    3af8:	40 5d       	subi	r20, 0xD0	; 208
    3afa:	4a 33       	cpi	r20, 0x3A	; 58
    3afc:	18 f0       	brcs	.+6      	; 0x3b04 <__ultoa_invert+0x7c>
    3afe:	49 5d       	subi	r20, 0xD9	; 217
    3b00:	31 fd       	sbrc	r19, 1
    3b02:	40 52       	subi	r20, 0x20	; 32
    3b04:	41 93       	st	Z+, r20
    3b06:	02 d0       	rcall	.+4      	; 0x3b0c <__ultoa_invert+0x84>
    3b08:	a9 f7       	brne	.-22     	; 0x3af4 <__ultoa_invert+0x6c>
    3b0a:	ea cf       	rjmp	.-44     	; 0x3ae0 <__ultoa_invert+0x58>
    3b0c:	b4 e0       	ldi	r27, 0x04	; 4
    3b0e:	a6 95       	lsr	r26
    3b10:	97 95       	ror	r25
    3b12:	87 95       	ror	r24
    3b14:	77 95       	ror	r23
    3b16:	67 95       	ror	r22
    3b18:	ba 95       	dec	r27
    3b1a:	c9 f7       	brne	.-14     	; 0x3b0e <__ultoa_invert+0x86>
    3b1c:	00 97       	sbiw	r24, 0x00	; 0
    3b1e:	61 05       	cpc	r22, r1
    3b20:	71 05       	cpc	r23, r1
    3b22:	08 95       	ret
    3b24:	9b 01       	movw	r18, r22
    3b26:	ac 01       	movw	r20, r24
    3b28:	0a 2e       	mov	r0, r26
    3b2a:	06 94       	lsr	r0
    3b2c:	57 95       	ror	r21
    3b2e:	47 95       	ror	r20
    3b30:	37 95       	ror	r19
    3b32:	27 95       	ror	r18
    3b34:	ba 95       	dec	r27
    3b36:	c9 f7       	brne	.-14     	; 0x3b2a <__ultoa_invert+0xa2>
    3b38:	62 0f       	add	r22, r18
    3b3a:	73 1f       	adc	r23, r19
    3b3c:	84 1f       	adc	r24, r20
    3b3e:	95 1f       	adc	r25, r21
    3b40:	a0 1d       	adc	r26, r0
    3b42:	08 95       	ret

00003b44 <_exit>:
    3b44:	f8 94       	cli

00003b46 <__stop_program>:
    3b46:	ff cf       	rjmp	.-2      	; 0x3b46 <__stop_program>
