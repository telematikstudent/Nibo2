
defaultCProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000037e  00800100  00003958  000039ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003958  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000362  0080047e  0080047e  00003d6a  2**0
                  ALLOC
  3 .stab         000064e0  00000000  00000000  00003d6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000239f  00000000  00000000  0000a24c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__ctors_end>
       4:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
       8:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
       c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      10:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      14:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      18:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      1c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      20:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      24:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      28:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__vector_10>
      2c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      30:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      34:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      38:	0c 94 30 12 	jmp	0x2460	; 0x2460 <__vector_14>
      3c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      40:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      44:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__vector_17>
      48:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__vector_18>
      4c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__vector_19>
      50:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      54:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      58:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      5c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      60:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      64:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      68:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      6c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      70:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      74:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      78:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      7c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      80:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>
      84:	0c 94 79 18 	jmp	0x30f2	; 0x30f2 <__vector_33>
      88:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__bad_interrupt>

0000008c <logo_bits>:
	...
      a8:	00 80 56 01 00 02 00 00 fe ff ff 03 03 00 c0 ff     ..V.............
      b8:	ff ff bf 01 00 e0 0f 00 c4 ff 01 00 e0 03 00 00     ................
      c8:	f0 03 00 e0 7f 00 00 e0 03 00 c0 fc ff ff ff 03     ................
      d8:	00 c0 81 ff ff bf 01 00 80 03 00 00 df 01 00 00     ................
      e8:	03 00 80 fb 00 00 00 07 00 c0 7f 00 00 00 0e 00     ................
      f8:	c0 3f 00 00 00 0c 00 e0 3f 00 00 00 1c 00 f8 0f     .?......?.......
     108:	00 00 00 38 00 dc 0e 00 00 00 70 00 fc 07 00 00     ...8......p.....
     118:	00 e0 00 fe 03 00 00 00 c0 80 ff 01 00 00 00 c0     ................
     128:	c1 ff 00 00 00 00 80 e3 3c 00 00 00 00 00 e7 3f     ........<......?
     138:	00 00 00 00 00 e6 0f 00 00 00 00 00 ee 07 00 00     ................
     148:	00 00 00 dc 07 00 00 00 00 00 b8 03 00 00 00 00     ................
     158:	00 f8 01 00 00 00 00 00 f0 01 00 00 00 00 00 f0     ................
     168:	00 00 00 00 00 00 f0 00 00 00 00 00 00 f0 00 00     ................
     178:	00 00 00 00 f0 00 00 00 00 00 00 f0 00 00 00 00     ................
     188:	00 00 f0 00 00 00 00 00 00 70 00 00 00 00 00 00     .........p......
     198:	e0 00 00 00 00 00 00 f0 00 00 00 00 00 00 f0 00     ................
     1a8:	00 00 00 00 00 70 00 00 00 00 00 00 e0 00 00 00     .....p..........
     1b8:	00 00 00 70 00 00 00 00 00 00 70 00 00 00 00 00     ...p......p.....
     1c8:	00 70 00 00 00 00 00 00 60 00 00 00 00 00 00 70     .p......`......p
     1d8:	00 00 00 00 00 00 70 00 00 00 00 00 00 60 00 00     ......p......`..
     1e8:	00 00 00 00 70 00 00 00 00 00 80 ff 07 00 00 00     ....p...........
     1f8:	00 f0 ff 3f 00 00 00 00 70 f8 7c 00 00 00 00 38     ...?....p.|....8
     208:	fc e1 00 00 00 00 f0 01 f8 00 00 00 00 e0 ff 7f     ................
     218:	00 00 00 00 00 ff 0f 00 00 00 00 00 00 00 00 00     ................
	...

00000230 <bot_lib_revision>:
     230:	31 36 33 00                                         163.

00000234 <bot_lib_version>:
     234:	32 2e 31 31 00                                      2.11.

00000239 <__c.1769>:
     239:	6e 61 6e 00                                         nan.

0000023d <__c.1767>:
     23d:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     24d:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     25d:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     26d:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     27d:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     28d:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     29d:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     2ad:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     2bd:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     2cd:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2dd:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2ed:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2fd:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     30d:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     31d:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     32d:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27 00        .r^"....$...='.

0000033c <__ctors_end>:
     33c:	11 24       	eor	r1, r1
     33e:	1f be       	out	0x3f, r1	; 63
     340:	cf ef       	ldi	r28, 0xFF	; 255
     342:	d0 e1       	ldi	r29, 0x10	; 16
     344:	de bf       	out	0x3e, r29	; 62
     346:	cd bf       	out	0x3d, r28	; 61

00000348 <__do_copy_data>:
     348:	14 e0       	ldi	r17, 0x04	; 4
     34a:	a0 e0       	ldi	r26, 0x00	; 0
     34c:	b1 e0       	ldi	r27, 0x01	; 1
     34e:	e8 e5       	ldi	r30, 0x58	; 88
     350:	f9 e3       	ldi	r31, 0x39	; 57
     352:	00 e0       	ldi	r16, 0x00	; 0
     354:	0b bf       	out	0x3b, r16	; 59
     356:	02 c0       	rjmp	.+4      	; 0x35c <__do_copy_data+0x14>
     358:	07 90       	elpm	r0, Z+
     35a:	0d 92       	st	X+, r0
     35c:	ae 37       	cpi	r26, 0x7E	; 126
     35e:	b1 07       	cpc	r27, r17
     360:	d9 f7       	brne	.-10     	; 0x358 <__do_copy_data+0x10>

00000362 <__do_clear_bss>:
     362:	17 e0       	ldi	r17, 0x07	; 7
     364:	ae e7       	ldi	r26, 0x7E	; 126
     366:	b4 e0       	ldi	r27, 0x04	; 4
     368:	01 c0       	rjmp	.+2      	; 0x36c <.do_clear_bss_start>

0000036a <.do_clear_bss_loop>:
     36a:	1d 92       	st	X+, r1

0000036c <.do_clear_bss_start>:
     36c:	a0 3e       	cpi	r26, 0xE0	; 224
     36e:	b1 07       	cpc	r27, r17
     370:	e1 f7       	brne	.-8      	; 0x36a <.do_clear_bss_loop>
     372:	0e 94 c0 04 	call	0x980	; 0x980 <main>
     376:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <_exit>

0000037a <__bad_interrupt>:
     37a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000037e <niboCom_getCMD>:
 * @return the last command received via xbee or
 * niboCom_cmd_none(0) if no new command was received
 */
uint8_t niboCom_getCMD(){

	uint8_t tmp = lastCMD;
     37e:	80 91 7f 04 	lds	r24, 0x047F
	if(tmp != niboCom_cmd_none){
     382:	88 23       	and	r24, r24
     384:	11 f0       	breq	.+4      	; 0x38a <niboCom_getCMD+0xc>
		lastCMD = niboCom_cmd_none;
     386:	10 92 7f 04 	sts	0x047F, r1
	}

	return tmp;
}
     38a:	08 95       	ret

0000038c <niboCom_getchar>:
/**
 * @brief tries receive a char via xbee. Non-Blocking function.
 * @return a received char or zero if no char was received
 */
uint8_t niboCom_getchar(){
	if(uart0_rxempty()==false) return uart0_getchar();
     38c:	90 91 41 06 	lds	r25, 0x0641
     390:	80 91 42 06 	lds	r24, 0x0642
     394:	98 17       	cp	r25, r24
     396:	11 f4       	brne	.+4      	; 0x39c <niboCom_getchar+0x10>
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	08 95       	ret
     39c:	0e 94 94 02 	call	0x528	; 0x528 <uart0_getchar>
	return 0;
}
     3a0:	08 95       	ret

000003a2 <niboCom_uartInterrupt>:
 * @brief is called on the USART0_RX_vect interrupt,
 * receives char send via xbee and tries to recognize niboCom packets
 */
void niboCom_uartInterrupt(){
	//wait until rx buffer is not empty
	while(uart0_rxempty() == true);
     3a2:	90 91 41 06 	lds	r25, 0x0641
     3a6:	80 91 42 06 	lds	r24, 0x0642
     3aa:	98 17       	cp	r25, r24
     3ac:	21 f1       	breq	.+72     	; 0x3f6 <niboCom_uartInterrupt+0x54>
	uint8_t c = niboCom_getchar();
     3ae:	0e 94 c6 01 	call	0x38c	; 0x38c <niboCom_getchar>
     3b2:	98 2f       	mov	r25, r24

	//wait for startsign
	if(c == 0x68){
     3b4:	88 36       	cpi	r24, 0x68	; 104
     3b6:	21 f4       	brne	.+8      	; 0x3c0 <niboCom_uartInterrupt+0x1e>
		startSignReceived = true;
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	80 93 7e 04 	sts	0x047E, r24
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <niboCom_uartInterrupt+0x26>
	}
	else if(startSignReceived != true){
     3c0:	80 91 7e 04 	lds	r24, 0x047E
     3c4:	88 23       	and	r24, r24
     3c6:	c1 f0       	breq	.+48     	; 0x3f8 <niboCom_uartInterrupt+0x56>
		return;
	}
	//fill buffer
	buffer[bufferPos++] = c;
     3c8:	80 91 80 04 	lds	r24, 0x0480
     3cc:	e8 2f       	mov	r30, r24
     3ce:	f0 e0       	ldi	r31, 0x00	; 0
     3d0:	e4 5c       	subi	r30, 0xC4	; 196
     3d2:	fa 4f       	sbci	r31, 0xFA	; 250
     3d4:	90 83       	st	Z, r25
     3d6:	8f 5f       	subi	r24, 0xFF	; 255
     3d8:	80 93 80 04 	sts	0x0480, r24

	//check wheter the 4th char is the endsign or not
	if(bufferPos == 4){
     3dc:	84 30       	cpi	r24, 0x04	; 4
     3de:	61 f4       	brne	.+24     	; 0x3f8 <niboCom_uartInterrupt+0x56>
		bufferPos = 0;
     3e0:	10 92 80 04 	sts	0x0480, r1
		startSignReceived = false;
     3e4:	10 92 7e 04 	sts	0x047E, r1
		if(c == 0x16){
     3e8:	96 31       	cpi	r25, 0x16	; 22
     3ea:	31 f4       	brne	.+12     	; 0x3f8 <niboCom_uartInterrupt+0x56>
			lastCMD = buffer[1];
     3ec:	80 91 3d 05 	lds	r24, 0x053D
     3f0:	80 93 7f 04 	sts	0x047F, r24
     3f4:	08 95       	ret
     3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <niboCom_uartInterrupt+0x54>
     3f8:	08 95       	ret

000003fa <niboCom_putchar>:

/**
 * @brief sends a char via xbee. Blocking function.
 * @param c char to send
 */
void niboCom_putchar(uint8_t c){
     3fa:	98 2f       	mov	r25, r24
	while(uart0_txfull() == true);
     3fc:	80 91 43 06 	lds	r24, 0x0643
     400:	88 3c       	cpi	r24, 0xC8	; 200
     402:	41 f0       	breq	.+16     	; 0x414 <niboCom_putchar+0x1a>
	uart0_putchar(c);
     404:	89 2f       	mov	r24, r25
     406:	0e 94 ad 02 	call	0x55a	; 0x55a <uart0_putchar>
	delay(2);
     40a:	82 e0       	ldi	r24, 0x02	; 2
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
}
     412:	08 95       	ret
     414:	ff cf       	rjmp	.-2      	; 0x414 <niboCom_putchar+0x1a>

00000416 <niboCom_putPacket>:
 * @brief sends a niboCom packet via xbee
 * @param cmd the command type of the packet
 * @param size the size of the data part of the packet
 * @param datathe data part of the packet
 */
void niboCom_putPacket(uint8_t cmd, uint8_t size, uint8_t *data){
     416:	ef 92       	push	r14
     418:	ff 92       	push	r15
     41a:	0f 93       	push	r16
     41c:	1f 93       	push	r17
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	18 2f       	mov	r17, r24
     424:	06 2f       	mov	r16, r22
     426:	7a 01       	movw	r14, r20
	int i = 0;

	//startsign
	niboCom_putchar(0x68);
     428:	88 e6       	ldi	r24, 0x68	; 104
     42a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>

	niboCom_putchar(cmd);
     42e:	81 2f       	mov	r24, r17
     430:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
	niboCom_putchar(size);
     434:	80 2f       	mov	r24, r16
     436:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
     43a:	c0 e0       	ldi	r28, 0x00	; 0
     43c:	d0 e0       	ldi	r29, 0x00	; 0
	for(i = 0; i < size;i++){
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	07 c0       	rjmp	.+14     	; 0x450 <niboCom_putPacket+0x3a>
		niboCom_putchar(data[i]);
     442:	f7 01       	movw	r30, r14
     444:	ec 0f       	add	r30, r28
     446:	fd 1f       	adc	r31, r29
     448:	80 81       	ld	r24, Z
     44a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
	//startsign
	niboCom_putchar(0x68);

	niboCom_putchar(cmd);
	niboCom_putchar(size);
	for(i = 0; i < size;i++){
     44e:	21 96       	adiw	r28, 0x01	; 1
     450:	c0 17       	cp	r28, r16
     452:	d1 07       	cpc	r29, r17
     454:	b4 f3       	brlt	.-20     	; 0x442 <niboCom_putPacket+0x2c>
		niboCom_putchar(data[i]);
	}
	//endsign
	niboCom_putchar(0x16);
     456:	86 e1       	ldi	r24, 0x16	; 22
     458:	0e 94 fd 01 	call	0x3fa	; 0x3fa <niboCom_putchar>
}
     45c:	df 91       	pop	r29
     45e:	cf 91       	pop	r28
     460:	1f 91       	pop	r17
     462:	0f 91       	pop	r16
     464:	ff 90       	pop	r15
     466:	ef 90       	pop	r14
     468:	08 95       	ret

0000046a <niboCom_putDistance>:

/**
 * @brief sends a Distance packet via xbee
 * @param ticks the number of ticks the nibo moved
 */
void niboCom_putDistance(uint8_t ticks){
     46a:	df 93       	push	r29
     46c:	cf 93       	push	r28
     46e:	0f 92       	push	r0
     470:	cd b7       	in	r28, 0x3d	; 61
     472:	de b7       	in	r29, 0x3e	; 62
     474:	89 83       	std	Y+1, r24	; 0x01
	niboCom_putPacket(niboCom_cmd_nibo_distance,1,&ticks);
     476:	85 e0       	ldi	r24, 0x05	; 5
     478:	61 e0       	ldi	r22, 0x01	; 1
     47a:	ae 01       	movw	r20, r28
     47c:	4f 5f       	subi	r20, 0xFF	; 255
     47e:	5f 4f       	sbci	r21, 0xFF	; 255
     480:	0e 94 0b 02 	call	0x416	; 0x416 <niboCom_putPacket>
}
     484:	0f 90       	pop	r0
     486:	cf 91       	pop	r28
     488:	df 91       	pop	r29
     48a:	08 95       	ret

0000048c <niboCom_putDircetionChange>:
/**
 * @brief sends a DirectionChange packet via xbee
 * @param direction the direction change the nibo made
 */
void niboCom_putDircetionChange(uint8_t direction){
	niboCom_putPacket(direction,0,0);
     48c:	60 e0       	ldi	r22, 0x00	; 0
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	50 e0       	ldi	r21, 0x00	; 0
     492:	0e 94 0b 02 	call	0x416	; 0x416 <niboCom_putPacket>
}
     496:	08 95       	ret

00000498 <niboCom_putNDSDistance>:
/**
 * @brief sends a NDSDistance packet via xbee
 * @param size the number of nds values
 * @param data the nds measurement values
 */
void niboCom_putNDSDistance(uint8_t size, uint8_t *data){
     498:	98 2f       	mov	r25, r24
     49a:	ab 01       	movw	r20, r22
	niboCom_putPacket(niboCom_cmd_nds_distance,size, data);
     49c:	84 e0       	ldi	r24, 0x04	; 4
     49e:	69 2f       	mov	r22, r25
     4a0:	0e 94 0b 02 	call	0x416	; 0x416 <niboCom_putPacket>
}
     4a4:	08 95       	ret

000004a6 <niboCom_putIRDistance>:

/**
 * @brief sends a IRDistance packet via xbee
 * @param data the values of the ir sensors
 */
void niboCom_putIRDistance(uint16_t *data){
     4a6:	df 93       	push	r29
     4a8:	cf 93       	push	r28
     4aa:	00 d0       	rcall	.+0      	; 0x4ac <niboCom_putIRDistance+0x6>
     4ac:	00 d0       	rcall	.+0      	; 0x4ae <niboCom_putIRDistance+0x8>
     4ae:	0f 92       	push	r0
     4b0:	cd b7       	in	r28, 0x3d	; 61
     4b2:	de b7       	in	r29, 0x3e	; 62
     4b4:	dc 01       	movw	r26, r24
     4b6:	fe 01       	movw	r30, r28
     4b8:	31 96       	adiw	r30, 0x01	; 1
	int i = 0;
	uint8_t distance[5];
	//scale values from uint16_t down to uint8_t
	for(i = 0; i < 5;i++){
     4ba:	9e 01       	movw	r18, r28
     4bc:	2a 5f       	subi	r18, 0xFA	; 250
     4be:	3f 4f       	sbci	r19, 0xFF	; 255
		distance[i] = data[i]/256;
     4c0:	11 96       	adiw	r26, 0x01	; 1
     4c2:	8c 91       	ld	r24, X
     4c4:	11 97       	sbiw	r26, 0x01	; 1
     4c6:	81 93       	st	Z+, r24
     4c8:	12 96       	adiw	r26, 0x02	; 2
 */
void niboCom_putIRDistance(uint16_t *data){
	int i = 0;
	uint8_t distance[5];
	//scale values from uint16_t down to uint8_t
	for(i = 0; i < 5;i++){
     4ca:	e2 17       	cp	r30, r18
     4cc:	f3 07       	cpc	r31, r19
     4ce:	c1 f7       	brne	.-16     	; 0x4c0 <niboCom_putIRDistance+0x1a>
		distance[i] = data[i]/256;
	}

	niboCom_putPacket(niboCom_cmd_ir_distance,5, distance);
     4d0:	83 e0       	ldi	r24, 0x03	; 3
     4d2:	65 e0       	ldi	r22, 0x05	; 5
     4d4:	ae 01       	movw	r20, r28
     4d6:	4f 5f       	subi	r20, 0xFF	; 255
     4d8:	5f 4f       	sbci	r21, 0xFF	; 255
     4da:	0e 94 0b 02 	call	0x416	; 0x416 <niboCom_putPacket>
}
     4de:	0f 90       	pop	r0
     4e0:	0f 90       	pop	r0
     4e2:	0f 90       	pop	r0
     4e4:	0f 90       	pop	r0
     4e6:	0f 90       	pop	r0
     4e8:	cf 91       	pop	r28
     4ea:	df 91       	pop	r29
     4ec:	08 95       	ret

000004ee <niboCom_init>:

/**
 *@brief initializes xbee communication
 */
void niboCom_init(){
	uart0_set_baudrate(niboCom_default_baudrate);
     4ee:	80 e8       	ldi	r24, 0x80	; 128
     4f0:	95 e2       	ldi	r25, 0x25	; 37
     4f2:	0e 94 7e 02 	call	0x4fc	; 0x4fc <uart0_set_baudrate>
	uart0_enable();
     4f6:	0e 94 ca 02 	call	0x594	; 0x594 <uart0_enable>
}
     4fa:	08 95       	ret

000004fc <uart0_set_baudrate>:
uint8_t uart0_rxbuf_end;



void uart0_set_baudrate(uint16_t baud) {
  baud = ((uint32_t)(F_CPU))/((uint32_t)baud*16) - 1;
     4fc:	9c 01       	movw	r18, r24
     4fe:	40 e0       	ldi	r20, 0x00	; 0
     500:	50 e0       	ldi	r21, 0x00	; 0
     502:	84 e0       	ldi	r24, 0x04	; 4
     504:	22 0f       	add	r18, r18
     506:	33 1f       	adc	r19, r19
     508:	44 1f       	adc	r20, r20
     50a:	55 1f       	adc	r21, r21
     50c:	8a 95       	dec	r24
     50e:	d1 f7       	brne	.-12     	; 0x504 <uart0_set_baudrate+0x8>
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	74 e2       	ldi	r23, 0x24	; 36
     514:	84 ef       	ldi	r24, 0xF4	; 244
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	0e 94 a9 1a 	call	0x3552	; 0x3552 <__udivmodsi4>
     51c:	21 50       	subi	r18, 0x01	; 1
     51e:	30 40       	sbci	r19, 0x00	; 0
  UBRR0H = (uint8_t)(baud>>8);
     520:	30 93 90 00 	sts	0x0090, r19
  UBRR0L = (uint8_t)(baud&0xff);
     524:	29 b9       	out	0x09, r18	; 9
}
     526:	08 95       	ret

00000528 <uart0_getchar>:


char uart0_getchar() {
  cli();
     528:	f8 94       	cli
  uint8_t result = uart0_rxbuf[uart0_rxbuf_begin];
     52a:	90 91 41 06 	lds	r25, 0x0641
     52e:	e9 2f       	mov	r30, r25
     530:	f0 e0       	ldi	r31, 0x00	; 0
     532:	e9 5b       	subi	r30, 0xB9	; 185
     534:	fa 4f       	sbci	r31, 0xFA	; 250
     536:	e0 81       	ld	r30, Z
  if (uart0_rxbuf_end==UART0_RXBUF_SIZE) {
     538:	80 91 42 06 	lds	r24, 0x0642
     53c:	82 33       	cpi	r24, 0x32	; 50
     53e:	11 f4       	brne	.+4      	; 0x544 <uart0_getchar+0x1c>
    uart0_rxbuf_end=uart0_rxbuf_begin;
     540:	90 93 42 06 	sts	0x0642, r25
  }
  
  if (++uart0_rxbuf_begin>=UART0_RXBUF_SIZE) {
     544:	89 2f       	mov	r24, r25
     546:	8f 5f       	subi	r24, 0xFF	; 255
     548:	80 93 41 06 	sts	0x0641, r24
     54c:	82 33       	cpi	r24, 0x32	; 50
     54e:	10 f0       	brcs	.+4      	; 0x554 <uart0_getchar+0x2c>
    uart0_rxbuf_begin=0;
     550:	10 92 41 06 	sts	0x0641, r1
  }
  sei();
     554:	78 94       	sei
  return result;
}
     556:	8e 2f       	mov	r24, r30
     558:	08 95       	ret

0000055a <uart0_putchar>:


char uart0_putchar(char c) {
     55a:	28 2f       	mov	r18, r24
  cli();
     55c:	f8 94       	cli
  uart0_txbuf[uart0_txbuf_end] = c;
     55e:	80 91 43 06 	lds	r24, 0x0643
     562:	e8 2f       	mov	r30, r24
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	e7 58       	subi	r30, 0x87	; 135
     568:	fa 4f       	sbci	r31, 0xFA	; 250
     56a:	20 83       	st	Z, r18
  if (++uart0_txbuf_end>=UART0_TXBUF_SIZE) {
     56c:	8f 5f       	subi	r24, 0xFF	; 255
     56e:	80 93 43 06 	sts	0x0643, r24
     572:	88 3c       	cpi	r24, 0xC8	; 200
     574:	10 f0       	brcs	.+4      	; 0x57a <uart0_putchar+0x20>
    uart0_txbuf_end=0;
     576:	10 92 43 06 	sts	0x0643, r1
  }
  if (uart0_txbuf_end==uart0_txbuf_begin) {
     57a:	90 91 43 06 	lds	r25, 0x0643
     57e:	80 91 46 05 	lds	r24, 0x0546
     582:	98 17       	cp	r25, r24
     584:	19 f4       	brne	.+6      	; 0x58c <uart0_putchar+0x32>
    uart0_txbuf_end=UART0_TXBUF_SIZE;
     586:	88 ec       	ldi	r24, 0xC8	; 200
     588:	80 93 43 06 	sts	0x0643, r24
  }
  // reenable transmit register empty interrupt
  UCSR0B |= _BV(UDRIE0);
     58c:	55 9a       	sbi	0x0a, 5	; 10
  sei();
     58e:	78 94       	sei
  return c;
}
     590:	82 2f       	mov	r24, r18
     592:	08 95       	ret

00000594 <uart0_enable>:
  return c;
}


void uart0_enable() {
  UCSR0B = _BV(RXCIE0) + _BV(UDRIE0) + _BV(RXEN0) + _BV(TXEN0);
     594:	88 eb       	ldi	r24, 0xB8	; 184
     596:	8a b9       	out	0x0a, r24	; 10
}
     598:	08 95       	ret

0000059a <uart0_disable>:


void uart0_disable() {
  UCSR0B = 0;
     59a:	1a b8       	out	0x0a, r1	; 10
}
     59c:	08 95       	ret

0000059e <__vector_19>:
  }
  niboCom_uartInterrupt();
}


ISR(USART0_UDRE_vect) {
     59e:	1f 92       	push	r1
     5a0:	0f 92       	push	r0
     5a2:	0f b6       	in	r0, 0x3f	; 63
     5a4:	0f 92       	push	r0
     5a6:	0b b6       	in	r0, 0x3b	; 59
     5a8:	0f 92       	push	r0
     5aa:	11 24       	eor	r1, r1
     5ac:	8f 93       	push	r24
     5ae:	9f 93       	push	r25
     5b0:	ef 93       	push	r30
     5b2:	ff 93       	push	r31

/*!
 * Liefert true wenn der Sendepuffer leer ist.
 */
static inline char uart0_txempty() {
  return uart0_txbuf_begin==uart0_txbuf_end;
     5b4:	80 91 46 05 	lds	r24, 0x0546
     5b8:	90 91 43 06 	lds	r25, 0x0643
  if (!uart0_txempty()) {
     5bc:	89 17       	cp	r24, r25
     5be:	91 f0       	breq	.+36     	; 0x5e4 <__vector_19+0x46>
  return c;
}


static char uart0_tx_getchar() {
  uint8_t result = uart0_txbuf[uart0_txbuf_begin];
     5c0:	e8 2f       	mov	r30, r24
     5c2:	f0 e0       	ldi	r31, 0x00	; 0
     5c4:	e7 58       	subi	r30, 0x87	; 135
     5c6:	fa 4f       	sbci	r31, 0xFA	; 250
     5c8:	e0 81       	ld	r30, Z
  if (uart0_txbuf_end==UART0_TXBUF_SIZE) {
     5ca:	98 3c       	cpi	r25, 0xC8	; 200
     5cc:	11 f4       	brne	.+4      	; 0x5d2 <__vector_19+0x34>
    uart0_txbuf_end=uart0_txbuf_begin;
     5ce:	80 93 43 06 	sts	0x0643, r24
  }
  
  if (++uart0_txbuf_begin>=UART0_TXBUF_SIZE) {
     5d2:	8f 5f       	subi	r24, 0xFF	; 255
     5d4:	80 93 46 05 	sts	0x0546, r24
     5d8:	88 3c       	cpi	r24, 0xC8	; 200
     5da:	10 f0       	brcs	.+4      	; 0x5e0 <__vector_19+0x42>
    uart0_txbuf_begin=0;
     5dc:	10 92 46 05 	sts	0x0546, r1
}


ISR(USART0_UDRE_vect) {
  if (!uart0_txempty()) {
    UDR0 = uart0_tx_getchar();
     5e0:	ec b9       	out	0x0c, r30	; 12
     5e2:	01 c0       	rjmp	.+2      	; 0x5e6 <__vector_19+0x48>
  } else {
    UCSR0B &= ~_BV(UDRIE0);
     5e4:	55 98       	cbi	0x0a, 5	; 10
  }
}
     5e6:	ff 91       	pop	r31
     5e8:	ef 91       	pop	r30
     5ea:	9f 91       	pop	r25
     5ec:	8f 91       	pop	r24
     5ee:	0f 90       	pop	r0
     5f0:	0b be       	out	0x3b, r0	; 59
     5f2:	0f 90       	pop	r0
     5f4:	0f be       	out	0x3f, r0	; 63
     5f6:	0f 90       	pop	r0
     5f8:	1f 90       	pop	r1
     5fa:	18 95       	reti

000005fc <__vector_18>:
void uart0_disable() {
  UCSR0B = 0;
}


ISR(USART0_RX_vect) {
     5fc:	1f 92       	push	r1
     5fe:	0f 92       	push	r0
     600:	0f b6       	in	r0, 0x3f	; 63
     602:	0f 92       	push	r0
     604:	0b b6       	in	r0, 0x3b	; 59
     606:	0f 92       	push	r0
     608:	11 24       	eor	r1, r1
     60a:	2f 93       	push	r18
     60c:	3f 93       	push	r19
     60e:	4f 93       	push	r20
     610:	5f 93       	push	r21
     612:	6f 93       	push	r22
     614:	7f 93       	push	r23
     616:	8f 93       	push	r24
     618:	9f 93       	push	r25
     61a:	af 93       	push	r26
     61c:	bf 93       	push	r27
     61e:	ef 93       	push	r30
     620:	ff 93       	push	r31
  uint8_t c = UDR0;
     622:	9c b1       	in	r25, 0x0c	; 12

/*!
 * Liefert true wenn der Empfangspuffer voll ist.
 */
static inline char uart0_rxfull() {
  return uart0_rxbuf_end==UART0_RXBUF_SIZE;
     624:	80 91 42 06 	lds	r24, 0x0642
  if (!uart0_rxfull()) {
     628:	82 33       	cpi	r24, 0x32	; 50
     62a:	a9 f0       	breq	.+42     	; 0x656 <__vector_18+0x5a>
  return result;
}


static char uart0_rx_putchar(char c) {
  uart0_rxbuf[uart0_rxbuf_end] = c;
     62c:	e8 2f       	mov	r30, r24
     62e:	f0 e0       	ldi	r31, 0x00	; 0
     630:	e9 5b       	subi	r30, 0xB9	; 185
     632:	fa 4f       	sbci	r31, 0xFA	; 250
     634:	90 83       	st	Z, r25
  if (++uart0_rxbuf_end>=UART0_RXBUF_SIZE) {
     636:	8f 5f       	subi	r24, 0xFF	; 255
     638:	80 93 42 06 	sts	0x0642, r24
     63c:	82 33       	cpi	r24, 0x32	; 50
     63e:	10 f0       	brcs	.+4      	; 0x644 <__vector_18+0x48>
    uart0_rxbuf_end=0;
     640:	10 92 42 06 	sts	0x0642, r1
  }
  if (uart0_rxbuf_end==uart0_rxbuf_begin) {
     644:	90 91 42 06 	lds	r25, 0x0642
     648:	80 91 41 06 	lds	r24, 0x0641
     64c:	98 17       	cp	r25, r24
     64e:	19 f4       	brne	.+6      	; 0x656 <__vector_18+0x5a>
    uart0_rxbuf_end=UART0_RXBUF_SIZE;
     650:	82 e3       	ldi	r24, 0x32	; 50
     652:	80 93 42 06 	sts	0x0642, r24
ISR(USART0_RX_vect) {
  uint8_t c = UDR0;
  if (!uart0_rxfull()) {
    uart0_rx_putchar(c);
  }
  niboCom_uartInterrupt();
     656:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <niboCom_uartInterrupt>
}
     65a:	ff 91       	pop	r31
     65c:	ef 91       	pop	r30
     65e:	bf 91       	pop	r27
     660:	af 91       	pop	r26
     662:	9f 91       	pop	r25
     664:	8f 91       	pop	r24
     666:	7f 91       	pop	r23
     668:	6f 91       	pop	r22
     66a:	5f 91       	pop	r21
     66c:	4f 91       	pop	r20
     66e:	3f 91       	pop	r19
     670:	2f 91       	pop	r18
     672:	0f 90       	pop	r0
     674:	0b be       	out	0x3b, r0	; 59
     676:	0f 90       	pop	r0
     678:	0f be       	out	0x3f, r0	; 63
     67a:	0f 90       	pop	r0
     67c:	1f 90       	pop	r1
     67e:	18 95       	reti

00000680 <tone>:
 * Spielt einen Ton ab
 * Vor der ersten Benutzung einmal sound_init() aufrufen (deklariert in nibo/sound.h)
 * frequency ist die Frequenz des Tons in Hz (nicht hoeher als 5000 uebergeben!)
 * duration gibt die Wiedergabedauer des Tons an
 */
int tone(int frequency, int duration) {
     680:	0f 93       	push	r16
     682:	1f 93       	push	r17
     684:	8b 01       	movw	r16, r22
	int interval = (50000 / frequency);
     686:	9c 01       	movw	r18, r24
     688:	44 27       	eor	r20, r20
     68a:	37 fd       	sbrc	r19, 7
     68c:	40 95       	com	r20
     68e:	54 2f       	mov	r21, r20
     690:	60 e5       	ldi	r22, 0x50	; 80
     692:	73 ec       	ldi	r23, 0xC3	; 195
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	0e 94 cb 1a 	call	0x3596	; 0x3596 <__divmodsi4>
	duration = duration * 100;
     69c:	84 e6       	ldi	r24, 0x64	; 100
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	08 9f       	mul	r16, r24
     6a2:	b0 01       	movw	r22, r0
     6a4:	09 9f       	mul	r16, r25
     6a6:	70 0d       	add	r23, r0
     6a8:	18 9f       	mul	r17, r24
     6aa:	70 0d       	add	r23, r0
     6ac:	11 24       	eor	r1, r1
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     6ae:	a5 e3       	ldi	r26, 0x35	; 53
     6b0:	23 c0       	rjmp	.+70     	; 0x6f8 <tone+0x78>

	while (duration) {
		int i = interval;
		clear_output_bit(IO_AUDIO);
     6b2:	c4 98       	cbi	0x18, 4	; 24
     6b4:	fb 01       	movw	r30, r22
     6b6:	06 c0       	rjmp	.+12     	; 0x6c4 <tone+0x44>
		while (duration && i) {
			duration--;
     6b8:	31 97       	sbiw	r30, 0x01	; 1
     6ba:	8a 2f       	mov	r24, r26
     6bc:	8a 95       	dec	r24
     6be:	f1 f7       	brne	.-4      	; 0x6bc <tone+0x3c>
	duration = duration * 100;

	while (duration) {
		int i = interval;
		clear_output_bit(IO_AUDIO);
		while (duration && i) {
     6c0:	30 97       	sbiw	r30, 0x00	; 0
     6c2:	41 f0       	breq	.+16     	; 0x6d4 <tone+0x54>
 * Spielt einen Ton ab
 * Vor der ersten Benutzung einmal sound_init() aufrufen (deklariert in nibo/sound.h)
 * frequency ist die Frequenz des Tons in Hz (nicht hoeher als 5000 uebergeben!)
 * duration gibt die Wiedergabedauer des Tons an
 */
int tone(int frequency, int duration) {
     6c4:	a9 01       	movw	r20, r18
	duration = duration * 100;

	while (duration) {
		int i = interval;
		clear_output_bit(IO_AUDIO);
		while (duration && i) {
     6c6:	c9 01       	movw	r24, r18
     6c8:	86 1b       	sub	r24, r22
     6ca:	97 0b       	sbc	r25, r23
     6cc:	8e 0f       	add	r24, r30
     6ce:	9f 1f       	adc	r25, r31
     6d0:	89 2b       	or	r24, r25
     6d2:	91 f7       	brne	.-28     	; 0x6b8 <tone+0x38>
			duration--;
			i--;
			delay_us(10);
		}
		i = interval;
		set_output_bit(IO_AUDIO);
     6d4:	c4 9a       	sbi	0x18, 4	; 24
     6d6:	bf 01       	movw	r22, r30
		while (duration && i) {
     6d8:	4e 1b       	sub	r20, r30
     6da:	5f 0b       	sbc	r21, r31
     6dc:	05 c0       	rjmp	.+10     	; 0x6e8 <tone+0x68>
			duration--;
     6de:	61 50       	subi	r22, 0x01	; 1
     6e0:	70 40       	sbci	r23, 0x00	; 0
     6e2:	8a 2f       	mov	r24, r26
     6e4:	8a 95       	dec	r24
     6e6:	f1 f7       	brne	.-4      	; 0x6e4 <tone+0x64>
			i--;
			delay_us(10);
		}
		i = interval;
		set_output_bit(IO_AUDIO);
		while (duration && i) {
     6e8:	61 15       	cp	r22, r1
     6ea:	71 05       	cpc	r23, r1
     6ec:	29 f0       	breq	.+10     	; 0x6f8 <tone+0x78>
     6ee:	ca 01       	movw	r24, r20
     6f0:	86 0f       	add	r24, r22
     6f2:	97 1f       	adc	r25, r23
     6f4:	89 2b       	or	r24, r25
     6f6:	99 f7       	brne	.-26     	; 0x6de <tone+0x5e>
 */
int tone(int frequency, int duration) {
	int interval = (50000 / frequency);
	duration = duration * 100;

	while (duration) {
     6f8:	61 15       	cp	r22, r1
     6fa:	71 05       	cpc	r23, r1
     6fc:	d1 f6       	brne	.-76     	; 0x6b2 <tone+0x32>
		}

	}

	return 1;
}
     6fe:	81 e0       	ldi	r24, 0x01	; 1
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	1f 91       	pop	r17
     704:	0f 91       	pop	r16
     706:	08 95       	ret

00000708 <ndsScan_init>:

/**
 * @brief initialize nds3 module
 */
void ndsScan_init(){
	i2c_init();
     708:	0e 94 6a 18 	call	0x30d4	; 0x30d4 <i2c_init>
	nds3_move(90);
     70c:	8a e5       	ldi	r24, 0x5A	; 90
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <nds3_move>
}
     714:	08 95       	ret

00000716 <ndsScan>:
/**
 * @brief scans the surrounding of the nibo with the nds3
 * @param degree the angle resolution of the nds3 scan, defines the number of values returned -> (180/degree)+1
 * @return the nds measurement
 */
uint8_t *ndsScan(uint8_t degree) {
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	08 2f       	mov	r16, r24
     71c:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t winkel = 0;
	static uint8_t points[180] = {};

	for(winkel = 0; winkel < 180; winkel = winkel + degree){

		nds3_move(winkel);
     71e:	81 2f       	mov	r24, r17
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <nds3_move>

		//delay for the movement of the servo, more for the first move
		if(winkel == 0){
     726:	11 23       	and	r17, r17
     728:	19 f4       	brne	.+6      	; 0x730 <ndsScan+0x1a>
			delay(900);
     72a:	84 e8       	ldi	r24, 0x84	; 132
     72c:	93 e0       	ldi	r25, 0x03	; 3
     72e:	02 c0       	rjmp	.+4      	; 0x734 <ndsScan+0x1e>
		}else {
			delay(100);
     730:	84 e6       	ldi	r24, 0x64	; 100
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
		}

		//updating the coprozessor, to get the current value
		copro_update();
     738:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <copro_update>
		points[winkel / degree] = nds3_get_dist();
     73c:	0e 94 25 1a 	call	0x344a	; 0x344a <nds3_get_dist>
     740:	28 2f       	mov	r18, r24
     742:	81 2f       	mov	r24, r17
     744:	60 2f       	mov	r22, r16
     746:	0e 94 8a 1a 	call	0x3514	; 0x3514 <__udivmodqi4>
     74a:	e8 2f       	mov	r30, r24
     74c:	f0 e0       	ldi	r31, 0x00	; 0
     74e:	ef 57       	subi	r30, 0x7F	; 127
     750:	fb 4f       	sbci	r31, 0xFB	; 251
     752:	20 83       	st	Z, r18
uint8_t *ndsScan(uint8_t degree) {

	uint8_t winkel = 0;
	static uint8_t points[180] = {};

	for(winkel = 0; winkel < 180; winkel = winkel + degree){
     754:	10 0f       	add	r17, r16
     756:	14 3b       	cpi	r17, 0xB4	; 180
     758:	10 f3       	brcs	.-60     	; 0x71e <ndsScan+0x8>
		//updating the coprozessor, to get the current value
		copro_update();
		points[winkel / degree] = nds3_get_dist();
	}

	nds3_move(90);
     75a:	8a e5       	ldi	r24, 0x5A	; 90
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <nds3_move>
	return points;
}
     762:	81 e8       	ldi	r24, 0x81	; 129
     764:	94 e0       	ldi	r25, 0x04	; 4
     766:	1f 91       	pop	r17
     768:	0f 91       	pop	r16
     76a:	08 95       	ret

0000076c <checkDistance>:

/**
 * @brief checks the values of the IR-sensors and switches the leds depending on the value.
 */
void checkDistance(){
	copro_update();
     76c:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <copro_update>

	//right
	if((copro_distance[0]/256) > IRDistance){leds_set_status(LEDS_RED,7);}
     770:	80 91 b2 06 	lds	r24, 0x06B2
     774:	90 91 b3 06 	lds	r25, 0x06B3
     778:	80 50       	subi	r24, 0x00	; 0
     77a:	97 44       	sbci	r25, 0x47	; 71
     77c:	10 f0       	brcs	.+4      	; 0x782 <checkDistance+0x16>
     77e:	82 e0       	ldi	r24, 0x02	; 2
     780:	01 c0       	rjmp	.+2      	; 0x784 <checkDistance+0x18>
	else{leds_set_status(LEDS_GREEN,7);}
     782:	81 e0       	ldi	r24, 0x01	; 1
     784:	67 e0       	ldi	r22, 0x07	; 7
     786:	0e 94 83 11 	call	0x2306	; 0x2306 <leds_set_status>

	//half right
	if((copro_distance[1]/256) > IRDistance){leds_set_status(LEDS_RED,6);}
     78a:	80 91 b4 06 	lds	r24, 0x06B4
     78e:	90 91 b5 06 	lds	r25, 0x06B5
     792:	80 50       	subi	r24, 0x00	; 0
     794:	97 44       	sbci	r25, 0x47	; 71
     796:	10 f0       	brcs	.+4      	; 0x79c <checkDistance+0x30>
     798:	82 e0       	ldi	r24, 0x02	; 2
     79a:	01 c0       	rjmp	.+2      	; 0x79e <checkDistance+0x32>
	else{leds_set_status(LEDS_GREEN,6);}
     79c:	81 e0       	ldi	r24, 0x01	; 1
     79e:	66 e0       	ldi	r22, 0x06	; 6
     7a0:	0e 94 83 11 	call	0x2306	; 0x2306 <leds_set_status>

	//front
	if((copro_distance[2]/256) > IRDistance){leds_set_status(LEDS_RED,5);leds_set_status(LEDS_RED,4);}
     7a4:	80 91 b6 06 	lds	r24, 0x06B6
     7a8:	90 91 b7 06 	lds	r25, 0x06B7
     7ac:	80 50       	subi	r24, 0x00	; 0
     7ae:	97 44       	sbci	r25, 0x47	; 71
     7b0:	30 f0       	brcs	.+12     	; 0x7be <checkDistance+0x52>
     7b2:	82 e0       	ldi	r24, 0x02	; 2
     7b4:	65 e0       	ldi	r22, 0x05	; 5
     7b6:	0e 94 83 11 	call	0x2306	; 0x2306 <leds_set_status>
     7ba:	82 e0       	ldi	r24, 0x02	; 2
     7bc:	05 c0       	rjmp	.+10     	; 0x7c8 <checkDistance+0x5c>
	else{leds_set_status(LEDS_GREEN,5);leds_set_status(LEDS_GREEN,4);}
     7be:	81 e0       	ldi	r24, 0x01	; 1
     7c0:	65 e0       	ldi	r22, 0x05	; 5
     7c2:	0e 94 83 11 	call	0x2306	; 0x2306 <leds_set_status>
     7c6:	81 e0       	ldi	r24, 0x01	; 1
     7c8:	64 e0       	ldi	r22, 0x04	; 4
     7ca:	0e 94 83 11 	call	0x2306	; 0x2306 <leds_set_status>

	//half left
	if((copro_distance[3]/256) > IRDistance){leds_set_status(LEDS_RED,3);}
     7ce:	80 91 b8 06 	lds	r24, 0x06B8
     7d2:	90 91 b9 06 	lds	r25, 0x06B9
     7d6:	80 50       	subi	r24, 0x00	; 0
     7d8:	97 44       	sbci	r25, 0x47	; 71
     7da:	10 f0       	brcs	.+4      	; 0x7e0 <checkDistance+0x74>
     7dc:	82 e0       	ldi	r24, 0x02	; 2
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <checkDistance+0x76>
	else{leds_set_status(LEDS_GREEN,3);}
     7e0:	81 e0       	ldi	r24, 0x01	; 1
     7e2:	63 e0       	ldi	r22, 0x03	; 3
     7e4:	0e 94 83 11 	call	0x2306	; 0x2306 <leds_set_status>

	//left
	if((copro_distance[4]/256) > IRDistance){leds_set_status(LEDS_RED,2);}
     7e8:	80 91 ba 06 	lds	r24, 0x06BA
     7ec:	90 91 bb 06 	lds	r25, 0x06BB
     7f0:	80 50       	subi	r24, 0x00	; 0
     7f2:	97 44       	sbci	r25, 0x47	; 71
     7f4:	10 f0       	brcs	.+4      	; 0x7fa <checkDistance+0x8e>
     7f6:	82 e0       	ldi	r24, 0x02	; 2
     7f8:	01 c0       	rjmp	.+2      	; 0x7fc <checkDistance+0x90>
	else{leds_set_status(LEDS_GREEN,2);}
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	62 e0       	ldi	r22, 0x02	; 2
     7fe:	0e 94 83 11 	call	0x2306	; 0x2306 <leds_set_status>
     802:	08 95       	ret

00000804 <autoMode>:
}

/**
 * @brief moves the nibo around automagically
 */
void autoMode(){
     804:	1f 93       	push	r17
	uint8_t cmd = niboCom_cmd_none;
    uint8_t driveStatus = drive_all_blocked;
    //try to drive forward
    drive(20);
     806:	84 e1       	ldi	r24, 0x14	; 20
     808:	0e 94 a1 06 	call	0xd42	; 0xd42 <drive>
    //get path for the nibo
    driveStatus = drive_getFreePath();
     80c:	0e 94 f7 05 	call	0xbee	; 0xbee <drive_getFreePath>

    //front is blocked but right is free
    if(driveStatus == drive_right_free){
     810:	82 30       	cpi	r24, 0x02	; 2
     812:	09 f4       	brne	.+2      	; 0x816 <autoMode+0x12>
     814:	44 c0       	rjmp	.+136    	; 0x89e <autoMode+0x9a>
		drive_turn_halfRight();
	}
    //front is blocked but left is free
	else if(driveStatus == drive_left_free){
     816:	83 30       	cpi	r24, 0x03	; 3
     818:	09 f4       	brne	.+2      	; 0x81c <autoMode+0x18>
     81a:	4b c0       	rjmp	.+150    	; 0x8b2 <autoMode+0xae>
		drive_turn_halfLeft();
	}
    //front, right and left side of the nibo are blocked
	else if(driveStatus == drive_all_blocked){
     81c:	84 30       	cpi	r24, 0x04	; 4
     81e:	09 f0       	breq	.+2      	; 0x822 <autoMode+0x1e>
     820:	4a c0       	rjmp	.+148    	; 0x8b6 <autoMode+0xb2>
		//drive backwarts loop
		while(1){

			//check for new commands via xbee
			cmd = niboCom_getCMD();
     822:	0e 94 bf 01 	call	0x37e	; 0x37e <niboCom_getCMD>
     826:	18 2f       	mov	r17, r24
			advDisplay_printVoltage();
     828:	0e 94 95 07 	call	0xf2a	; 0xf2a <advDisplay_printVoltage>

			//check whether mode has to be changed or not
			if(cmd == niboCom_cmd_nibo_man){
     82c:	12 30       	cpi	r17, 0x02	; 2
     82e:	49 f4       	brne	.+18     	; 0x842 <autoMode+0x3e>
				mode = MODE_MAN;
     830:	10 92 37 05 	sts	0x0537, r1
				advDisplay_append_line("-> Manuell");
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	91 e0       	ldi	r25, 0x01	; 1
     838:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
				copro_stop();
     83c:	0e 94 3a 10 	call	0x2074	; 0x2074 <copro_stop>
     840:	3a c0       	rjmp	.+116    	; 0x8b6 <autoMode+0xb2>
				break;
			}
			//Button S3
			else if((PIND & (1 << PD4)) == 0){
     842:	84 99       	sbic	0x10, 4	; 16
     844:	0d c0       	rjmp	.+26     	; 0x860 <autoMode+0x5c>
				mode = MODE_MAN;
     846:	10 92 37 05 	sts	0x0537, r1
				advDisplay_append_line("-> Manuell");
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	91 e0       	ldi	r25, 0x01	; 1
     84e:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
				copro_stop();
     852:	0e 94 3a 10 	call	0x2074	; 0x2074 <copro_stop>
				delay(500);
     856:	84 ef       	ldi	r24, 0xF4	; 244
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
     85e:	2b c0       	rjmp	.+86     	; 0x8b6 <autoMode+0xb2>
				break;
			}
			//command nds scan
			if(cmd == niboCom_cmd_nds_distance){
     860:	14 30       	cpi	r17, 0x04	; 4
     862:	59 f4       	brne	.+22     	; 0x87a <autoMode+0x76>
				nds_scan = ndsScan(NDS_SCAN_DEG);
     864:	82 e0       	ldi	r24, 0x02	; 2
     866:	0e 94 8b 03 	call	0x716	; 0x716 <ndsScan>
     86a:	bc 01       	movw	r22, r24
     86c:	90 93 45 06 	sts	0x0645, r25
     870:	80 93 44 06 	sts	0x0644, r24
				niboCom_putNDSDistance((180/NDS_SCAN_DEG)+1,nds_scan);
     874:	8b e5       	ldi	r24, 0x5B	; 91
     876:	0e 94 4c 02 	call	0x498	; 0x498 <niboCom_putNDSDistance>
			}

			//drive backwarts
			copro_setTargetRel(-10, -10, 10);
     87a:	86 ef       	ldi	r24, 0xF6	; 246
     87c:	9f ef       	ldi	r25, 0xFF	; 255
     87e:	66 ef       	ldi	r22, 0xF6	; 246
     880:	7f ef       	ldi	r23, 0xFF	; 255
     882:	4a e0       	ldi	r20, 0x0A	; 10
     884:	50 e0       	ldi	r21, 0x00	; 0
     886:	0e 94 86 10 	call	0x210c	; 0x210c <copro_setTargetRel>
			delay(1500);
     88a:	8c ed       	ldi	r24, 0xDC	; 220
     88c:	95 e0       	ldi	r25, 0x05	; 5
     88e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>

			//turn right if free
			if(drive_isRightFree()){
     892:	0e 94 d3 05 	call	0xba6	; 0xba6 <drive_isRightFree>
     896:	88 23       	and	r24, r24
     898:	29 f0       	breq	.+10     	; 0x8a4 <autoMode+0xa0>
				copro_stop();
     89a:	0e 94 3a 10 	call	0x2074	; 0x2074 <copro_stop>
				drive_turn_halfRight();
     89e:	0e 94 61 06 	call	0xcc2	; 0xcc2 <drive_turn_halfRight>
     8a2:	09 c0       	rjmp	.+18     	; 0x8b6 <autoMode+0xb2>
				break;
			}
			//turn left if free
			else if(drive_isLeftFree()){
     8a4:	0e 94 e5 05 	call	0xbca	; 0xbca <drive_isLeftFree>
     8a8:	88 23       	and	r24, r24
     8aa:	09 f4       	brne	.+2      	; 0x8ae <autoMode+0xaa>
     8ac:	ba cf       	rjmp	.-140    	; 0x822 <autoMode+0x1e>
				copro_stop();
     8ae:	0e 94 3a 10 	call	0x2074	; 0x2074 <copro_stop>
				drive_turn_halfLeft();
     8b2:	0e 94 81 06 	call	0xd02	; 0xd02 <drive_turn_halfLeft>
				break;
			}
		}
	}
}
     8b6:	1f 91       	pop	r17
     8b8:	08 95       	ret

000008ba <initBot>:
/**
 * @brief initializes the nibo
 */
void initBot() {

	bot_init();
     8ba:	0e 94 6f 11 	call	0x22de	; 0x22de <bot_init>
	sei();
     8be:	78 94       	sei

	//display init
	advDisplay_init();
     8c0:	0e 94 86 07 	call	0xf0c	; 0xf0c <advDisplay_init>
	advDisplay_printVoltage();
     8c4:	0e 94 95 07 	call	0xf2a	; 0xf2a <advDisplay_printVoltage>
	advDisplay_append_line("Martini!");
     8c8:	8b e0       	ldi	r24, 0x0B	; 11
     8ca:	91 e0       	ldi	r25, 0x01	; 1
     8cc:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	advDisplay_append_line("Init...");
     8d0:	84 e1       	ldi	r24, 0x14	; 20
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	delay(1000);
     8d8:	88 ee       	ldi	r24, 0xE8	; 232
     8da:	93 e0       	ldi	r25, 0x03	; 3
     8dc:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>

	//copro init
	spi_init();
     8e0:	0e 94 23 09 	call	0x1246	; 0x1246 <spi_init>
	advDisplay_append_line("Motor      OK");
     8e4:	8c e1       	ldi	r24, 0x1C	; 28
     8e6:	91 e0       	ldi	r25, 0x01	; 1
     8e8:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	delay(500);
     8ec:	84 ef       	ldi	r24, 0xF4	; 244
     8ee:	91 e0       	ldi	r25, 0x01	; 1
     8f0:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>

	//niboCom init
	niboCom_init();
     8f4:	0e 94 77 02 	call	0x4ee	; 0x4ee <niboCom_init>
	advDisplay_append_line("XBEE       OK");
     8f8:	8a e2       	ldi	r24, 0x2A	; 42
     8fa:	91 e0       	ldi	r25, 0x01	; 1
     8fc:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	delay(500);
     900:	84 ef       	ldi	r24, 0xF4	; 244
     902:	91 e0       	ldi	r25, 0x01	; 1
     904:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>

	//sound init
	sound_init();
     908:	0e 94 d4 11 	call	0x23a8	; 0x23a8 <sound_init>
	advDisplay_append_line("Audio      OK");
     90c:	88 e3       	ldi	r24, 0x38	; 56
     90e:	91 e0       	ldi	r25, 0x01	; 1
     910:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	delay(500);
     914:	84 ef       	ldi	r24, 0xF4	; 244
     916:	91 e0       	ldi	r25, 0x01	; 1
     918:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>

	//ir sensor init
	copro_ir_startMeasure();
     91c:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <copro_ir_startMeasure>
	advDisplay_append_line("Sensoren   OK");
     920:	86 e4       	ldi	r24, 0x46	; 70
     922:	91 e0       	ldi	r25, 0x01	; 1
     924:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	delay(500);
     928:	84 ef       	ldi	r24, 0xF4	; 244
     92a:	91 e0       	ldi	r25, 0x01	; 1
     92c:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>

	//nds3 init
	ndsScan_init();
     930:	0e 94 84 03 	call	0x708	; 0x708 <ndsScan_init>
	advDisplay_append_line("NDS        OK");
     934:	84 e5       	ldi	r24, 0x54	; 84
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	delay(500);
     93c:	84 ef       	ldi	r24, 0xF4	; 244
     93e:	91 e0       	ldi	r25, 0x01	; 1
     940:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>

	//led init
	leds_init();
     944:	0e 94 7b 11 	call	0x22f6	; 0x22f6 <leds_init>
	advDisplay_append_line("LEDS       OK");
     948:	82 e6       	ldi	r24, 0x62	; 98
     94a:	91 e0       	ldi	r25, 0x01	; 1
     94c:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	delay(500);
     950:	84 ef       	ldi	r24, 0xF4	; 244
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>

	//Timer-interrupt init
	// set Prescaler 1024
	TCCR2 = ((1<<CS22)|(0<<CS21)|(1<<CS20));
     958:	85 e0       	ldi	r24, 0x05	; 5
     95a:	85 bd       	out	0x25, r24	; 37
	//enable Timer-Overflow-Interrupt
	TIMSK |= (1<<TOIE2);
     95c:	87 b7       	in	r24, 0x37	; 55
     95e:	80 64       	ori	r24, 0x40	; 64
     960:	87 bf       	out	0x37, r24	; 55
	advDisplay_append_line("Interrupts OK");
     962:	80 e7       	ldi	r24, 0x70	; 112
     964:	91 e0       	ldi	r25, 0x01	; 1
     966:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>

	advDisplay_append_line("Bereit!");
     96a:	8e e7       	ldi	r24, 0x7E	; 126
     96c:	91 e0       	ldi	r25, 0x01	; 1
     96e:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
	delay(1000);
     972:	88 ee       	ldi	r24, 0xE8	; 232
     974:	93 e0       	ldi	r25, 0x03	; 3
     976:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
	advDisplay_clear();
     97a:	0e 94 5d 07 	call	0xeba	; 0xeba <advDisplay_clear>
}
     97e:	08 95       	ret

00000980 <main>:

/**
 * @brief the main function contains the main-loop
 */
int main() {
     980:	ff 92       	push	r15
     982:	0f 93       	push	r16
     984:	1f 93       	push	r17

	//current cmd
	uint8_t cmd = niboCom_cmd_none;

	initBot();
     986:	0e 94 5d 04 	call	0x8ba	; 0x8ba <initBot>
			mode = MODE_AUTO;
			advDisplay_append_line("-> Automatik");
		}
		//Button S3
		else if((PIND & (1 << PD4)) == 0){
			mode = MODE_AUTO;
     98a:	ff 24       	eor	r15, r15
     98c:	f3 94       	inc	r15


	while (1) {

		//catch command via xbee
		cmd = niboCom_getCMD();
     98e:	0e 94 bf 01 	call	0x37e	; 0x37e <niboCom_getCMD>
     992:	18 2f       	mov	r17, r24
		advDisplay_printVoltage();
     994:	0e 94 95 07 	call	0xf2a	; 0xf2a <advDisplay_printVoltage>

		//check whether mode has to be changed or not
		if(cmd == niboCom_cmd_nibo_auto){
     998:	11 30       	cpi	r17, 0x01	; 1
     99a:	39 f4       	brne	.+14     	; 0x9aa <main+0x2a>
			mode = MODE_AUTO;
     99c:	10 93 37 05 	sts	0x0537, r17
			advDisplay_append_line("-> Automatik");
     9a0:	86 e8       	ldi	r24, 0x86	; 134
     9a2:	91 e0       	ldi	r25, 0x01	; 1
     9a4:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
     9a8:	39 c0       	rjmp	.+114    	; 0xa1c <main+0x9c>
		}
		//Button S3
		else if((PIND & (1 << PD4)) == 0){
     9aa:	84 99       	sbic	0x10, 4	; 16
     9ac:	37 c0       	rjmp	.+110    	; 0xa1c <main+0x9c>
			mode = MODE_AUTO;
     9ae:	f0 92 37 05 	sts	0x0537, r15
			advDisplay_append_line("-> Automatik");
     9b2:	86 e8       	ldi	r24, 0x86	; 134
     9b4:	91 e0       	ldi	r25, 0x01	; 1
     9b6:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
			delay(500);
     9ba:	84 ef       	ldi	r24, 0xF4	; 244
     9bc:	91 e0       	ldi	r25, 0x01	; 1
     9be:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
     9c2:	2c c0       	rjmp	.+88     	; 0xa1c <main+0x9c>
		}

		//auto mode loop
		while(mode == MODE_AUTO){
			//check for new commands via xbee
			cmd = niboCom_getCMD();
     9c4:	0e 94 bf 01 	call	0x37e	; 0x37e <niboCom_getCMD>
     9c8:	18 2f       	mov	r17, r24
			advDisplay_printVoltage();
     9ca:	0e 94 95 07 	call	0xf2a	; 0xf2a <advDisplay_printVoltage>

			//check whether mode has to be changed or not
			if(cmd == niboCom_cmd_nibo_man){
     9ce:	12 30       	cpi	r17, 0x02	; 2
     9d0:	39 f4       	brne	.+14     	; 0x9e0 <main+0x60>
				mode = MODE_MAN;
     9d2:	10 92 37 05 	sts	0x0537, r1
				advDisplay_append_line("-> Manuell");
     9d6:	80 e0       	ldi	r24, 0x00	; 0
     9d8:	91 e0       	ldi	r25, 0x01	; 1
     9da:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
     9de:	3e c0       	rjmp	.+124    	; 0xa5c <main+0xdc>
				copro_stop();
				break;
			}
			//Button S3
			else if((PIND & (1 << PD4)) == 0){
     9e0:	84 99       	sbic	0x10, 4	; 16
     9e2:	0d c0       	rjmp	.+26     	; 0x9fe <main+0x7e>
				mode = MODE_MAN;
     9e4:	10 92 37 05 	sts	0x0537, r1
				advDisplay_append_line("-> Manuell");
     9e8:	80 e0       	ldi	r24, 0x00	; 0
     9ea:	91 e0       	ldi	r25, 0x01	; 1
     9ec:	0e 94 26 07 	call	0xe4c	; 0xe4c <advDisplay_append_line>
				copro_stop();
     9f0:	0e 94 3a 10 	call	0x2074	; 0x2074 <copro_stop>
				delay(500);
     9f4:	84 ef       	ldi	r24, 0xF4	; 244
     9f6:	91 e0       	ldi	r25, 0x01	; 1
     9f8:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
     9fc:	13 c0       	rjmp	.+38     	; 0xa24 <main+0xa4>
				break;
			}
			//command nds scan
			if(cmd == niboCom_cmd_nds_distance){
     9fe:	14 30       	cpi	r17, 0x04	; 4
     a00:	59 f4       	brne	.+22     	; 0xa18 <main+0x98>
				nds_scan = ndsScan(NDS_SCAN_DEG);
     a02:	82 e0       	ldi	r24, 0x02	; 2
     a04:	0e 94 8b 03 	call	0x716	; 0x716 <ndsScan>
     a08:	bc 01       	movw	r22, r24
     a0a:	90 93 45 06 	sts	0x0645, r25
     a0e:	80 93 44 06 	sts	0x0644, r24
				niboCom_putNDSDistance((180/NDS_SCAN_DEG)+1,nds_scan);
     a12:	8b e5       	ldi	r24, 0x5B	; 91
     a14:	0e 94 4c 02 	call	0x498	; 0x498 <niboCom_putNDSDistance>
			}

			//drive around ;-)
			autoMode();
     a18:	0e 94 02 04 	call	0x804	; 0x804 <autoMode>
			advDisplay_append_line("-> Automatik");
			delay(500);
		}

		//auto mode loop
		while(mode == MODE_AUTO){
     a1c:	80 91 37 05 	lds	r24, 0x0537
     a20:	81 30       	cpi	r24, 0x01	; 1
     a22:	81 f2       	breq	.-96     	; 0x9c4 <main+0x44>


		//manual mode -> command execution

		//command nds scan
		if(cmd == niboCom_cmd_nds_distance){
     a24:	14 30       	cpi	r17, 0x04	; 4
     a26:	61 f4       	brne	.+24     	; 0xa40 <main+0xc0>
			nds_scan = ndsScan(NDS_SCAN_DEG);
     a28:	82 e0       	ldi	r24, 0x02	; 2
     a2a:	0e 94 8b 03 	call	0x716	; 0x716 <ndsScan>
     a2e:	bc 01       	movw	r22, r24
     a30:	90 93 45 06 	sts	0x0645, r25
     a34:	80 93 44 06 	sts	0x0644, r24
			niboCom_putNDSDistance((180/NDS_SCAN_DEG)+1,nds_scan);
     a38:	8b e5       	ldi	r24, 0x5B	; 91
     a3a:	0e 94 4c 02 	call	0x498	; 0x498 <niboCom_putNDSDistance>
     a3e:	a7 cf       	rjmp	.-178    	; 0x98e <main+0xe>
		}
		//command drive until obstacle
		else if(cmd == niboCom_cmd_nibo_drive){
     a40:	16 30       	cpi	r17, 0x06	; 6
     a42:	e9 f4       	brne	.+58     	; 0xa7e <main+0xfe>
			uint8_t driveStatus = drive_front_free;
			//drive loop
			while(driveStatus == drive_front_free){
				//check for new commands via xbee
				cmd = niboCom_getCMD();
     a44:	0e 94 bf 01 	call	0x37e	; 0x37e <niboCom_getCMD>
     a48:	18 2f       	mov	r17, r24
				//command is not stop-command
				if(cmd != niboCom_cmd_nibo_stop){
     a4a:	87 30       	cpi	r24, 0x07	; 7
     a4c:	39 f0       	breq	.+14     	; 0xa5c <main+0xdc>
					driveStatus = drive(20);
     a4e:	84 e1       	ldi	r24, 0x14	; 20
     a50:	0e 94 a1 06 	call	0xd42	; 0xd42 <drive>
     a54:	08 2f       	mov	r16, r24
				else{
					copro_stop();
					break;
				}
				//command nds scan
				if(cmd == niboCom_cmd_nds_distance){
     a56:	14 30       	cpi	r17, 0x04	; 4
     a58:	79 f4       	brne	.+30     	; 0xa78 <main+0xf8>
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <main+0xe2>
				if(cmd != niboCom_cmd_nibo_stop){
					driveStatus = drive(20);
				}
				//command stop
				else{
					copro_stop();
     a5c:	0e 94 3a 10 	call	0x2074	; 0x2074 <copro_stop>
     a60:	96 cf       	rjmp	.-212    	; 0x98e <main+0xe>
					break;
				}
				//command nds scan
				if(cmd == niboCom_cmd_nds_distance){
					nds_scan = ndsScan(NDS_SCAN_DEG);
     a62:	82 e0       	ldi	r24, 0x02	; 2
     a64:	0e 94 8b 03 	call	0x716	; 0x716 <ndsScan>
     a68:	bc 01       	movw	r22, r24
     a6a:	90 93 45 06 	sts	0x0645, r25
     a6e:	80 93 44 06 	sts	0x0644, r24
					niboCom_putNDSDistance((180/NDS_SCAN_DEG)+1,nds_scan);
     a72:	8b e5       	ldi	r24, 0x5B	; 91
     a74:	0e 94 4c 02 	call	0x498	; 0x498 <niboCom_putNDSDistance>
		}
		//command drive until obstacle
		else if(cmd == niboCom_cmd_nibo_drive){
			uint8_t driveStatus = drive_front_free;
			//drive loop
			while(driveStatus == drive_front_free){
     a78:	01 30       	cpi	r16, 0x01	; 1
     a7a:	21 f3       	breq	.-56     	; 0xa44 <main+0xc4>
     a7c:	88 cf       	rjmp	.-240    	; 0x98e <main+0xe>
				}
			}//end drive loop

		}
		//command turn left
		else if(cmd == niboCom_cmd_nibo_left){
     a7e:	1c 30       	cpi	r17, 0x0C	; 12
     a80:	19 f4       	brne	.+6      	; 0xa88 <main+0x108>
			drive_turn_left();
     a82:	0e 94 91 06 	call	0xd22	; 0xd22 <drive_turn_left>
     a86:	83 cf       	rjmp	.-250    	; 0x98e <main+0xe>
		}
		//command turn half left
		else if(cmd == niboCom_cmd_nibo_halfLeft){
     a88:	1b 30       	cpi	r17, 0x0B	; 11
     a8a:	19 f4       	brne	.+6      	; 0xa92 <main+0x112>
			drive_turn_halfLeft();
     a8c:	0e 94 81 06 	call	0xd02	; 0xd02 <drive_turn_halfLeft>
     a90:	7e cf       	rjmp	.-260    	; 0x98e <main+0xe>
		}
		//command turn right
		else if(cmd == niboCom_cmd_nibo_halfRight){
     a92:	1d 30       	cpi	r17, 0x0D	; 13
     a94:	19 f4       	brne	.+6      	; 0xa9c <main+0x11c>
			drive_turn_halfRight();
     a96:	0e 94 61 06 	call	0xcc2	; 0xcc2 <drive_turn_halfRight>
     a9a:	79 cf       	rjmp	.-270    	; 0x98e <main+0xe>
		}
		//command turn half right
		else if(cmd == niboCom_cmd_nibo_right){
     a9c:	1e 30       	cpi	r17, 0x0E	; 14
     a9e:	19 f4       	brne	.+6      	; 0xaa6 <main+0x126>
			drive_turn_right();
     aa0:	0e 94 71 06 	call	0xce2	; 0xce2 <drive_turn_right>
     aa4:	74 cf       	rjmp	.-280    	; 0x98e <main+0xe>
		}
		//command turn around
		else if(cmd == niboCom_cmd_nibo_turn){
     aa6:	1a 30       	cpi	r17, 0x0A	; 10
     aa8:	09 f0       	breq	.+2      	; 0xaac <main+0x12c>
     aaa:	71 cf       	rjmp	.-286    	; 0x98e <main+0xe>
			drive_turn_around();
     aac:	0e 94 51 06 	call	0xca2	; 0xca2 <drive_turn_around>
     ab0:	6e cf       	rjmp	.-292    	; 0x98e <main+0xe>

00000ab2 <__vector_10>:

/**
 * @brief Timer2 interrupt ~60Hz
 */
ISR(TIMER2_OVF_vect)
{
     ab2:	1f 92       	push	r1
     ab4:	0f 92       	push	r0
     ab6:	0f b6       	in	r0, 0x3f	; 63
     ab8:	0f 92       	push	r0
     aba:	0b b6       	in	r0, 0x3b	; 59
     abc:	0f 92       	push	r0
     abe:	11 24       	eor	r1, r1
     ac0:	2f 93       	push	r18
     ac2:	3f 93       	push	r19
     ac4:	4f 93       	push	r20
     ac6:	5f 93       	push	r21
     ac8:	6f 93       	push	r22
     aca:	7f 93       	push	r23
     acc:	8f 93       	push	r24
     ace:	9f 93       	push	r25
     ad0:	af 93       	push	r26
     ad2:	bf 93       	push	r27
     ad4:	ef 93       	push	r30
     ad6:	ff 93       	push	r31
	checkDistance();
     ad8:	0e 94 b6 03 	call	0x76c	; 0x76c <checkDistance>

	//2sec
	if((voltageCheck++) >= 120){
     adc:	80 91 35 05 	lds	r24, 0x0535
     ae0:	90 91 36 05 	lds	r25, 0x0536
     ae4:	01 96       	adiw	r24, 0x01	; 1
     ae6:	90 93 36 05 	sts	0x0536, r25
     aea:	80 93 35 05 	sts	0x0535, r24
     aee:	01 97       	sbiw	r24, 0x01	; 1
     af0:	88 37       	cpi	r24, 0x78	; 120
     af2:	91 05       	cpc	r25, r1
     af4:	44 f1       	brlt	.+80     	; 0xb46 <__vector_10+0x94>
		voltageCheck = 0;
     af6:	10 92 36 05 	sts	0x0536, r1
     afa:	10 92 35 05 	sts	0x0535, r1
		double volt = 0;
		//get currente voltage value
		bot_update();
     afe:	0e 94 67 11 	call	0x22ce	; 0x22ce <bot_update>
		//calculate the voltage from adc-value
		volt = 0.0166 * bot_supply -1.19;
		if( volt <= 8.5){
     b02:	60 91 f0 06 	lds	r22, 0x06F0
     b06:	70 91 f1 06 	lds	r23, 0x06F1
     b0a:	80 e0       	ldi	r24, 0x00	; 0
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	0e 94 53 13 	call	0x26a6	; 0x26a6 <__floatunsisf>
     b12:	29 eb       	ldi	r18, 0xB9	; 185
     b14:	3c ef       	ldi	r19, 0xFC	; 252
     b16:	47 e8       	ldi	r20, 0x87	; 135
     b18:	5c e3       	ldi	r21, 0x3C	; 60
     b1a:	0e 94 05 14 	call	0x280a	; 0x280a <__mulsf3>
     b1e:	2c ee       	ldi	r18, 0xEC	; 236
     b20:	31 e5       	ldi	r19, 0x51	; 81
     b22:	48 e9       	ldi	r20, 0x98	; 152
     b24:	5f e3       	ldi	r21, 0x3F	; 63
     b26:	0e 94 ea 12 	call	0x25d4	; 0x25d4 <__subsf3>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	48 e0       	ldi	r20, 0x08	; 8
     b30:	51 e4       	ldi	r21, 0x41	; 65
     b32:	0e 94 4f 13 	call	0x269e	; 0x269e <__cmpsf2>
     b36:	18 16       	cp	r1, r24
     b38:	34 f0       	brlt	.+12     	; 0xb46 <__vector_10+0x94>
			tone(3000,100);
     b3a:	88 eb       	ldi	r24, 0xB8	; 184
     b3c:	9b e0       	ldi	r25, 0x0B	; 11
     b3e:	64 e6       	ldi	r22, 0x64	; 100
     b40:	70 e0       	ldi	r23, 0x00	; 0
     b42:	0e 94 40 03 	call	0x680	; 0x680 <tone>
		}
	}

}
     b46:	ff 91       	pop	r31
     b48:	ef 91       	pop	r30
     b4a:	bf 91       	pop	r27
     b4c:	af 91       	pop	r26
     b4e:	9f 91       	pop	r25
     b50:	8f 91       	pop	r24
     b52:	7f 91       	pop	r23
     b54:	6f 91       	pop	r22
     b56:	5f 91       	pop	r21
     b58:	4f 91       	pop	r20
     b5a:	3f 91       	pop	r19
     b5c:	2f 91       	pop	r18
     b5e:	0f 90       	pop	r0
     b60:	0b be       	out	0x3b, r0	; 59
     b62:	0f 90       	pop	r0
     b64:	0f be       	out	0x3f, r0	; 63
     b66:	0f 90       	pop	r0
     b68:	1f 90       	pop	r1
     b6a:	18 95       	reti

00000b6c <drive_isFrontFree>:
/**
 * @brief checks wheter the path in front of the nibo is blocked or not
 * @return drive_front_free(1) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isFrontFree(){
	if (copro_distance[1]/256 < IRDistance &&
     b6c:	80 91 b4 06 	lds	r24, 0x06B4
     b70:	90 91 b5 06 	lds	r25, 0x06B5
     b74:	80 50       	subi	r24, 0x00	; 0
     b76:	96 44       	sbci	r25, 0x46	; 70
     b78:	98 f4       	brcc	.+38     	; 0xba0 <drive_isFrontFree+0x34>
     b7a:	80 91 b6 06 	lds	r24, 0x06B6
     b7e:	90 91 b7 06 	lds	r25, 0x06B7
     b82:	80 50       	subi	r24, 0x00	; 0
     b84:	96 44       	sbci	r25, 0x46	; 70
     b86:	60 f4       	brcc	.+24     	; 0xba0 <drive_isFrontFree+0x34>
     b88:	20 e0       	ldi	r18, 0x00	; 0
     b8a:	80 91 b8 06 	lds	r24, 0x06B8
     b8e:	90 91 b9 06 	lds	r25, 0x06B9
     b92:	80 50       	subi	r24, 0x00	; 0
     b94:	96 44       	sbci	r25, 0x46	; 70
     b96:	08 f0       	brcs	.+2      	; 0xb9a <drive_isFrontFree+0x2e>
     b98:	21 e0       	ldi	r18, 0x01	; 1
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	28 27       	eor	r18, r24
     b9e:	01 c0       	rjmp	.+2      	; 0xba2 <drive_isFrontFree+0x36>
     ba0:	20 e0       	ldi	r18, 0x00	; 0
		copro_distance[2]/256 < IRDistance &&
		copro_distance[3]/256 < IRDistance){
		return drive_front_free;
	}
	else return drive_direction_blocked;
}
     ba2:	82 2f       	mov	r24, r18
     ba4:	08 95       	ret

00000ba6 <drive_isRightFree>:
/**
 * @brief checks wheter the path right of the nibo is blocked or not
 * @return drive_right_free(2) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isRightFree(){
	if (copro_distance[0] / 256 < IRDistance && copro_distance[1] / 256 < IRDistance){
     ba6:	80 91 b2 06 	lds	r24, 0x06B2
     baa:	90 91 b3 06 	lds	r25, 0x06B3
     bae:	80 50       	subi	r24, 0x00	; 0
     bb0:	96 44       	sbci	r25, 0x46	; 70
     bb2:	48 f4       	brcc	.+18     	; 0xbc6 <drive_isRightFree+0x20>
     bb4:	80 91 b4 06 	lds	r24, 0x06B4
     bb8:	90 91 b5 06 	lds	r25, 0x06B5
     bbc:	80 50       	subi	r24, 0x00	; 0
     bbe:	96 44       	sbci	r25, 0x46	; 70
     bc0:	10 f4       	brcc	.+4      	; 0xbc6 <drive_isRightFree+0x20>
     bc2:	82 e0       	ldi	r24, 0x02	; 2
     bc4:	08 95       	ret
     bc6:	80 e0       	ldi	r24, 0x00	; 0
				return drive_right_free;
	}
	else return drive_direction_blocked;
}
     bc8:	08 95       	ret

00000bca <drive_isLeftFree>:
/**
 * @brief checks wheter the path left of the nibo is blocked or not
 * @return drive_left_free(3) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isLeftFree(){
	if (copro_distance[4] / 256 < IRDistance && copro_distance[3] / 256 < IRDistance){
     bca:	80 91 ba 06 	lds	r24, 0x06BA
     bce:	90 91 bb 06 	lds	r25, 0x06BB
     bd2:	80 50       	subi	r24, 0x00	; 0
     bd4:	96 44       	sbci	r25, 0x46	; 70
     bd6:	48 f4       	brcc	.+18     	; 0xbea <drive_isLeftFree+0x20>
     bd8:	80 91 b8 06 	lds	r24, 0x06B8
     bdc:	90 91 b9 06 	lds	r25, 0x06B9
     be0:	80 50       	subi	r24, 0x00	; 0
     be2:	96 44       	sbci	r25, 0x46	; 70
     be4:	10 f4       	brcc	.+4      	; 0xbea <drive_isLeftFree+0x20>
     be6:	83 e0       	ldi	r24, 0x03	; 3
     be8:	08 95       	ret
     bea:	80 e0       	ldi	r24, 0x00	; 0
		return drive_left_free;
	}
	else return drive_direction_blocked;
}
     bec:	08 95       	ret

00000bee <drive_getFreePath>:
 * @return drive_front_free(1) or drive_right_free(2) or
 * drive_left_free(3) or drive_front_all_blocked(4).
 */
uint8_t drive_getFreePath(){

	copro_update();
     bee:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <copro_update>
/**
 * @brief checks wheter the path in front of the nibo is blocked or not
 * @return drive_front_free(1) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isFrontFree(){
	if (copro_distance[1]/256 < IRDistance &&
     bf2:	20 91 b4 06 	lds	r18, 0x06B4
     bf6:	30 91 b5 06 	lds	r19, 0x06B5
     bfa:	46 e4       	ldi	r20, 0x46	; 70
     bfc:	20 30       	cpi	r18, 0x00	; 0
     bfe:	34 07       	cpc	r19, r20
     c00:	00 f5       	brcc	.+64     	; 0xc42 <drive_getFreePath+0x54>
     c02:	80 91 b6 06 	lds	r24, 0x06B6
     c06:	90 91 b7 06 	lds	r25, 0x06B7
     c0a:	80 50       	subi	r24, 0x00	; 0
     c0c:	96 44       	sbci	r25, 0x46	; 70
     c0e:	c8 f4       	brcc	.+50     	; 0xc42 <drive_getFreePath+0x54>
     c10:	80 91 b8 06 	lds	r24, 0x06B8
     c14:	90 91 b9 06 	lds	r25, 0x06B9
     c18:	80 50       	subi	r24, 0x00	; 0
     c1a:	96 44       	sbci	r25, 0x46	; 70
     c1c:	90 f4       	brcc	.+36     	; 0xc42 <drive_getFreePath+0x54>
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	08 95       	ret
/**
 * @brief checks wheter the path right of the nibo is blocked or not
 * @return drive_right_free(2) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isRightFree(){
	if (copro_distance[0] / 256 < IRDistance && copro_distance[1] / 256 < IRDistance){
     c22:	20 50       	subi	r18, 0x00	; 0
     c24:	36 44       	sbci	r19, 0x46	; 70
     c26:	a0 f4       	brcc	.+40     	; 0xc50 <drive_getFreePath+0x62>
     c28:	82 e0       	ldi	r24, 0x02	; 2
     c2a:	08 95       	ret
/**
 * @brief checks wheter the path left of the nibo is blocked or not
 * @return drive_left_free(3) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isLeftFree(){
	if (copro_distance[4] / 256 < IRDistance && copro_distance[3] / 256 < IRDistance){
     c2c:	80 91 b8 06 	lds	r24, 0x06B8
     c30:	90 91 b9 06 	lds	r25, 0x06B9
     c34:	80 50       	subi	r24, 0x00	; 0
     c36:	96 44       	sbci	r25, 0x46	; 70
     c38:	10 f4       	brcc	.+4      	; 0xc3e <drive_getFreePath+0x50>
     c3a:	83 e0       	ldi	r24, 0x03	; 3
     c3c:	08 95       	ret
     c3e:	84 e0       	ldi	r24, 0x04	; 4
		return drive_left_free;
	}
	else{
		return drive_all_blocked;
	}
}
     c40:	08 95       	ret
/**
 * @brief checks wheter the path right of the nibo is blocked or not
 * @return drive_right_free(2) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isRightFree(){
	if (copro_distance[0] / 256 < IRDistance && copro_distance[1] / 256 < IRDistance){
     c42:	80 91 b2 06 	lds	r24, 0x06B2
     c46:	90 91 b3 06 	lds	r25, 0x06B3
     c4a:	80 50       	subi	r24, 0x00	; 0
     c4c:	96 44       	sbci	r25, 0x46	; 70
     c4e:	48 f3       	brcs	.-46     	; 0xc22 <drive_getFreePath+0x34>
/**
 * @brief checks wheter the path left of the nibo is blocked or not
 * @return drive_left_free(3) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isLeftFree(){
	if (copro_distance[4] / 256 < IRDistance && copro_distance[3] / 256 < IRDistance){
     c50:	80 91 ba 06 	lds	r24, 0x06BA
     c54:	90 91 bb 06 	lds	r25, 0x06BB
     c58:	80 50       	subi	r24, 0x00	; 0
     c5a:	96 44       	sbci	r25, 0x46	; 70
     c5c:	80 f7       	brcc	.-32     	; 0xc3e <drive_getFreePath+0x50>
     c5e:	e6 cf       	rjmp	.-52     	; 0xc2c <drive_getFreePath+0x3e>

00000c60 <drive_sendIRDistance>:
/**
 * @brief sends the IR-sensor values  via xbee
 * @param ms delay before collection IR-sensor values
 */
void drive_sendIRDistance(int ms){
	delay(ms);
     c60:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
	copro_resetOdometry(0, 0);
     c64:	80 e0       	ldi	r24, 0x00	; 0
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	60 e0       	ldi	r22, 0x00	; 0
     c6a:	70 e0       	ldi	r23, 0x00	; 0
     c6c:	0e 94 b2 10 	call	0x2164	; 0x2164 <copro_resetOdometry>
	copro_update();
     c70:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <copro_update>
	niboCom_putIRDistance(copro_distance);
     c74:	82 eb       	ldi	r24, 0xB2	; 178
     c76:	96 e0       	ldi	r25, 0x06	; 6
     c78:	0e 94 53 02 	call	0x4a6	; 0x4a6 <niboCom_putIRDistance>
}
     c7c:	08 95       	ret

00000c7e <drive_sendTicks>:

/**
 * @brief sends the moved distance of nibo via xbee
 */
void drive_sendTicks(){
	copro_update();
     c7e:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <copro_update>

	if(copro_ticks_l > 0){
     c82:	80 91 ae 06 	lds	r24, 0x06AE
     c86:	90 91 af 06 	lds	r25, 0x06AF
     c8a:	18 16       	cp	r1, r24
     c8c:	19 06       	cpc	r1, r25
     c8e:	14 f4       	brge	.+4      	; 0xc94 <drive_sendTicks+0x16>
		niboCom_putDistance(copro_ticks_l);
     c90:	0e 94 35 02 	call	0x46a	; 0x46a <niboCom_putDistance>
	}
	copro_resetOdometry(0, 0);
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	60 e0       	ldi	r22, 0x00	; 0
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	0e 94 b2 10 	call	0x2164	; 0x2164 <copro_resetOdometry>
}
     ca0:	08 95       	ret

00000ca2 <drive_turn_around>:

/**
 * @brief turns the nibo 180 degree to the right
 */
void drive_turn_around(){
	copro_setTargetRel(53, -53, 10);
     ca2:	85 e3       	ldi	r24, 0x35	; 53
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	6b ec       	ldi	r22, 0xCB	; 203
     ca8:	7f ef       	ldi	r23, 0xFF	; 255
     caa:	4a e0       	ldi	r20, 0x0A	; 10
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	0e 94 86 10 	call	0x210c	; 0x210c <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_turn);
     cb2:	8a e0       	ldi	r24, 0x0A	; 10
     cb4:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	drive_sendIRDistance(4000);
     cb8:	80 ea       	ldi	r24, 0xA0	; 160
     cba:	9f e0       	ldi	r25, 0x0F	; 15
     cbc:	0e 94 30 06 	call	0xc60	; 0xc60 <drive_sendIRDistance>
}
     cc0:	08 95       	ret

00000cc2 <drive_turn_halfRight>:

/**
 * @brief turns the nibo 45 degree to the right
 */
void drive_turn_halfRight(){
	copro_setTargetRel(13, -13, 10);
     cc2:	8d e0       	ldi	r24, 0x0D	; 13
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	63 ef       	ldi	r22, 0xF3	; 243
     cc8:	7f ef       	ldi	r23, 0xFF	; 255
     cca:	4a e0       	ldi	r20, 0x0A	; 10
     ccc:	50 e0       	ldi	r21, 0x00	; 0
     cce:	0e 94 86 10 	call	0x210c	; 0x210c <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_halfRight);
     cd2:	8d e0       	ldi	r24, 0x0D	; 13
     cd4:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	drive_sendIRDistance(2000);
     cd8:	80 ed       	ldi	r24, 0xD0	; 208
     cda:	97 e0       	ldi	r25, 0x07	; 7
     cdc:	0e 94 30 06 	call	0xc60	; 0xc60 <drive_sendIRDistance>
}
     ce0:	08 95       	ret

00000ce2 <drive_turn_right>:

/**
 * @brief turns the nibo 90 degree to the right
 */
void drive_turn_right(){
	copro_setTargetRel(27, -27, 10);
     ce2:	8b e1       	ldi	r24, 0x1B	; 27
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	65 ee       	ldi	r22, 0xE5	; 229
     ce8:	7f ef       	ldi	r23, 0xFF	; 255
     cea:	4a e0       	ldi	r20, 0x0A	; 10
     cec:	50 e0       	ldi	r21, 0x00	; 0
     cee:	0e 94 86 10 	call	0x210c	; 0x210c <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_right);
     cf2:	8e e0       	ldi	r24, 0x0E	; 14
     cf4:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	drive_sendIRDistance(2000);
     cf8:	80 ed       	ldi	r24, 0xD0	; 208
     cfa:	97 e0       	ldi	r25, 0x07	; 7
     cfc:	0e 94 30 06 	call	0xc60	; 0xc60 <drive_sendIRDistance>
}
     d00:	08 95       	ret

00000d02 <drive_turn_halfLeft>:

/**
 * @brief turns the nibo 45 degree to the left
 */
void drive_turn_halfLeft(){
	copro_setTargetRel(-13, 13, 10);
     d02:	83 ef       	ldi	r24, 0xF3	; 243
     d04:	9f ef       	ldi	r25, 0xFF	; 255
     d06:	6d e0       	ldi	r22, 0x0D	; 13
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	4a e0       	ldi	r20, 0x0A	; 10
     d0c:	50 e0       	ldi	r21, 0x00	; 0
     d0e:	0e 94 86 10 	call	0x210c	; 0x210c <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_halfLeft);
     d12:	8b e0       	ldi	r24, 0x0B	; 11
     d14:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	drive_sendIRDistance(2000);
     d18:	80 ed       	ldi	r24, 0xD0	; 208
     d1a:	97 e0       	ldi	r25, 0x07	; 7
     d1c:	0e 94 30 06 	call	0xc60	; 0xc60 <drive_sendIRDistance>
}
     d20:	08 95       	ret

00000d22 <drive_turn_left>:

/**
 * @brief turns the nibo 90 degree to the left
 */
void drive_turn_left(){
	copro_setTargetRel(-27, 27, 10);
     d22:	85 ee       	ldi	r24, 0xE5	; 229
     d24:	9f ef       	ldi	r25, 0xFF	; 255
     d26:	6b e1       	ldi	r22, 0x1B	; 27
     d28:	70 e0       	ldi	r23, 0x00	; 0
     d2a:	4a e0       	ldi	r20, 0x0A	; 10
     d2c:	50 e0       	ldi	r21, 0x00	; 0
     d2e:	0e 94 86 10 	call	0x210c	; 0x210c <copro_setTargetRel>
	niboCom_putDircetionChange(niboCom_cmd_nibo_left);
     d32:	8c e0       	ldi	r24, 0x0C	; 12
     d34:	0e 94 46 02 	call	0x48c	; 0x48c <niboCom_putDircetionChange>
	drive_sendIRDistance(2000);
     d38:	80 ed       	ldi	r24, 0xD0	; 208
     d3a:	97 e0       	ldi	r25, 0x07	; 7
     d3c:	0e 94 30 06 	call	0xc60	; 0xc60 <drive_sendIRDistance>
}
     d40:	08 95       	ret

00000d42 <drive>:
/**
 * @brief moves the nibo forwards if no obstacle blocks the path
 * @param speed the speed the nibo moves in ticks
 * @return drive_front_free(1) or drive_direction_blocked(0) if the path is blocked
 */
uint8_t drive(uint8_t speed){
     d42:	1f 93       	push	r17
     d44:	18 2f       	mov	r17, r24
	uint8_t out = drive_front_free;

	copro_update();
     d46:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <copro_update>
	copro_resetOdometry(0, 0);
     d4a:	80 e0       	ldi	r24, 0x00	; 0
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	60 e0       	ldi	r22, 0x00	; 0
     d50:	70 e0       	ldi	r23, 0x00	; 0
     d52:	0e 94 b2 10 	call	0x2164	; 0x2164 <copro_resetOdometry>
/**
 * @brief checks wheter the path in front of the nibo is blocked or not
 * @return drive_front_free(1) or drive_direction_blocked(0) if path is blocked
 */
uint8_t drive_isFrontFree(){
	if (copro_distance[1]/256 < IRDistance &&
     d56:	80 91 b4 06 	lds	r24, 0x06B4
     d5a:	90 91 b5 06 	lds	r25, 0x06B5
     d5e:	80 50       	subi	r24, 0x00	; 0
     d60:	96 44       	sbci	r25, 0x46	; 70
     d62:	10 f5       	brcc	.+68     	; 0xda8 <drive+0x66>
     d64:	80 91 b6 06 	lds	r24, 0x06B6
     d68:	90 91 b7 06 	lds	r25, 0x06B7
     d6c:	80 50       	subi	r24, 0x00	; 0
     d6e:	96 44       	sbci	r25, 0x46	; 70
     d70:	d8 f4       	brcc	.+54     	; 0xda8 <drive+0x66>
     d72:	80 91 b8 06 	lds	r24, 0x06B8
     d76:	90 91 b9 06 	lds	r25, 0x06B9
     d7a:	80 50       	subi	r24, 0x00	; 0
     d7c:	96 44       	sbci	r25, 0x46	; 70
     d7e:	a0 f4       	brcc	.+40     	; 0xda8 <drive+0x66>

	copro_update();
	copro_resetOdometry(0, 0);

	if(drive_isFrontFree()){
		copro_setSpeed(speed,speed);
     d80:	81 2f       	mov	r24, r17
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	61 2f       	mov	r22, r17
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	0e 94 56 10 	call	0x20ac	; 0x20ac <copro_setSpeed>
     d8c:	11 e0       	ldi	r17, 0x01	; 1
	}else{
		copro_stop();
		out = drive_direction_blocked;
	}
	//transmit the moved distance and the ir sensor values
	delay(100);
     d8e:	84 e6       	ldi	r24, 0x64	; 100
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
	drive_sendTicks();
     d96:	0e 94 3f 06 	call	0xc7e	; 0xc7e <drive_sendTicks>
	drive_sendIRDistance(0);
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	0e 94 30 06 	call	0xc60	; 0xc60 <drive_sendIRDistance>
	return out;
}
     da2:	81 2f       	mov	r24, r17
     da4:	1f 91       	pop	r17
     da6:	08 95       	ret
	copro_resetOdometry(0, 0);

	if(drive_isFrontFree()){
		copro_setSpeed(speed,speed);
	}else{
		copro_stop();
     da8:	0e 94 3a 10 	call	0x2074	; 0x2074 <copro_stop>
     dac:	10 e0       	ldi	r17, 0x00	; 0
     dae:	ef cf       	rjmp	.-34     	; 0xd8e <drive+0x4c>

00000db0 <advDisplay_printTerminal>:
}

/**
 * prints all lines in terminal_text to the display
 */
void advDisplay_printTerminal(){
     db0:	af 92       	push	r10
     db2:	bf 92       	push	r11
     db4:	df 92       	push	r13
     db6:	ef 92       	push	r14
     db8:	ff 92       	push	r15
     dba:	0f 93       	push	r16
     dbc:	1f 93       	push	r17
     dbe:	cf 93       	push	r28
     dc0:	df 93       	push	r29
     dc2:	c0 e0       	ldi	r28, 0x00	; 0
     dc4:	d0 e0       	ldi	r29, 0x00	; 0
     dc6:	dd 24       	eor	r13, r13
		gfx_print_text("                      ");

		//print line
		index = (terminal_head + i)%terminal_lines;
		gfx_move(logo_width,10 + 10*i);
		gfx_print_text(terminal_text[index]);
     dc8:	84 e1       	ldi	r24, 0x14	; 20
     dca:	a8 2e       	mov	r10, r24
     dcc:	b1 2c       	mov	r11, r1
     dce:	2b c0       	rjmp	.+86     	; 0xe26 <advDisplay_printTerminal+0x76>
	int index;

	for(i = 0; i < terminal_count;i++){

		//clear line
		gfx_move(logo_width,10 + 10*i);
     dd0:	7e 01       	movw	r14, r28
     dd2:	08 94       	sec
     dd4:	e1 1c       	adc	r14, r1
     dd6:	f1 1c       	adc	r15, r1
     dd8:	81 e3       	ldi	r24, 0x31	; 49
     dda:	6d 2d       	mov	r22, r13
     ddc:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
		gfx_print_text("                      ");
     de0:	83 e9       	ldi	r24, 0x93	; 147
     de2:	91 e0       	ldi	r25, 0x01	; 1
     de4:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <gfx_print_text>

		//print line
		index = (terminal_head + i)%terminal_lines;
     de8:	80 91 38 05 	lds	r24, 0x0538
     dec:	90 91 39 05 	lds	r25, 0x0539
     df0:	8c 0f       	add	r24, r28
     df2:	9d 1f       	adc	r25, r29
     df4:	65 e0       	ldi	r22, 0x05	; 5
     df6:	70 e0       	ldi	r23, 0x00	; 0
     df8:	0e 94 96 1a 	call	0x352c	; 0x352c <__divmodhi4>
     dfc:	8c 01       	movw	r16, r24
		gfx_move(logo_width,10 + 10*i);
     dfe:	81 e3       	ldi	r24, 0x31	; 49
     e00:	6d 2d       	mov	r22, r13
     e02:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
		gfx_print_text(terminal_text[index]);
     e06:	0a 9d       	mul	r16, r10
     e08:	c0 01       	movw	r24, r0
     e0a:	0b 9d       	mul	r16, r11
     e0c:	90 0d       	add	r25, r0
     e0e:	1a 9d       	mul	r17, r10
     e10:	90 0d       	add	r25, r0
     e12:	11 24       	eor	r1, r1
     e14:	86 52       	subi	r24, 0x26	; 38
     e16:	9e 4f       	sbci	r25, 0xFE	; 254
     e18:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <gfx_print_text>
		delay(10);
     e1c:	8a e0       	ldi	r24, 0x0A	; 10
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
     e24:	e7 01       	movw	r28, r14
     e26:	8a e0       	ldi	r24, 0x0A	; 10
     e28:	d8 0e       	add	r13, r24
 */
void advDisplay_printTerminal(){
	int i;
	int index;

	for(i = 0; i < terminal_count;i++){
     e2a:	80 91 3a 05 	lds	r24, 0x053A
     e2e:	90 91 3b 05 	lds	r25, 0x053B
     e32:	c8 17       	cp	r28, r24
     e34:	d9 07       	cpc	r29, r25
     e36:	64 f2       	brlt	.-104    	; 0xdd0 <advDisplay_printTerminal+0x20>
		gfx_move(logo_width,10 + 10*i);
		gfx_print_text(terminal_text[index]);
		delay(10);
	}

}
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	1f 91       	pop	r17
     e3e:	0f 91       	pop	r16
     e40:	ff 90       	pop	r15
     e42:	ef 90       	pop	r14
     e44:	df 90       	pop	r13
     e46:	bf 90       	pop	r11
     e48:	af 90       	pop	r10
     e4a:	08 95       	ret

00000e4c <advDisplay_append_line>:

/**
 *	@brief appends a line to the advDisplay terminal -> display can show the last #terminal_lines lines
 *	@param txt string to append
 */
void advDisplay_append_line(char *txt){
     e4c:	fc 01       	movw	r30, r24

	//calculate index for the new line in terminal_text
	int index = (terminal_head + terminal_count)%terminal_lines;

	//copy the line into terminal_text array at calculated index
	strcpy(terminal_text[index], txt);
     e4e:	80 91 3a 05 	lds	r24, 0x053A
     e52:	90 91 3b 05 	lds	r25, 0x053B
     e56:	20 91 38 05 	lds	r18, 0x0538
     e5a:	30 91 39 05 	lds	r19, 0x0539
     e5e:	82 0f       	add	r24, r18
     e60:	93 1f       	adc	r25, r19
     e62:	65 e0       	ldi	r22, 0x05	; 5
     e64:	70 e0       	ldi	r23, 0x00	; 0
     e66:	0e 94 96 1a 	call	0x352c	; 0x352c <__divmodhi4>
     e6a:	24 e1       	ldi	r18, 0x14	; 20
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	ac 01       	movw	r20, r24
     e70:	42 9f       	mul	r20, r18
     e72:	c0 01       	movw	r24, r0
     e74:	43 9f       	mul	r20, r19
     e76:	90 0d       	add	r25, r0
     e78:	52 9f       	mul	r21, r18
     e7a:	90 0d       	add	r25, r0
     e7c:	11 24       	eor	r1, r1
     e7e:	86 52       	subi	r24, 0x26	; 38
     e80:	9e 4f       	sbci	r25, 0xFE	; 254
     e82:	bf 01       	movw	r22, r30
     e84:	0e 94 dd 1b 	call	0x37ba	; 0x37ba <strcpy>

	if(terminal_count < 5){
     e88:	80 91 3a 05 	lds	r24, 0x053A
     e8c:	90 91 3b 05 	lds	r25, 0x053B
     e90:	85 30       	cpi	r24, 0x05	; 5
     e92:	91 05       	cpc	r25, r1
     e94:	34 f4       	brge	.+12     	; 0xea2 <advDisplay_append_line+0x56>
		terminal_count++;
     e96:	01 96       	adiw	r24, 0x01	; 1
     e98:	90 93 3b 05 	sts	0x053B, r25
     e9c:	80 93 3a 05 	sts	0x053A, r24
     ea0:	09 c0       	rjmp	.+18     	; 0xeb4 <advDisplay_append_line+0x68>
	}
	else{
		terminal_head = (terminal_head++)%terminal_lines;
     ea2:	80 91 38 05 	lds	r24, 0x0538
     ea6:	90 91 39 05 	lds	r25, 0x0539
     eaa:	01 96       	adiw	r24, 0x01	; 1
     eac:	90 93 39 05 	sts	0x0539, r25
     eb0:	80 93 38 05 	sts	0x0538, r24
	}
	//refresh the terminal output on the display
	advDisplay_printTerminal();
     eb4:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <advDisplay_printTerminal>
}
     eb8:	08 95       	ret

00000eba <advDisplay_clear>:
}

/**
 *	@brief clears the terminal area of the display
 */
void advDisplay_clear(){
     eba:	1f 93       	push	r17
     ebc:	cf 93       	push	r28
     ebe:	df 93       	push	r29

	int i = 0;
	//stop interrupts
	cli();
     ec0:	f8 94       	cli
     ec2:	1a e0       	ldi	r17, 0x0A	; 10

	//clear with whitespaces
	for(i = 10; i <= 50; i = i +10){
		gfx_move(logo_width, i);
     ec4:	81 e3       	ldi	r24, 0x31	; 49
     ec6:	61 2f       	mov	r22, r17
     ec8:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
		gfx_print_text("             ");
     ecc:	8a ea       	ldi	r24, 0xAA	; 170
     ece:	91 e0       	ldi	r25, 0x01	; 1
     ed0:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <gfx_print_text>
     ed4:	16 5f       	subi	r17, 0xF6	; 246
	int i = 0;
	//stop interrupts
	cli();

	//clear with whitespaces
	for(i = 10; i <= 50; i = i +10){
     ed6:	1c 33       	cpi	r17, 0x3C	; 60
     ed8:	a9 f7       	brne	.-22     	; 0xec4 <advDisplay_clear+0xa>
     eda:	ca ed       	ldi	r28, 0xDA	; 218
     edc:	d1 e0       	ldi	r29, 0x01	; 1
		gfx_move(logo_width, i);
		gfx_print_text("             ");
	}

	for(i = 0; i < terminal_lines; i++){
		strcpy(terminal_text[i],"                    ");
     ede:	ce 01       	movw	r24, r28
     ee0:	68 eb       	ldi	r22, 0xB8	; 184
     ee2:	71 e0       	ldi	r23, 0x01	; 1
     ee4:	0e 94 dd 1b 	call	0x37ba	; 0x37ba <strcpy>
     ee8:	64 96       	adiw	r28, 0x14	; 20
	for(i = 10; i <= 50; i = i +10){
		gfx_move(logo_width, i);
		gfx_print_text("             ");
	}

	for(i = 0; i < terminal_lines; i++){
     eea:	82 e0       	ldi	r24, 0x02	; 2
     eec:	ce 33       	cpi	r28, 0x3E	; 62
     eee:	d8 07       	cpc	r29, r24
     ef0:	b1 f7       	brne	.-20     	; 0xede <advDisplay_clear+0x24>
		strcpy(terminal_text[i],"                    ");
	}

	terminal_head = 0;
     ef2:	10 92 39 05 	sts	0x0539, r1
     ef6:	10 92 38 05 	sts	0x0538, r1
	terminal_count = 0;
     efa:	10 92 3b 05 	sts	0x053B, r1
     efe:	10 92 3a 05 	sts	0x053A, r1

	//enable interrupts
	sei();
     f02:	78 94       	sei
}
     f04:	df 91       	pop	r29
     f06:	cf 91       	pop	r28
     f08:	1f 91       	pop	r17
     f0a:	08 95       	ret

00000f0c <advDisplay_init>:
/**
 *	@brief initializes the advanced Display library
 */
void advDisplay_init(){
	//init diplay an graphics lib
	display_init();
     f0c:	0e 94 9e 08 	call	0x113c	; 0x113c <display_init>
	gfx_init();
     f10:	0e 94 bd 0a 	call	0x157a	; 0x157a <gfx_init>

	//move to top left corner and draw logo
	gfx_move(0,0);
     f14:	80 e0       	ldi	r24, 0x00	; 0
     f16:	60 e0       	ldi	r22, 0x00	; 0
     f18:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
	gfx_draw_xbm_P(logo_width, logo_height, (PGM_P) logo_bits);
     f1c:	81 e3       	ldi	r24, 0x31	; 49
     f1e:	6c e3       	ldi	r22, 0x3C	; 60
     f20:	4c e8       	ldi	r20, 0x8C	; 140
     f22:	50 e0       	ldi	r21, 0x00	; 0
     f24:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <gfx_draw_xbm_P>
}
     f28:	08 95       	ret

00000f2a <advDisplay_printVoltage>:
int terminal_count = 0;

/**
 * @brief prints the current Voltage on the display
 */
void advDisplay_printVoltage(){
     f2a:	ef 92       	push	r14
     f2c:	ff 92       	push	r15
     f2e:	0f 93       	push	r16
     f30:	1f 93       	push	r17
     f32:	df 93       	push	r29
     f34:	cf 93       	push	r28
     f36:	cd b7       	in	r28, 0x3d	; 61
     f38:	de b7       	in	r29, 0x3e	; 62
     f3a:	64 97       	sbiw	r28, 0x14	; 20
     f3c:	0f b6       	in	r0, 0x3f	; 63
     f3e:	f8 94       	cli
     f40:	de bf       	out	0x3e, r29	; 62
     f42:	0f be       	out	0x3f, r0	; 63
     f44:	cd bf       	out	0x3d, r28	; 61
		char output[20] = "";
     f46:	19 82       	std	Y+1, r1	; 0x01
     f48:	1a 82       	std	Y+2, r1	; 0x02
     f4a:	1b 82       	std	Y+3, r1	; 0x03
     f4c:	1c 82       	std	Y+4, r1	; 0x04
     f4e:	fe 01       	movw	r30, r28
     f50:	35 96       	adiw	r30, 0x05	; 5
     f52:	80 e1       	ldi	r24, 0x10	; 16
     f54:	df 01       	movw	r26, r30
     f56:	1d 92       	st	X+, r1
     f58:	8a 95       	dec	r24
     f5a:	e9 f7       	brne	.-6      	; 0xf56 <advDisplay_printVoltage+0x2c>
		double volt = 0;

		//get currente voltage value
		bot_update();
     f5c:	0e 94 67 11 	call	0x22ce	; 0x22ce <bot_update>
		//calculate the voltage from adc-value
		volt = 0.0166 * bot_supply -1.19;
		//concat output string
		sprintf(output, "VCC: %2.1f V", volt);
     f60:	ed b7       	in	r30, 0x3d	; 61
     f62:	fe b7       	in	r31, 0x3e	; 62
     f64:	38 97       	sbiw	r30, 0x08	; 8
     f66:	0f b6       	in	r0, 0x3f	; 63
     f68:	f8 94       	cli
     f6a:	fe bf       	out	0x3e, r31	; 62
     f6c:	0f be       	out	0x3f, r0	; 63
     f6e:	ed bf       	out	0x3d, r30	; 61
     f70:	0d b7       	in	r16, 0x3d	; 61
     f72:	1e b7       	in	r17, 0x3e	; 62
     f74:	0f 5f       	subi	r16, 0xFF	; 255
     f76:	1f 4f       	sbci	r17, 0xFF	; 255
     f78:	7e 01       	movw	r14, r28
     f7a:	08 94       	sec
     f7c:	e1 1c       	adc	r14, r1
     f7e:	f1 1c       	adc	r15, r1
     f80:	f2 82       	std	Z+2, r15	; 0x02
     f82:	e1 82       	std	Z+1, r14	; 0x01
     f84:	8d ec       	ldi	r24, 0xCD	; 205
     f86:	91 e0       	ldi	r25, 0x01	; 1
     f88:	d8 01       	movw	r26, r16
     f8a:	13 96       	adiw	r26, 0x03	; 3
     f8c:	9c 93       	st	X, r25
     f8e:	8e 93       	st	-X, r24
     f90:	12 97       	sbiw	r26, 0x02	; 2
     f92:	60 91 f0 06 	lds	r22, 0x06F0
     f96:	70 91 f1 06 	lds	r23, 0x06F1
     f9a:	80 e0       	ldi	r24, 0x00	; 0
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	0e 94 53 13 	call	0x26a6	; 0x26a6 <__floatunsisf>
     fa2:	29 eb       	ldi	r18, 0xB9	; 185
     fa4:	3c ef       	ldi	r19, 0xFC	; 252
     fa6:	47 e8       	ldi	r20, 0x87	; 135
     fa8:	5c e3       	ldi	r21, 0x3C	; 60
     faa:	0e 94 05 14 	call	0x280a	; 0x280a <__mulsf3>
     fae:	2c ee       	ldi	r18, 0xEC	; 236
     fb0:	31 e5       	ldi	r19, 0x51	; 81
     fb2:	48 e9       	ldi	r20, 0x98	; 152
     fb4:	5f e3       	ldi	r21, 0x3F	; 63
     fb6:	0e 94 ea 12 	call	0x25d4	; 0x25d4 <__subsf3>
     fba:	f8 01       	movw	r30, r16
     fbc:	64 83       	std	Z+4, r22	; 0x04
     fbe:	75 83       	std	Z+5, r23	; 0x05
     fc0:	86 83       	std	Z+6, r24	; 0x06
     fc2:	97 83       	std	Z+7, r25	; 0x07
     fc4:	0e 94 1b 1c 	call	0x3836	; 0x3836 <sprintf>

		//move to the position on the display where to write
		gfx_move(logo_width,0);
     fc8:	8d b7       	in	r24, 0x3d	; 61
     fca:	9e b7       	in	r25, 0x3e	; 62
     fcc:	08 96       	adiw	r24, 0x08	; 8
     fce:	0f b6       	in	r0, 0x3f	; 63
     fd0:	f8 94       	cli
     fd2:	9e bf       	out	0x3e, r25	; 62
     fd4:	0f be       	out	0x3f, r0	; 63
     fd6:	8d bf       	out	0x3d, r24	; 61
     fd8:	81 e3       	ldi	r24, 0x31	; 49
     fda:	60 e0       	ldi	r22, 0x00	; 0
     fdc:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>

		//draw text
		gfx_print_text(output);
     fe0:	c7 01       	movw	r24, r14
     fe2:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <gfx_print_text>
}
     fe6:	64 96       	adiw	r28, 0x14	; 20
     fe8:	0f b6       	in	r0, 0x3f	; 63
     fea:	f8 94       	cli
     fec:	de bf       	out	0x3e, r29	; 62
     fee:	0f be       	out	0x3f, r0	; 63
     ff0:	cd bf       	out	0x3d, r28	; 61
     ff2:	cf 91       	pop	r28
     ff4:	df 91       	pop	r29
     ff6:	1f 91       	pop	r17
     ff8:	0f 91       	pop	r16
     ffa:	ff 90       	pop	r15
     ffc:	ef 90       	pop	r14
     ffe:	08 95       	ret

00001000 <display_write>:
    1000:	90 91 65 00 	lds	r25, 0x0065
    1004:	28 2f       	mov	r18, r24
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	80 e0       	ldi	r24, 0x00	; 0
    100a:	a9 01       	movw	r20, r18
    100c:	41 70       	andi	r20, 0x01	; 1
    100e:	50 70       	andi	r21, 0x00	; 0
    1010:	20 ff       	sbrs	r18, 0
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	9e 7f       	andi	r25, 0xFE	; 254
    1016:	98 2b       	or	r25, r24
    1018:	90 93 65 00 	sts	0x0065, r25
    101c:	80 91 65 00 	lds	r24, 0x0065
    1020:	41 15       	cp	r20, r1
    1022:	51 05       	cpc	r21, r1
    1024:	11 f4       	brne	.+4      	; 0x102a <display_write+0x2a>
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	01 c0       	rjmp	.+2      	; 0x102c <display_write+0x2c>
    102a:	92 e0       	ldi	r25, 0x02	; 2
    102c:	8d 7f       	andi	r24, 0xFD	; 253
    102e:	89 2b       	or	r24, r25
    1030:	80 93 65 00 	sts	0x0065, r24
    1034:	80 91 65 00 	lds	r24, 0x0065
    1038:	21 fd       	sbrc	r18, 1
    103a:	02 c0       	rjmp	.+4      	; 0x1040 <display_write+0x40>
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	01 c0       	rjmp	.+2      	; 0x1042 <display_write+0x42>
    1040:	98 e0       	ldi	r25, 0x08	; 8
    1042:	87 7f       	andi	r24, 0xF7	; 247
    1044:	89 2b       	or	r24, r25
    1046:	80 93 65 00 	sts	0x0065, r24
    104a:	80 91 65 00 	lds	r24, 0x0065
    104e:	8f 7e       	andi	r24, 0xEF	; 239
    1050:	80 93 65 00 	sts	0x0065, r24
    1054:	8f ef       	ldi	r24, 0xFF	; 255
    1056:	8a bb       	out	0x1a, r24	; 26
    1058:	6b bb       	out	0x1b, r22	; 27
    105a:	85 e0       	ldi	r24, 0x05	; 5
    105c:	98 2f       	mov	r25, r24
    105e:	9a 95       	dec	r25
    1060:	f1 f7       	brne	.-4      	; 0x105e <display_write+0x5e>
    1062:	90 91 65 00 	lds	r25, 0x0065
    1066:	94 60       	ori	r25, 0x04	; 4
    1068:	90 93 65 00 	sts	0x0065, r25
    106c:	98 2f       	mov	r25, r24
    106e:	9a 95       	dec	r25
    1070:	f1 f7       	brne	.-4      	; 0x106e <display_write+0x6e>
    1072:	90 91 65 00 	lds	r25, 0x0065
    1076:	9b 7f       	andi	r25, 0xFB	; 251
    1078:	90 93 65 00 	sts	0x0065, r25
    107c:	8a 95       	dec	r24
    107e:	f1 f7       	brne	.-4      	; 0x107c <display_write+0x7c>
    1080:	1b ba       	out	0x1b, r1	; 27
    1082:	1a ba       	out	0x1a, r1	; 26
    1084:	08 95       	ret

00001086 <display_read>:
    1086:	90 91 65 00 	lds	r25, 0x0065
    108a:	28 2f       	mov	r18, r24
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	80 e0       	ldi	r24, 0x00	; 0
    1090:	a9 01       	movw	r20, r18
    1092:	41 70       	andi	r20, 0x01	; 1
    1094:	50 70       	andi	r21, 0x00	; 0
    1096:	20 ff       	sbrs	r18, 0
    1098:	81 e0       	ldi	r24, 0x01	; 1
    109a:	9e 7f       	andi	r25, 0xFE	; 254
    109c:	98 2b       	or	r25, r24
    109e:	90 93 65 00 	sts	0x0065, r25
    10a2:	80 91 65 00 	lds	r24, 0x0065
    10a6:	41 15       	cp	r20, r1
    10a8:	51 05       	cpc	r21, r1
    10aa:	11 f4       	brne	.+4      	; 0x10b0 <display_read+0x2a>
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	01 c0       	rjmp	.+2      	; 0x10b2 <display_read+0x2c>
    10b0:	92 e0       	ldi	r25, 0x02	; 2
    10b2:	8d 7f       	andi	r24, 0xFD	; 253
    10b4:	89 2b       	or	r24, r25
    10b6:	80 93 65 00 	sts	0x0065, r24
    10ba:	80 91 65 00 	lds	r24, 0x0065
    10be:	21 fd       	sbrc	r18, 1
    10c0:	02 c0       	rjmp	.+4      	; 0x10c6 <display_read+0x40>
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	01 c0       	rjmp	.+2      	; 0x10c8 <display_read+0x42>
    10c6:	98 e0       	ldi	r25, 0x08	; 8
    10c8:	87 7f       	andi	r24, 0xF7	; 247
    10ca:	89 2b       	or	r24, r25
    10cc:	80 93 65 00 	sts	0x0065, r24
    10d0:	80 91 65 00 	lds	r24, 0x0065
    10d4:	80 61       	ori	r24, 0x10	; 16
    10d6:	80 93 65 00 	sts	0x0065, r24
    10da:	1a ba       	out	0x1a, r1	; 26
    10dc:	25 e0       	ldi	r18, 0x05	; 5
    10de:	82 2f       	mov	r24, r18
    10e0:	8a 95       	dec	r24
    10e2:	f1 f7       	brne	.-4      	; 0x10e0 <display_read+0x5a>
    10e4:	80 91 65 00 	lds	r24, 0x0065
    10e8:	84 60       	ori	r24, 0x04	; 4
    10ea:	80 93 65 00 	sts	0x0065, r24
    10ee:	85 e1       	ldi	r24, 0x15	; 21
    10f0:	8a 95       	dec	r24
    10f2:	f1 f7       	brne	.-4      	; 0x10f0 <display_read+0x6a>
    10f4:	89 b3       	in	r24, 0x19	; 25
    10f6:	90 91 65 00 	lds	r25, 0x0065
    10fa:	9b 7f       	andi	r25, 0xFB	; 251
    10fc:	90 93 65 00 	sts	0x0065, r25
    1100:	92 2f       	mov	r25, r18
    1102:	9a 95       	dec	r25
    1104:	f1 f7       	brne	.-4      	; 0x1102 <__stack+0x3>
    1106:	08 95       	ret

00001108 <display_wait>:
    1108:	1f 93       	push	r17
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	90 91 46 06 	lds	r25, 0x0646
    1112:	99 23       	and	r25, r25
    1114:	71 f0       	breq	.+28     	; 0x1132 <display_wait+0x2a>
    1116:	18 2f       	mov	r17, r24
    1118:	11 70       	andi	r17, 0x01	; 1
    111a:	cf ef       	ldi	r28, 0xFF	; 255
    111c:	df ef       	ldi	r29, 0xFF	; 255
    111e:	81 2f       	mov	r24, r17
    1120:	0e 94 43 08 	call	0x1086	; 0x1086 <display_read>
    1124:	21 97       	sbiw	r28, 0x01	; 1
    1126:	87 fd       	sbrc	r24, 7
    1128:	02 c0       	rjmp	.+4      	; 0x112e <display_wait+0x26>
    112a:	81 e0       	ldi	r24, 0x01	; 1
    112c:	03 c0       	rjmp	.+6      	; 0x1134 <display_wait+0x2c>
    112e:	20 97       	sbiw	r28, 0x00	; 0
    1130:	b1 f7       	brne	.-20     	; 0x111e <display_wait+0x16>
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	df 91       	pop	r29
    1136:	cf 91       	pop	r28
    1138:	1f 91       	pop	r17
    113a:	08 95       	ret

0000113c <display_init>:
    113c:	8f ef       	ldi	r24, 0xFF	; 255
    113e:	80 93 46 06 	sts	0x0646, r24
    1142:	80 91 64 00 	lds	r24, 0x0064
    1146:	88 60       	ori	r24, 0x08	; 8
    1148:	80 93 64 00 	sts	0x0064, r24
    114c:	80 91 64 00 	lds	r24, 0x0064
    1150:	80 61       	ori	r24, 0x10	; 16
    1152:	80 93 64 00 	sts	0x0064, r24
    1156:	80 91 64 00 	lds	r24, 0x0064
    115a:	84 60       	ori	r24, 0x04	; 4
    115c:	80 93 64 00 	sts	0x0064, r24
    1160:	80 91 64 00 	lds	r24, 0x0064
    1164:	81 60       	ori	r24, 0x01	; 1
    1166:	80 93 64 00 	sts	0x0064, r24
    116a:	80 91 64 00 	lds	r24, 0x0064
    116e:	82 60       	ori	r24, 0x02	; 2
    1170:	80 93 64 00 	sts	0x0064, r24
    1174:	b8 9a       	sbi	0x17, 0	; 23
    1176:	1a ba       	out	0x1a, r1	; 26
    1178:	80 91 65 00 	lds	r24, 0x0065
    117c:	87 7f       	andi	r24, 0xF7	; 247
    117e:	80 93 65 00 	sts	0x0065, r24
    1182:	80 91 65 00 	lds	r24, 0x0065
    1186:	8f 7e       	andi	r24, 0xEF	; 239
    1188:	80 93 65 00 	sts	0x0065, r24
    118c:	80 91 65 00 	lds	r24, 0x0065
    1190:	8b 7f       	andi	r24, 0xFB	; 251
    1192:	80 93 65 00 	sts	0x0065, r24
    1196:	80 91 65 00 	lds	r24, 0x0065
    119a:	8e 7f       	andi	r24, 0xFE	; 254
    119c:	80 93 65 00 	sts	0x0065, r24
    11a0:	80 91 65 00 	lds	r24, 0x0065
    11a4:	8d 7f       	andi	r24, 0xFD	; 253
    11a6:	80 93 65 00 	sts	0x0065, r24
    11aa:	c0 98       	cbi	0x18, 0	; 24
    11ac:	97 9b       	sbis	0x12, 7	; 18
    11ae:	07 c0       	rjmp	.+14     	; 0x11be <display_init+0x82>
    11b0:	97 98       	cbi	0x12, 7	; 18
    11b2:	80 ea       	ldi	r24, 0xA0	; 160
    11b4:	9f e0       	ldi	r25, 0x0F	; 15
    11b6:	01 97       	sbiw	r24, 0x01	; 1
    11b8:	f1 f7       	brne	.-4      	; 0x11b6 <display_init+0x7a>
    11ba:	97 9a       	sbi	0x12, 7	; 18
    11bc:	04 c0       	rjmp	.+8      	; 0x11c6 <display_init+0x8a>
    11be:	80 ea       	ldi	r24, 0xA0	; 160
    11c0:	9f e0       	ldi	r25, 0x0F	; 15
    11c2:	01 97       	sbiw	r24, 0x01	; 1
    11c4:	f1 f7       	brne	.-4      	; 0x11c2 <display_init+0x86>
    11c6:	c0 9a       	sbi	0x18, 0	; 24
    11c8:	80 e0       	ldi	r24, 0x00	; 0
    11ca:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    11ce:	88 23       	and	r24, r24
    11d0:	51 f0       	breq	.+20     	; 0x11e6 <display_init+0xaa>
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    11d8:	88 23       	and	r24, r24
    11da:	11 f0       	breq	.+4      	; 0x11e0 <display_init+0xa4>
    11dc:	82 e0       	ldi	r24, 0x02	; 2
    11de:	01 c0       	rjmp	.+2      	; 0x11e2 <display_init+0xa6>
    11e0:	81 e0       	ldi	r24, 0x01	; 1
    11e2:	80 93 46 06 	sts	0x0646, r24
    11e6:	80 91 46 06 	lds	r24, 0x0646
    11ea:	8f 3f       	cpi	r24, 0xFF	; 255
    11ec:	11 f4       	brne	.+4      	; 0x11f2 <display_init+0xb6>
    11ee:	10 92 46 06 	sts	0x0646, r1
    11f2:	80 91 46 06 	lds	r24, 0x0646
    11f6:	08 95       	ret

000011f8 <delay>:
    11f8:	20 ea       	ldi	r18, 0xA0	; 160
    11fa:	3f e0       	ldi	r19, 0x0F	; 15
    11fc:	04 c0       	rjmp	.+8      	; 0x1206 <delay+0xe>
    11fe:	f9 01       	movw	r30, r18
    1200:	31 97       	sbiw	r30, 0x01	; 1
    1202:	f1 f7       	brne	.-4      	; 0x1200 <delay+0x8>
    1204:	01 97       	sbiw	r24, 0x01	; 1
    1206:	00 97       	sbiw	r24, 0x00	; 0
    1208:	d1 f7       	brne	.-12     	; 0x11fe <delay+0x6>
    120a:	08 95       	ret

0000120c <spi_restart_transmission>:
    120c:	10 92 83 06 	sts	0x0683, r1
    1210:	80 93 64 06 	sts	0x0664, r24
    1214:	98 2f       	mov	r25, r24
    1216:	9f 5f       	subi	r25, 0xFF	; 255
    1218:	90 93 66 06 	sts	0x0666, r25
    121c:	96 e9       	ldi	r25, 0x96	; 150
    121e:	90 93 84 06 	sts	0x0684, r25
    1222:	f8 94       	cli
    1224:	03 c0       	rjmp	.+6      	; 0x122c <spi_restart_transmission+0x20>
    1226:	78 94       	sei
    1228:	00 00       	nop
    122a:	f8 94       	cli
    122c:	b0 9b       	sbis	0x16, 0	; 22
    122e:	fb cf       	rjmp	.-10     	; 0x1226 <spi_restart_transmission+0x1a>
    1230:	90 ec       	ldi	r25, 0xC0	; 192
    1232:	9d b9       	out	0x0d, r25	; 13
    1234:	8f b9       	out	0x0f, r24	; 15
    1236:	96 e9       	ldi	r25, 0x96	; 150
    1238:	98 27       	eor	r25, r24
    123a:	90 93 82 06 	sts	0x0682, r25
    123e:	77 9a       	sbi	0x0e, 7	; 14
    1240:	78 94       	sei
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	08 95       	ret

00001246 <spi_init>:
    1246:	b8 98       	cbi	0x17, 0	; 23
    1248:	c0 98       	cbi	0x18, 0	; 24
    124a:	bb 9a       	sbi	0x17, 3	; 23
    124c:	c3 9a       	sbi	0x18, 3	; 24
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	0e 94 06 09 	call	0x120c	; 0x120c <spi_restart_transmission>
    1254:	08 95       	ret

00001256 <__vector_17>:
    1256:	1f 92       	push	r1
    1258:	0f 92       	push	r0
    125a:	0f b6       	in	r0, 0x3f	; 63
    125c:	0f 92       	push	r0
    125e:	0b b6       	in	r0, 0x3b	; 59
    1260:	0f 92       	push	r0
    1262:	11 24       	eor	r1, r1
    1264:	2f 93       	push	r18
    1266:	3f 93       	push	r19
    1268:	4f 93       	push	r20
    126a:	5f 93       	push	r21
    126c:	6f 93       	push	r22
    126e:	7f 93       	push	r23
    1270:	8f 93       	push	r24
    1272:	9f 93       	push	r25
    1274:	af 93       	push	r26
    1276:	bf 93       	push	r27
    1278:	ef 93       	push	r30
    127a:	ff 93       	push	r31
    127c:	9f b1       	in	r25, 0x0f	; 15
    127e:	20 91 84 06 	lds	r18, 0x0684
    1282:	29 27       	eor	r18, r25
    1284:	20 93 84 06 	sts	0x0684, r18
    1288:	80 91 83 06 	lds	r24, 0x0683
    128c:	88 23       	and	r24, r24
    128e:	b1 f4       	brne	.+44     	; 0x12bc <__vector_17+0x66>
    1290:	90 93 62 06 	sts	0x0662, r25
    1294:	9c 31       	cpi	r25, 0x1C	; 28
    1296:	30 f0       	brcs	.+12     	; 0x12a4 <__vector_17+0x4e>
    1298:	10 92 64 06 	sts	0x0664, r1
    129c:	10 92 62 06 	sts	0x0662, r1
    12a0:	91 e0       	ldi	r25, 0x01	; 1
    12a2:	09 c0       	rjmp	.+18     	; 0x12b6 <__vector_17+0x60>
    12a4:	49 2f       	mov	r20, r25
    12a6:	50 e0       	ldi	r21, 0x00	; 0
    12a8:	20 91 66 06 	lds	r18, 0x0666
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	42 17       	cp	r20, r18
    12b0:	53 07       	cpc	r21, r19
    12b2:	fc f0       	brlt	.+62     	; 0x12f2 <__vector_17+0x9c>
    12b4:	9f 5f       	subi	r25, 0xFF	; 255
    12b6:	90 93 66 06 	sts	0x0666, r25
    12ba:	1b c0       	rjmp	.+54     	; 0x12f2 <__vector_17+0x9c>
    12bc:	48 2f       	mov	r20, r24
    12be:	50 e0       	ldi	r21, 0x00	; 0
    12c0:	60 91 62 06 	lds	r22, 0x0662
    12c4:	70 e0       	ldi	r23, 0x00	; 0
    12c6:	64 17       	cp	r22, r20
    12c8:	75 07       	cpc	r23, r21
    12ca:	2c f0       	brlt	.+10     	; 0x12d6 <__vector_17+0x80>
    12cc:	4a 59       	subi	r20, 0x9A	; 154
    12ce:	59 4f       	sbci	r21, 0xF9	; 249
    12d0:	fa 01       	movw	r30, r20
    12d2:	90 83       	st	Z, r25
    12d4:	0e c0       	rjmp	.+28     	; 0x12f2 <__vector_17+0x9c>
    12d6:	41 50       	subi	r20, 0x01	; 1
    12d8:	50 40       	sbci	r21, 0x00	; 0
    12da:	46 17       	cp	r20, r22
    12dc:	57 07       	cpc	r21, r23
    12de:	49 f4       	brne	.+18     	; 0x12f2 <__vector_17+0x9c>
    12e0:	22 23       	and	r18, r18
    12e2:	39 f0       	breq	.+14     	; 0x12f2 <__vector_17+0x9c>
    12e4:	90 91 63 06 	lds	r25, 0x0663
    12e8:	9f 5f       	subi	r25, 0xFF	; 255
    12ea:	90 93 63 06 	sts	0x0663, r25
    12ee:	10 92 62 06 	sts	0x0662, r1
    12f2:	90 91 64 06 	lds	r25, 0x0664
    12f6:	89 17       	cp	r24, r25
    12f8:	50 f4       	brcc	.+20     	; 0x130e <__vector_17+0xb8>
    12fa:	e8 2f       	mov	r30, r24
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	e9 5b       	subi	r30, 0xB9	; 185
    1300:	f9 4f       	sbci	r31, 0xF9	; 249
    1302:	20 81       	ld	r18, Z
    1304:	2f b9       	out	0x0f, r18	; 15
    1306:	90 91 82 06 	lds	r25, 0x0682
    130a:	92 27       	eor	r25, r18
    130c:	11 c0       	rjmp	.+34     	; 0x1330 <__vector_17+0xda>
    130e:	89 17       	cp	r24, r25
    1310:	31 f4       	brne	.+12     	; 0x131e <__vector_17+0xc8>
    1312:	90 91 82 06 	lds	r25, 0x0682
    1316:	9f b9       	out	0x0f, r25	; 15
    1318:	10 92 82 06 	sts	0x0682, r1
    131c:	0b c0       	rjmp	.+22     	; 0x1334 <__vector_17+0xde>
    131e:	90 91 66 06 	lds	r25, 0x0666
    1322:	89 17       	cp	r24, r25
    1324:	58 f4       	brcc	.+22     	; 0x133c <__vector_17+0xe6>
    1326:	9f ef       	ldi	r25, 0xFF	; 255
    1328:	9f b9       	out	0x0f, r25	; 15
    132a:	90 91 82 06 	lds	r25, 0x0682
    132e:	90 95       	com	r25
    1330:	90 93 82 06 	sts	0x0682, r25
    1334:	8f 5f       	subi	r24, 0xFF	; 255
    1336:	80 93 83 06 	sts	0x0683, r24
    133a:	11 c0       	rjmp	.+34     	; 0x135e <__vector_17+0x108>
    133c:	b8 98       	cbi	0x17, 0	; 23
    133e:	c0 98       	cbi	0x18, 0	; 24
    1340:	1d b8       	out	0x0d, r1	; 13
    1342:	b8 98       	cbi	0x17, 0	; 23
    1344:	c0 98       	cbi	0x18, 0	; 24
    1346:	80 91 65 06 	lds	r24, 0x0665
    134a:	8f 5f       	subi	r24, 0xFF	; 255
    134c:	80 93 65 06 	sts	0x0665, r24
    1350:	78 94       	sei
    1352:	80 91 62 06 	lds	r24, 0x0662
    1356:	0e 94 11 11 	call	0x2222	; 0x2222 <spi_finished_callback>
    135a:	0e 94 06 09 	call	0x120c	; 0x120c <spi_restart_transmission>
    135e:	ff 91       	pop	r31
    1360:	ef 91       	pop	r30
    1362:	bf 91       	pop	r27
    1364:	af 91       	pop	r26
    1366:	9f 91       	pop	r25
    1368:	8f 91       	pop	r24
    136a:	7f 91       	pop	r23
    136c:	6f 91       	pop	r22
    136e:	5f 91       	pop	r21
    1370:	4f 91       	pop	r20
    1372:	3f 91       	pop	r19
    1374:	2f 91       	pop	r18
    1376:	0f 90       	pop	r0
    1378:	0b be       	out	0x3b, r0	; 59
    137a:	0f 90       	pop	r0
    137c:	0f be       	out	0x3f, r0	; 63
    137e:	0f 90       	pop	r0
    1380:	1f 90       	pop	r1
    1382:	18 95       	reti

00001384 <gfx_get_x>:
    1384:	80 91 88 06 	lds	r24, 0x0688
    1388:	08 95       	ret

0000138a <gfx_get_y>:
    138a:	80 91 91 06 	lds	r24, 0x0691
    138e:	08 95       	ret

00001390 <gfx_draw_mode>:
    1390:	80 93 85 06 	sts	0x0685, r24
    1394:	08 95       	ret

00001396 <gfx_char_width>:
    1396:	98 2f       	mov	r25, r24
    1398:	90 52       	subi	r25, 0x20	; 32
    139a:	90 36       	cpi	r25, 0x60	; 96
    139c:	08 f0       	brcs	.+2      	; 0x13a0 <gfx_char_width+0xa>
    139e:	80 e8       	ldi	r24, 0x80	; 128
    13a0:	80 52       	subi	r24, 0x20	; 32
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	fc 01       	movw	r30, r24
    13a6:	ee 0f       	add	r30, r30
    13a8:	ff 1f       	adc	r31, r31
    13aa:	e8 0f       	add	r30, r24
    13ac:	f9 1f       	adc	r31, r25
    13ae:	ee 0f       	add	r30, r30
    13b0:	ff 1f       	adc	r31, r31
    13b2:	e2 5c       	subi	r30, 0xC2	; 194
    13b4:	fd 4f       	sbci	r31, 0xFD	; 253
    13b6:	90 81       	ld	r25, Z
    13b8:	80 91 87 06 	lds	r24, 0x0687
    13bc:	88 23       	and	r24, r24
    13be:	09 f4       	brne	.+2      	; 0x13c2 <gfx_char_width+0x2c>
    13c0:	9f e1       	ldi	r25, 0x1F	; 31
    13c2:	80 e0       	ldi	r24, 0x00	; 0
    13c4:	20 e0       	ldi	r18, 0x00	; 0
    13c6:	90 fd       	sbrc	r25, 0
    13c8:	8f 5f       	subi	r24, 0xFF	; 255
    13ca:	2f 5f       	subi	r18, 0xFF	; 255
    13cc:	25 30       	cpi	r18, 0x05	; 5
    13ce:	11 f0       	breq	.+4      	; 0x13d4 <gfx_char_width+0x3e>
    13d0:	96 95       	lsr	r25
    13d2:	f9 cf       	rjmp	.-14     	; 0x13c6 <gfx_char_width+0x30>
    13d4:	08 95       	ret

000013d6 <gfx_text_width>:
    13d6:	1f 93       	push	r17
    13d8:	cf 93       	push	r28
    13da:	df 93       	push	r29
    13dc:	ec 01       	movw	r28, r24
    13de:	10 e0       	ldi	r17, 0x00	; 0
    13e0:	05 c0       	rjmp	.+10     	; 0x13ec <gfx_text_width+0x16>
    13e2:	21 96       	adiw	r28, 0x01	; 1
    13e4:	0e 94 cb 09 	call	0x1396	; 0x1396 <gfx_char_width>
    13e8:	8f 5f       	subi	r24, 0xFF	; 255
    13ea:	18 0f       	add	r17, r24
    13ec:	88 81       	ld	r24, Y
    13ee:	88 23       	and	r24, r24
    13f0:	c1 f7       	brne	.-16     	; 0x13e2 <gfx_text_width+0xc>
    13f2:	81 2f       	mov	r24, r17
    13f4:	df 91       	pop	r29
    13f6:	cf 91       	pop	r28
    13f8:	1f 91       	pop	r17
    13fa:	08 95       	ret

000013fc <gfx_text_width_P>:
    13fc:	1f 93       	push	r17
    13fe:	cf 93       	push	r28
    1400:	df 93       	push	r29
    1402:	ec 01       	movw	r28, r24
    1404:	10 e0       	ldi	r17, 0x00	; 0
    1406:	07 c0       	rjmp	.+14     	; 0x1416 <gfx_text_width_P+0x1a>
    1408:	21 96       	adiw	r28, 0x01	; 1
    140a:	f9 01       	movw	r30, r18
    140c:	84 91       	lpm	r24, Z+
    140e:	0e 94 cb 09 	call	0x1396	; 0x1396 <gfx_char_width>
    1412:	8f 5f       	subi	r24, 0xFF	; 255
    1414:	18 0f       	add	r17, r24
    1416:	9e 01       	movw	r18, r28
    1418:	fe 01       	movw	r30, r28
    141a:	94 91       	lpm	r25, Z+
    141c:	99 23       	and	r25, r25
    141e:	a1 f7       	brne	.-24     	; 0x1408 <gfx_text_width_P+0xc>
    1420:	81 2f       	mov	r24, r17
    1422:	df 91       	pop	r29
    1424:	cf 91       	pop	r28
    1426:	1f 91       	pop	r17
    1428:	08 95       	ret

0000142a <gfx_set_proportional>:
    142a:	80 93 87 06 	sts	0x0687, r24
    142e:	08 95       	ret

00001430 <gfx_get_proportional>:
    1430:	80 91 87 06 	lds	r24, 0x0687
    1434:	08 95       	ret

00001436 <gfx_term_goto>:
    1436:	86 31       	cpi	r24, 0x16	; 22
    1438:	30 f4       	brcc	.+12     	; 0x1446 <gfx_term_goto+0x10>
    143a:	68 30       	cpi	r22, 0x08	; 8
    143c:	20 f4       	brcc	.+8      	; 0x1446 <gfx_term_goto+0x10>
    143e:	60 93 86 06 	sts	0x0686, r22
    1442:	80 93 92 06 	sts	0x0692, r24
    1446:	08 95       	ret

00001448 <gfx_store_disp_tile>:
    1448:	0f 93       	push	r16
    144a:	1f 93       	push	r17
    144c:	df 93       	push	r29
    144e:	cf 93       	push	r28
    1450:	0f 92       	push	r0
    1452:	cd b7       	in	r28, 0x3d	; 61
    1454:	de b7       	in	r29, 0x3e	; 62
    1456:	18 2f       	mov	r17, r24
    1458:	68 54       	subi	r22, 0x48	; 72
    145a:	88 30       	cpi	r24, 0x08	; 8
    145c:	18 f5       	brcc	.+70     	; 0x14a4 <gfx_store_disp_tile+0x5c>
    145e:	80 e0       	ldi	r24, 0x00	; 0
    1460:	69 83       	std	Y+1, r22	; 0x01
    1462:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1466:	80 e0       	ldi	r24, 0x00	; 0
    1468:	69 81       	ldd	r22, Y+1	; 0x01
    146a:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    146e:	80 e0       	ldi	r24, 0x00	; 0
    1470:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1474:	61 2f       	mov	r22, r17
    1476:	66 0f       	add	r22, r22
    1478:	66 0f       	add	r22, r22
    147a:	66 0f       	add	r22, r22
    147c:	60 5c       	subi	r22, 0xC0	; 192
    147e:	80 e0       	ldi	r24, 0x00	; 0
    1480:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1484:	09 e8       	ldi	r16, 0x89	; 137
    1486:	16 e0       	ldi	r17, 0x06	; 6
    1488:	82 e0       	ldi	r24, 0x02	; 2
    148a:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    148e:	82 e0       	ldi	r24, 0x02	; 2
    1490:	f8 01       	movw	r30, r16
    1492:	61 91       	ld	r22, Z+
    1494:	8f 01       	movw	r16, r30
    1496:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    149a:	f6 e0       	ldi	r31, 0x06	; 6
    149c:	01 39       	cpi	r16, 0x91	; 145
    149e:	1f 07       	cpc	r17, r31
    14a0:	99 f7       	brne	.-26     	; 0x1488 <gfx_store_disp_tile+0x40>
    14a2:	23 c0       	rjmp	.+70     	; 0x14ea <gfx_store_disp_tile+0xa2>
    14a4:	18 50       	subi	r17, 0x08	; 8
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	69 83       	std	Y+1, r22	; 0x01
    14aa:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    14ae:	81 e0       	ldi	r24, 0x01	; 1
    14b0:	69 81       	ldd	r22, Y+1	; 0x01
    14b2:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    14bc:	61 2f       	mov	r22, r17
    14be:	66 0f       	add	r22, r22
    14c0:	66 0f       	add	r22, r22
    14c2:	66 0f       	add	r22, r22
    14c4:	60 5c       	subi	r22, 0xC0	; 192
    14c6:	81 e0       	ldi	r24, 0x01	; 1
    14c8:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    14cc:	09 e8       	ldi	r16, 0x89	; 137
    14ce:	16 e0       	ldi	r17, 0x06	; 6
    14d0:	83 e0       	ldi	r24, 0x03	; 3
    14d2:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    14d6:	83 e0       	ldi	r24, 0x03	; 3
    14d8:	f8 01       	movw	r30, r16
    14da:	61 91       	ld	r22, Z+
    14dc:	8f 01       	movw	r16, r30
    14de:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    14e2:	f6 e0       	ldi	r31, 0x06	; 6
    14e4:	01 39       	cpi	r16, 0x91	; 145
    14e6:	1f 07       	cpc	r17, r31
    14e8:	99 f7       	brne	.-26     	; 0x14d0 <gfx_store_disp_tile+0x88>
    14ea:	0f 90       	pop	r0
    14ec:	cf 91       	pop	r28
    14ee:	df 91       	pop	r29
    14f0:	1f 91       	pop	r17
    14f2:	0f 91       	pop	r16
    14f4:	08 95       	ret

000014f6 <gfx_fill>:
    14f6:	ff 92       	push	r15
    14f8:	0f 93       	push	r16
    14fa:	1f 93       	push	r17
    14fc:	f8 2e       	mov	r15, r24
    14fe:	18 eb       	ldi	r17, 0xB8	; 184
    1500:	80 e0       	ldi	r24, 0x00	; 0
    1502:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    150c:	80 e0       	ldi	r24, 0x00	; 0
    150e:	61 2f       	mov	r22, r17
    1510:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1514:	81 e0       	ldi	r24, 0x01	; 1
    1516:	61 2f       	mov	r22, r17
    1518:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    151c:	00 e0       	ldi	r16, 0x00	; 0
    151e:	82 e0       	ldi	r24, 0x02	; 2
    1520:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1524:	83 e0       	ldi	r24, 0x03	; 3
    1526:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    152a:	82 e0       	ldi	r24, 0x02	; 2
    152c:	6f 2d       	mov	r22, r15
    152e:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1532:	83 e0       	ldi	r24, 0x03	; 3
    1534:	6f 2d       	mov	r22, r15
    1536:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    153a:	0f 5f       	subi	r16, 0xFF	; 255
    153c:	00 34       	cpi	r16, 0x40	; 64
    153e:	79 f7       	brne	.-34     	; 0x151e <gfx_fill+0x28>
    1540:	1f 5f       	subi	r17, 0xFF	; 255
    1542:	10 3c       	cpi	r17, 0xC0	; 192
    1544:	e9 f6       	brne	.-70     	; 0x1500 <gfx_fill+0xa>
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1552:	80 e0       	ldi	r24, 0x00	; 0
    1554:	68 eb       	ldi	r22, 0xB8	; 184
    1556:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    155a:	81 e0       	ldi	r24, 0x01	; 1
    155c:	68 eb       	ldi	r22, 0xB8	; 184
    155e:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1562:	1f 91       	pop	r17
    1564:	0f 91       	pop	r16
    1566:	ff 90       	pop	r15
    1568:	08 95       	ret

0000156a <gfx_term_clear>:
    156a:	80 e0       	ldi	r24, 0x00	; 0
    156c:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <gfx_fill>
    1570:	10 92 86 06 	sts	0x0686, r1
    1574:	10 92 92 06 	sts	0x0692, r1
    1578:	08 95       	ret

0000157a <gfx_init>:
    157a:	80 e0       	ldi	r24, 0x00	; 0
    157c:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1580:	80 e0       	ldi	r24, 0x00	; 0
    1582:	6f e3       	ldi	r22, 0x3F	; 63
    1584:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1588:	80 e0       	ldi	r24, 0x00	; 0
    158a:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    158e:	80 e0       	ldi	r24, 0x00	; 0
    1590:	60 ec       	ldi	r22, 0xC0	; 192
    1592:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1596:	80 e0       	ldi	r24, 0x00	; 0
    1598:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    159c:	80 e0       	ldi	r24, 0x00	; 0
    159e:	60 e4       	ldi	r22, 0x40	; 64
    15a0:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    15aa:	80 e0       	ldi	r24, 0x00	; 0
    15ac:	68 eb       	ldi	r22, 0xB8	; 184
    15ae:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    15b2:	81 e0       	ldi	r24, 0x01	; 1
    15b4:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	6f e3       	ldi	r22, 0x3F	; 63
    15bc:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    15c0:	81 e0       	ldi	r24, 0x01	; 1
    15c2:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    15c6:	81 e0       	ldi	r24, 0x01	; 1
    15c8:	60 ec       	ldi	r22, 0xC0	; 192
    15ca:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    15ce:	81 e0       	ldi	r24, 0x01	; 1
    15d0:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    15d4:	81 e0       	ldi	r24, 0x01	; 1
    15d6:	60 e4       	ldi	r22, 0x40	; 64
    15d8:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    15e2:	81 e0       	ldi	r24, 0x01	; 1
    15e4:	68 eb       	ldi	r22, 0xB8	; 184
    15e6:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    15ea:	80 e0       	ldi	r24, 0x00	; 0
    15ec:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <gfx_fill>
    15f0:	81 e0       	ldi	r24, 0x01	; 1
    15f2:	80 93 85 06 	sts	0x0685, r24
    15f6:	08 95       	ret

000015f8 <gfx_move>:
    15f8:	0f 93       	push	r16
    15fa:	1f 93       	push	r17
    15fc:	18 2f       	mov	r17, r24
    15fe:	06 2f       	mov	r16, r22
    1600:	80 93 88 06 	sts	0x0688, r24
    1604:	60 93 91 06 	sts	0x0691, r22
    1608:	80 e0       	ldi	r24, 0x00	; 0
    160a:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    160e:	81 e0       	ldi	r24, 0x01	; 1
    1610:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1614:	06 95       	lsr	r16
    1616:	06 95       	lsr	r16
    1618:	06 95       	lsr	r16
    161a:	08 54       	subi	r16, 0x48	; 72
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	60 2f       	mov	r22, r16
    1620:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1624:	81 e0       	ldi	r24, 0x01	; 1
    1626:	60 2f       	mov	r22, r16
    1628:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    162c:	80 e0       	ldi	r24, 0x00	; 0
    162e:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1632:	81 e0       	ldi	r24, 0x01	; 1
    1634:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1638:	11 34       	cpi	r17, 0x41	; 65
    163a:	38 f0       	brcs	.+14     	; 0x164a <gfx_move+0x52>
    163c:	80 e0       	ldi	r24, 0x00	; 0
    163e:	60 e4       	ldi	r22, 0x40	; 64
    1640:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1644:	81 e0       	ldi	r24, 0x01	; 1
    1646:	61 2f       	mov	r22, r17
    1648:	07 c0       	rjmp	.+14     	; 0x1658 <gfx_move+0x60>
    164a:	61 2f       	mov	r22, r17
    164c:	60 5c       	subi	r22, 0xC0	; 192
    164e:	80 e0       	ldi	r24, 0x00	; 0
    1650:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1654:	81 e0       	ldi	r24, 0x01	; 1
    1656:	60 e4       	ldi	r22, 0x40	; 64
    1658:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    165c:	1f 91       	pop	r17
    165e:	0f 91       	pop	r16
    1660:	08 95       	ret

00001662 <gfx_term_scroll>:
    1662:	ef 92       	push	r14
    1664:	ff 92       	push	r15
    1666:	0f 93       	push	r16
    1668:	1f 93       	push	r17
    166a:	cf 93       	push	r28
    166c:	df 93       	push	r29
    166e:	19 eb       	ldi	r17, 0xB9	; 185
    1670:	47 c0       	rjmp	.+142    	; 0x1700 <gfx_term_scroll+0x9e>
    1672:	08 30       	cpi	r16, 0x08	; 8
    1674:	e8 f4       	brcc	.+58     	; 0x16b0 <gfx_term_scroll+0x4e>
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    167c:	80 e0       	ldi	r24, 0x00	; 0
    167e:	61 2f       	mov	r22, r17
    1680:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    168a:	6f 2d       	mov	r22, r15
    168c:	60 5c       	subi	r22, 0xC0	; 192
    168e:	80 e0       	ldi	r24, 0x00	; 0
    1690:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    1694:	82 e0       	ldi	r24, 0x02	; 2
    1696:	0e 94 43 08 	call	0x1086	; 0x1086 <display_read>
    169a:	c9 e8       	ldi	r28, 0x89	; 137
    169c:	d6 e0       	ldi	r29, 0x06	; 6
    169e:	82 e0       	ldi	r24, 0x02	; 2
    16a0:	0e 94 43 08 	call	0x1086	; 0x1086 <display_read>
    16a4:	89 93       	st	Y+, r24
    16a6:	86 e0       	ldi	r24, 0x06	; 6
    16a8:	c1 39       	cpi	r28, 0x91	; 145
    16aa:	d8 07       	cpc	r29, r24
    16ac:	c1 f7       	brne	.-16     	; 0x169e <gfx_term_scroll+0x3c>
    16ae:	1b c0       	rjmp	.+54     	; 0x16e6 <gfx_term_scroll+0x84>
    16b0:	81 e0       	ldi	r24, 0x01	; 1
    16b2:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    16b6:	81 e0       	ldi	r24, 0x01	; 1
    16b8:	61 2f       	mov	r22, r17
    16ba:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    16be:	81 e0       	ldi	r24, 0x01	; 1
    16c0:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	6f 2d       	mov	r22, r15
    16c8:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    16cc:	83 e0       	ldi	r24, 0x03	; 3
    16ce:	0e 94 43 08 	call	0x1086	; 0x1086 <display_read>
    16d2:	c9 e8       	ldi	r28, 0x89	; 137
    16d4:	d6 e0       	ldi	r29, 0x06	; 6
    16d6:	83 e0       	ldi	r24, 0x03	; 3
    16d8:	0e 94 43 08 	call	0x1086	; 0x1086 <display_read>
    16dc:	89 93       	st	Y+, r24
    16de:	86 e0       	ldi	r24, 0x06	; 6
    16e0:	c1 39       	cpi	r28, 0x91	; 145
    16e2:	d8 07       	cpc	r29, r24
    16e4:	c1 f7       	brne	.-16     	; 0x16d6 <gfx_term_scroll+0x74>
    16e6:	80 2f       	mov	r24, r16
    16e8:	6e 2d       	mov	r22, r14
    16ea:	0e 94 24 0a 	call	0x1448	; 0x1448 <gfx_store_disp_tile>
    16ee:	0f 5f       	subi	r16, 0xFF	; 255
    16f0:	88 e0       	ldi	r24, 0x08	; 8
    16f2:	f8 0e       	add	r15, r24
    16f4:	00 31       	cpi	r16, 0x10	; 16
    16f6:	09 f0       	breq	.+2      	; 0x16fa <gfx_term_scroll+0x98>
    16f8:	bc cf       	rjmp	.-136    	; 0x1672 <gfx_term_scroll+0x10>
    16fa:	1f 5f       	subi	r17, 0xFF	; 255
    16fc:	10 3c       	cpi	r17, 0xC0	; 192
    16fe:	31 f0       	breq	.+12     	; 0x170c <gfx_term_scroll+0xaa>
    1700:	ff 24       	eor	r15, r15
    1702:	00 e0       	ldi	r16, 0x00	; 0
    1704:	37 e4       	ldi	r19, 0x47	; 71
    1706:	e3 2e       	mov	r14, r19
    1708:	e1 0e       	add	r14, r17
    170a:	b3 cf       	rjmp	.-154    	; 0x1672 <gfx_term_scroll+0x10>
    170c:	e9 e8       	ldi	r30, 0x89	; 137
    170e:	f6 e0       	ldi	r31, 0x06	; 6
    1710:	11 92       	st	Z+, r1
    1712:	86 e0       	ldi	r24, 0x06	; 6
    1714:	e1 39       	cpi	r30, 0x91	; 145
    1716:	f8 07       	cpc	r31, r24
    1718:	d9 f7       	brne	.-10     	; 0x1710 <gfx_term_scroll+0xae>
    171a:	10 e0       	ldi	r17, 0x00	; 0
    171c:	81 2f       	mov	r24, r17
    171e:	67 e0       	ldi	r22, 0x07	; 7
    1720:	0e 94 24 0a 	call	0x1448	; 0x1448 <gfx_store_disp_tile>
    1724:	1f 5f       	subi	r17, 0xFF	; 255
    1726:	10 31       	cpi	r17, 0x10	; 16
    1728:	c9 f7       	brne	.-14     	; 0x171c <gfx_term_scroll+0xba>
    172a:	80 91 86 06 	lds	r24, 0x0686
    172e:	88 23       	and	r24, r24
    1730:	19 f0       	breq	.+6      	; 0x1738 <gfx_term_scroll+0xd6>
    1732:	81 50       	subi	r24, 0x01	; 1
    1734:	80 93 86 06 	sts	0x0686, r24
    1738:	df 91       	pop	r29
    173a:	cf 91       	pop	r28
    173c:	1f 91       	pop	r17
    173e:	0f 91       	pop	r16
    1740:	ff 90       	pop	r15
    1742:	ef 90       	pop	r14
    1744:	08 95       	ret

00001746 <gfx_display_write2>:
    1746:	ef 92       	push	r14
    1748:	ff 92       	push	r15
    174a:	0f 93       	push	r16
    174c:	1f 93       	push	r17
    174e:	e8 2e       	mov	r14, r24
    1750:	16 2f       	mov	r17, r22
    1752:	80 91 88 06 	lds	r24, 0x0688
    1756:	87 fd       	sbrc	r24, 7
    1758:	39 c0       	rjmp	.+114    	; 0x17cc <gfx_display_write2+0x86>
    175a:	00 e0       	ldi	r16, 0x00	; 0
    175c:	80 34       	cpi	r24, 0x40	; 64
    175e:	08 f0       	brcs	.+2      	; 0x1762 <gfx_display_write2+0x1c>
    1760:	01 e0       	ldi	r16, 0x01	; 1
    1762:	80 2f       	mov	r24, r16
    1764:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    1768:	42 e0       	ldi	r20, 0x02	; 2
    176a:	f4 2e       	mov	r15, r20
    176c:	f0 0e       	add	r15, r16
    176e:	8f 2d       	mov	r24, r15
    1770:	0e 94 43 08 	call	0x1086	; 0x1086 <display_read>
    1774:	8f 2d       	mov	r24, r15
    1776:	0e 94 43 08 	call	0x1086	; 0x1086 <display_read>
    177a:	90 91 85 06 	lds	r25, 0x0685
    177e:	92 ff       	sbrs	r25, 2
    1780:	02 c0       	rjmp	.+4      	; 0x1786 <gfx_display_write2+0x40>
    1782:	e0 94       	com	r14
    1784:	9b 7f       	andi	r25, 0xFB	; 251
    1786:	e1 22       	and	r14, r17
    1788:	99 23       	and	r25, r25
    178a:	19 f4       	brne	.+6      	; 0x1792 <gfx_display_write2+0x4c>
    178c:	1e 2d       	mov	r17, r14
    178e:	18 2b       	or	r17, r24
    1790:	08 c0       	rjmp	.+16     	; 0x17a2 <gfx_display_write2+0x5c>
    1792:	91 30       	cpi	r25, 0x01	; 1
    1794:	21 f4       	brne	.+8      	; 0x179e <gfx_display_write2+0x58>
    1796:	10 95       	com	r17
    1798:	18 23       	and	r17, r24
    179a:	1e 29       	or	r17, r14
    179c:	02 c0       	rjmp	.+4      	; 0x17a2 <gfx_display_write2+0x5c>
    179e:	1e 2d       	mov	r17, r14
    17a0:	18 27       	eor	r17, r24
    17a2:	80 2f       	mov	r24, r16
    17a4:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    17a8:	60 91 88 06 	lds	r22, 0x0688
    17ac:	60 64       	ori	r22, 0x40	; 64
    17ae:	80 2f       	mov	r24, r16
    17b0:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    17b4:	80 2f       	mov	r24, r16
    17b6:	0e 94 84 08 	call	0x1108	; 0x1108 <display_wait>
    17ba:	8f 2d       	mov	r24, r15
    17bc:	61 2f       	mov	r22, r17
    17be:	0e 94 00 08 	call	0x1000	; 0x1000 <display_write>
    17c2:	80 91 88 06 	lds	r24, 0x0688
    17c6:	8f 5f       	subi	r24, 0xFF	; 255
    17c8:	80 93 88 06 	sts	0x0688, r24
    17cc:	1f 91       	pop	r17
    17ce:	0f 91       	pop	r16
    17d0:	ff 90       	pop	r15
    17d2:	ef 90       	pop	r14
    17d4:	08 95       	ret

000017d6 <gfx_pixel>:
    17d6:	90 91 91 06 	lds	r25, 0x0691
    17da:	97 70       	andi	r25, 0x07	; 7
    17dc:	61 e0       	ldi	r22, 0x01	; 1
    17de:	70 e0       	ldi	r23, 0x00	; 0
    17e0:	02 c0       	rjmp	.+4      	; 0x17e6 <gfx_pixel+0x10>
    17e2:	66 0f       	add	r22, r22
    17e4:	77 1f       	adc	r23, r23
    17e6:	9a 95       	dec	r25
    17e8:	e2 f7       	brpl	.-8      	; 0x17e2 <gfx_pixel+0xc>
    17ea:	88 23       	and	r24, r24
    17ec:	11 f0       	breq	.+4      	; 0x17f2 <gfx_pixel+0x1c>
    17ee:	86 2f       	mov	r24, r22
    17f0:	02 c0       	rjmp	.+4      	; 0x17f6 <gfx_pixel+0x20>
    17f2:	86 2f       	mov	r24, r22
    17f4:	60 e0       	ldi	r22, 0x00	; 0
    17f6:	0e 94 a3 0b 	call	0x1746	; 0x1746 <gfx_display_write2>
    17fa:	08 95       	ret

000017fc <gfx_draw_xbm_P>:
    17fc:	2f 92       	push	r2
    17fe:	3f 92       	push	r3
    1800:	4f 92       	push	r4
    1802:	5f 92       	push	r5
    1804:	6f 92       	push	r6
    1806:	7f 92       	push	r7
    1808:	8f 92       	push	r8
    180a:	9f 92       	push	r9
    180c:	af 92       	push	r10
    180e:	bf 92       	push	r11
    1810:	cf 92       	push	r12
    1812:	df 92       	push	r13
    1814:	ef 92       	push	r14
    1816:	ff 92       	push	r15
    1818:	0f 93       	push	r16
    181a:	1f 93       	push	r17
    181c:	df 93       	push	r29
    181e:	cf 93       	push	r28
    1820:	00 d0       	rcall	.+0      	; 0x1822 <gfx_draw_xbm_P+0x26>
    1822:	00 d0       	rcall	.+0      	; 0x1824 <gfx_draw_xbm_P+0x28>
    1824:	00 d0       	rcall	.+0      	; 0x1826 <gfx_draw_xbm_P+0x2a>
    1826:	cd b7       	in	r28, 0x3d	; 61
    1828:	de b7       	in	r29, 0x3e	; 62
    182a:	08 2f       	mov	r16, r24
    182c:	16 2f       	mov	r17, r22
    182e:	5a 83       	std	Y+2, r21	; 0x02
    1830:	49 83       	std	Y+1, r20	; 0x01
    1832:	60 90 88 06 	lds	r6, 0x0688
    1836:	e0 90 91 06 	lds	r14, 0x0691
    183a:	8e 2d       	mov	r24, r14
    183c:	87 70       	andi	r24, 0x07	; 7
    183e:	2f ef       	ldi	r18, 0xFF	; 255
    1840:	30 e0       	ldi	r19, 0x00	; 0
    1842:	f2 2e       	mov	r15, r18
    1844:	01 c0       	rjmp	.+2      	; 0x1848 <gfx_draw_xbm_P+0x4c>
    1846:	ff 0c       	add	r15, r15
    1848:	8a 95       	dec	r24
    184a:	ea f7       	brpl	.-6      	; 0x1846 <gfx_draw_xbm_P+0x4a>
    184c:	80 2f       	mov	r24, r16
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	01 97       	sbiw	r24, 0x01	; 1
    1852:	68 e0       	ldi	r22, 0x08	; 8
    1854:	70 e0       	ldi	r23, 0x00	; 0
    1856:	0e 94 96 1a 	call	0x352c	; 0x352c <__divmodhi4>
    185a:	6f 5f       	subi	r22, 0xFF	; 255
    185c:	a6 2e       	mov	r10, r22
    185e:	bb 24       	eor	r11, r11
    1860:	c5 01       	movw	r24, r10
    1862:	73 e0       	ldi	r23, 0x03	; 3
    1864:	88 0f       	add	r24, r24
    1866:	99 1f       	adc	r25, r25
    1868:	7a 95       	dec	r23
    186a:	e1 f7       	brne	.-8      	; 0x1864 <gfx_draw_xbm_P+0x68>
    186c:	44 24       	eor	r4, r4
    186e:	55 24       	eor	r5, r5
    1870:	48 1a       	sub	r4, r24
    1872:	59 0a       	sbc	r5, r25
    1874:	cc 24       	eor	r12, r12
    1876:	68 e0       	ldi	r22, 0x08	; 8
    1878:	76 2e       	mov	r7, r22
    187a:	5f ef       	ldi	r21, 0xFF	; 255
    187c:	85 2e       	mov	r8, r21
    187e:	91 2c       	mov	r9, r1
    1880:	bc 82       	std	Y+4, r11	; 0x04
    1882:	ab 82       	std	Y+3, r10	; 0x03
    1884:	71 c0       	rjmp	.+226    	; 0x1968 <gfx_draw_xbm_P+0x16c>
    1886:	8e 2d       	mov	r24, r14
    1888:	87 70       	andi	r24, 0x07	; 7
    188a:	d7 2c       	mov	r13, r7
    188c:	d8 1a       	sub	r13, r24
    188e:	1d 15       	cp	r17, r13
    1890:	48 f4       	brcc	.+18     	; 0x18a4 <gfx_draw_xbm_P+0xa8>
    1892:	8d 2d       	mov	r24, r13
    1894:	81 1b       	sub	r24, r17
    1896:	94 01       	movw	r18, r8
    1898:	02 c0       	rjmp	.+4      	; 0x189e <gfx_draw_xbm_P+0xa2>
    189a:	35 95       	asr	r19
    189c:	27 95       	ror	r18
    189e:	8a 95       	dec	r24
    18a0:	e2 f7       	brpl	.-8      	; 0x189a <gfx_draw_xbm_P+0x9e>
    18a2:	f2 22       	and	r15, r18
    18a4:	8d 2d       	mov	r24, r13
    18a6:	8c 0d       	add	r24, r12
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	8a 9d       	mul	r24, r10
    18ac:	10 01       	movw	r2, r0
    18ae:	8b 9d       	mul	r24, r11
    18b0:	30 0c       	add	r3, r0
    18b2:	9a 9d       	mul	r25, r10
    18b4:	30 0c       	add	r3, r0
    18b6:	11 24       	eor	r1, r1
    18b8:	80 e0       	ldi	r24, 0x00	; 0
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	9e 83       	std	Y+6, r25	; 0x06
    18be:	8d 83       	std	Y+5, r24	; 0x05
    18c0:	43 c0       	rjmp	.+134    	; 0x1948 <gfx_draw_xbm_P+0x14c>
    18c2:	4d 81       	ldd	r20, Y+5	; 0x05
    18c4:	5e 81       	ldd	r21, Y+6	; 0x06
    18c6:	47 70       	andi	r20, 0x07	; 7
    18c8:	50 70       	andi	r21, 0x00	; 0
    18ca:	41 15       	cp	r20, r1
    18cc:	51 05       	cpc	r21, r1
    18ce:	71 f5       	brne	.+92     	; 0x192c <gfx_draw_xbm_P+0x130>
    18d0:	e6 95       	lsr	r30
    18d2:	e6 95       	lsr	r30
    18d4:	e6 95       	lsr	r30
    18d6:	c1 01       	movw	r24, r2
    18d8:	8e 0f       	add	r24, r30
    18da:	91 1d       	adc	r25, r1
    18dc:	fc 01       	movw	r30, r24
    18de:	a9 81       	ldd	r26, Y+1	; 0x01
    18e0:	ba 81       	ldd	r27, Y+2	; 0x02
    18e2:	ea 0f       	add	r30, r26
    18e4:	fb 1f       	adc	r31, r27
    18e6:	e4 0d       	add	r30, r4
    18e8:	f5 1d       	adc	r31, r5
    18ea:	20 e0       	ldi	r18, 0x00	; 0
    18ec:	30 e0       	ldi	r19, 0x00	; 0
    18ee:	6d 81       	ldd	r22, Y+5	; 0x05
    18f0:	7e 81       	ldd	r23, Y+6	; 0x06
    18f2:	94 91       	lpm	r25, Z+
    18f4:	a9 e8       	ldi	r26, 0x89	; 137
    18f6:	b6 e0       	ldi	r27, 0x06	; 6
    18f8:	8c 91       	ld	r24, X
    18fa:	86 95       	lsr	r24
    18fc:	8c 93       	st	X, r24
    18fe:	90 ff       	sbrs	r25, 0
    1900:	02 c0       	rjmp	.+4      	; 0x1906 <gfx_draw_xbm_P+0x10a>
    1902:	80 68       	ori	r24, 0x80	; 128
    1904:	8c 93       	st	X, r24
    1906:	11 96       	adiw	r26, 0x01	; 1
    1908:	86 e0       	ldi	r24, 0x06	; 6
    190a:	a1 39       	cpi	r26, 0x91	; 145
    190c:	b8 07       	cpc	r27, r24
    190e:	11 f0       	breq	.+4      	; 0x1914 <gfx_draw_xbm_P+0x118>
    1910:	96 95       	lsr	r25
    1912:	f2 cf       	rjmp	.-28     	; 0x18f8 <gfx_draw_xbm_P+0xfc>
    1914:	2f 5f       	subi	r18, 0xFF	; 255
    1916:	3f 4f       	sbci	r19, 0xFF	; 255
    1918:	28 30       	cpi	r18, 0x08	; 8
    191a:	31 05       	cpc	r19, r1
    191c:	29 f0       	breq	.+10     	; 0x1928 <gfx_draw_xbm_P+0x12c>
    191e:	ab 81       	ldd	r26, Y+3	; 0x03
    1920:	bc 81       	ldd	r27, Y+4	; 0x04
    1922:	ea 0f       	add	r30, r26
    1924:	fb 1f       	adc	r31, r27
    1926:	e5 cf       	rjmp	.-54     	; 0x18f2 <gfx_draw_xbm_P+0xf6>
    1928:	7e 83       	std	Y+6, r23	; 0x06
    192a:	6d 83       	std	Y+5, r22	; 0x05
    192c:	47 57       	subi	r20, 0x77	; 119
    192e:	59 4f       	sbci	r21, 0xF9	; 249
    1930:	fa 01       	movw	r30, r20
    1932:	80 81       	ld	r24, Z
    1934:	8f 21       	and	r24, r15
    1936:	6f 2d       	mov	r22, r15
    1938:	0e 94 a3 0b 	call	0x1746	; 0x1746 <gfx_display_write2>
    193c:	2d 81       	ldd	r18, Y+5	; 0x05
    193e:	3e 81       	ldd	r19, Y+6	; 0x06
    1940:	2f 5f       	subi	r18, 0xFF	; 255
    1942:	3f 4f       	sbci	r19, 0xFF	; 255
    1944:	3e 83       	std	Y+6, r19	; 0x06
    1946:	2d 83       	std	Y+5, r18	; 0x05
    1948:	ed 81       	ldd	r30, Y+5	; 0x05
    194a:	e0 17       	cp	r30, r16
    194c:	08 f4       	brcc	.+2      	; 0x1950 <gfx_draw_xbm_P+0x154>
    194e:	b9 cf       	rjmp	.-142    	; 0x18c2 <gfx_draw_xbm_P+0xc6>
    1950:	1d 15       	cp	r17, r13
    1952:	08 f4       	brcc	.+2      	; 0x1956 <gfx_draw_xbm_P+0x15a>
    1954:	d1 2e       	mov	r13, r17
    1956:	1d 19       	sub	r17, r13
    1958:	ed 0c       	add	r14, r13
    195a:	cd 0c       	add	r12, r13
    195c:	86 2d       	mov	r24, r6
    195e:	6e 2d       	mov	r22, r14
    1960:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1964:	ff 24       	eor	r15, r15
    1966:	fa 94       	dec	r15
    1968:	11 23       	and	r17, r17
    196a:	09 f0       	breq	.+2      	; 0x196e <gfx_draw_xbm_P+0x172>
    196c:	8c cf       	rjmp	.-232    	; 0x1886 <gfx_draw_xbm_P+0x8a>
    196e:	26 96       	adiw	r28, 0x06	; 6
    1970:	0f b6       	in	r0, 0x3f	; 63
    1972:	f8 94       	cli
    1974:	de bf       	out	0x3e, r29	; 62
    1976:	0f be       	out	0x3f, r0	; 63
    1978:	cd bf       	out	0x3d, r28	; 61
    197a:	cf 91       	pop	r28
    197c:	df 91       	pop	r29
    197e:	1f 91       	pop	r17
    1980:	0f 91       	pop	r16
    1982:	ff 90       	pop	r15
    1984:	ef 90       	pop	r14
    1986:	df 90       	pop	r13
    1988:	cf 90       	pop	r12
    198a:	bf 90       	pop	r11
    198c:	af 90       	pop	r10
    198e:	9f 90       	pop	r9
    1990:	8f 90       	pop	r8
    1992:	7f 90       	pop	r7
    1994:	6f 90       	pop	r6
    1996:	5f 90       	pop	r5
    1998:	4f 90       	pop	r4
    199a:	3f 90       	pop	r3
    199c:	2f 90       	pop	r2
    199e:	08 95       	ret

000019a0 <gfx_draw_xbm>:
    19a0:	2f 92       	push	r2
    19a2:	3f 92       	push	r3
    19a4:	4f 92       	push	r4
    19a6:	5f 92       	push	r5
    19a8:	6f 92       	push	r6
    19aa:	7f 92       	push	r7
    19ac:	8f 92       	push	r8
    19ae:	9f 92       	push	r9
    19b0:	af 92       	push	r10
    19b2:	bf 92       	push	r11
    19b4:	cf 92       	push	r12
    19b6:	df 92       	push	r13
    19b8:	ef 92       	push	r14
    19ba:	ff 92       	push	r15
    19bc:	0f 93       	push	r16
    19be:	1f 93       	push	r17
    19c0:	df 93       	push	r29
    19c2:	cf 93       	push	r28
    19c4:	00 d0       	rcall	.+0      	; 0x19c6 <gfx_draw_xbm+0x26>
    19c6:	00 d0       	rcall	.+0      	; 0x19c8 <gfx_draw_xbm+0x28>
    19c8:	00 d0       	rcall	.+0      	; 0x19ca <gfx_draw_xbm+0x2a>
    19ca:	cd b7       	in	r28, 0x3d	; 61
    19cc:	de b7       	in	r29, 0x3e	; 62
    19ce:	08 2f       	mov	r16, r24
    19d0:	16 2f       	mov	r17, r22
    19d2:	5a 83       	std	Y+2, r21	; 0x02
    19d4:	49 83       	std	Y+1, r20	; 0x01
    19d6:	60 90 88 06 	lds	r6, 0x0688
    19da:	e0 90 91 06 	lds	r14, 0x0691
    19de:	8e 2d       	mov	r24, r14
    19e0:	87 70       	andi	r24, 0x07	; 7
    19e2:	2f ef       	ldi	r18, 0xFF	; 255
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	f2 2e       	mov	r15, r18
    19e8:	01 c0       	rjmp	.+2      	; 0x19ec <gfx_draw_xbm+0x4c>
    19ea:	ff 0c       	add	r15, r15
    19ec:	8a 95       	dec	r24
    19ee:	ea f7       	brpl	.-6      	; 0x19ea <gfx_draw_xbm+0x4a>
    19f0:	80 2f       	mov	r24, r16
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	01 97       	sbiw	r24, 0x01	; 1
    19f6:	68 e0       	ldi	r22, 0x08	; 8
    19f8:	70 e0       	ldi	r23, 0x00	; 0
    19fa:	0e 94 96 1a 	call	0x352c	; 0x352c <__divmodhi4>
    19fe:	6f 5f       	subi	r22, 0xFF	; 255
    1a00:	a6 2e       	mov	r10, r22
    1a02:	bb 24       	eor	r11, r11
    1a04:	c5 01       	movw	r24, r10
    1a06:	a3 e0       	ldi	r26, 0x03	; 3
    1a08:	88 0f       	add	r24, r24
    1a0a:	99 1f       	adc	r25, r25
    1a0c:	aa 95       	dec	r26
    1a0e:	e1 f7       	brne	.-8      	; 0x1a08 <gfx_draw_xbm+0x68>
    1a10:	44 24       	eor	r4, r4
    1a12:	55 24       	eor	r5, r5
    1a14:	48 1a       	sub	r4, r24
    1a16:	59 0a       	sbc	r5, r25
    1a18:	cc 24       	eor	r12, r12
    1a1a:	f8 e0       	ldi	r31, 0x08	; 8
    1a1c:	7f 2e       	mov	r7, r31
    1a1e:	ef ef       	ldi	r30, 0xFF	; 255
    1a20:	8e 2e       	mov	r8, r30
    1a22:	91 2c       	mov	r9, r1
    1a24:	bc 82       	std	Y+4, r11	; 0x04
    1a26:	ab 82       	std	Y+3, r10	; 0x03
    1a28:	71 c0       	rjmp	.+226    	; 0x1b0c <gfx_draw_xbm+0x16c>
    1a2a:	8e 2d       	mov	r24, r14
    1a2c:	87 70       	andi	r24, 0x07	; 7
    1a2e:	d7 2c       	mov	r13, r7
    1a30:	d8 1a       	sub	r13, r24
    1a32:	1d 15       	cp	r17, r13
    1a34:	48 f4       	brcc	.+18     	; 0x1a48 <gfx_draw_xbm+0xa8>
    1a36:	8d 2d       	mov	r24, r13
    1a38:	81 1b       	sub	r24, r17
    1a3a:	94 01       	movw	r18, r8
    1a3c:	02 c0       	rjmp	.+4      	; 0x1a42 <gfx_draw_xbm+0xa2>
    1a3e:	35 95       	asr	r19
    1a40:	27 95       	ror	r18
    1a42:	8a 95       	dec	r24
    1a44:	e2 f7       	brpl	.-8      	; 0x1a3e <gfx_draw_xbm+0x9e>
    1a46:	f2 22       	and	r15, r18
    1a48:	8d 2d       	mov	r24, r13
    1a4a:	8c 0d       	add	r24, r12
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	8a 9d       	mul	r24, r10
    1a50:	10 01       	movw	r2, r0
    1a52:	8b 9d       	mul	r24, r11
    1a54:	30 0c       	add	r3, r0
    1a56:	9a 9d       	mul	r25, r10
    1a58:	30 0c       	add	r3, r0
    1a5a:	11 24       	eor	r1, r1
    1a5c:	80 e0       	ldi	r24, 0x00	; 0
    1a5e:	90 e0       	ldi	r25, 0x00	; 0
    1a60:	9e 83       	std	Y+6, r25	; 0x06
    1a62:	8d 83       	std	Y+5, r24	; 0x05
    1a64:	43 c0       	rjmp	.+134    	; 0x1aec <gfx_draw_xbm+0x14c>
    1a66:	4d 81       	ldd	r20, Y+5	; 0x05
    1a68:	5e 81       	ldd	r21, Y+6	; 0x06
    1a6a:	47 70       	andi	r20, 0x07	; 7
    1a6c:	50 70       	andi	r21, 0x00	; 0
    1a6e:	41 15       	cp	r20, r1
    1a70:	51 05       	cpc	r21, r1
    1a72:	71 f5       	brne	.+92     	; 0x1ad0 <gfx_draw_xbm+0x130>
    1a74:	e6 95       	lsr	r30
    1a76:	e6 95       	lsr	r30
    1a78:	e6 95       	lsr	r30
    1a7a:	c1 01       	movw	r24, r2
    1a7c:	8e 0f       	add	r24, r30
    1a7e:	91 1d       	adc	r25, r1
    1a80:	fc 01       	movw	r30, r24
    1a82:	a9 81       	ldd	r26, Y+1	; 0x01
    1a84:	ba 81       	ldd	r27, Y+2	; 0x02
    1a86:	ea 0f       	add	r30, r26
    1a88:	fb 1f       	adc	r31, r27
    1a8a:	e4 0d       	add	r30, r4
    1a8c:	f5 1d       	adc	r31, r5
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	30 e0       	ldi	r19, 0x00	; 0
    1a92:	6d 81       	ldd	r22, Y+5	; 0x05
    1a94:	7e 81       	ldd	r23, Y+6	; 0x06
    1a96:	90 81       	ld	r25, Z
    1a98:	a9 e8       	ldi	r26, 0x89	; 137
    1a9a:	b6 e0       	ldi	r27, 0x06	; 6
    1a9c:	8c 91       	ld	r24, X
    1a9e:	86 95       	lsr	r24
    1aa0:	8c 93       	st	X, r24
    1aa2:	90 ff       	sbrs	r25, 0
    1aa4:	02 c0       	rjmp	.+4      	; 0x1aaa <gfx_draw_xbm+0x10a>
    1aa6:	80 68       	ori	r24, 0x80	; 128
    1aa8:	8c 93       	st	X, r24
    1aaa:	11 96       	adiw	r26, 0x01	; 1
    1aac:	86 e0       	ldi	r24, 0x06	; 6
    1aae:	a1 39       	cpi	r26, 0x91	; 145
    1ab0:	b8 07       	cpc	r27, r24
    1ab2:	11 f0       	breq	.+4      	; 0x1ab8 <gfx_draw_xbm+0x118>
    1ab4:	96 95       	lsr	r25
    1ab6:	f2 cf       	rjmp	.-28     	; 0x1a9c <gfx_draw_xbm+0xfc>
    1ab8:	2f 5f       	subi	r18, 0xFF	; 255
    1aba:	3f 4f       	sbci	r19, 0xFF	; 255
    1abc:	28 30       	cpi	r18, 0x08	; 8
    1abe:	31 05       	cpc	r19, r1
    1ac0:	29 f0       	breq	.+10     	; 0x1acc <gfx_draw_xbm+0x12c>
    1ac2:	ab 81       	ldd	r26, Y+3	; 0x03
    1ac4:	bc 81       	ldd	r27, Y+4	; 0x04
    1ac6:	ea 0f       	add	r30, r26
    1ac8:	fb 1f       	adc	r31, r27
    1aca:	e5 cf       	rjmp	.-54     	; 0x1a96 <gfx_draw_xbm+0xf6>
    1acc:	7e 83       	std	Y+6, r23	; 0x06
    1ace:	6d 83       	std	Y+5, r22	; 0x05
    1ad0:	47 57       	subi	r20, 0x77	; 119
    1ad2:	59 4f       	sbci	r21, 0xF9	; 249
    1ad4:	fa 01       	movw	r30, r20
    1ad6:	80 81       	ld	r24, Z
    1ad8:	8f 21       	and	r24, r15
    1ada:	6f 2d       	mov	r22, r15
    1adc:	0e 94 a3 0b 	call	0x1746	; 0x1746 <gfx_display_write2>
    1ae0:	2d 81       	ldd	r18, Y+5	; 0x05
    1ae2:	3e 81       	ldd	r19, Y+6	; 0x06
    1ae4:	2f 5f       	subi	r18, 0xFF	; 255
    1ae6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ae8:	3e 83       	std	Y+6, r19	; 0x06
    1aea:	2d 83       	std	Y+5, r18	; 0x05
    1aec:	ed 81       	ldd	r30, Y+5	; 0x05
    1aee:	e0 17       	cp	r30, r16
    1af0:	08 f4       	brcc	.+2      	; 0x1af4 <gfx_draw_xbm+0x154>
    1af2:	b9 cf       	rjmp	.-142    	; 0x1a66 <gfx_draw_xbm+0xc6>
    1af4:	1d 15       	cp	r17, r13
    1af6:	08 f4       	brcc	.+2      	; 0x1afa <gfx_draw_xbm+0x15a>
    1af8:	d1 2e       	mov	r13, r17
    1afa:	1d 19       	sub	r17, r13
    1afc:	ed 0c       	add	r14, r13
    1afe:	cd 0c       	add	r12, r13
    1b00:	86 2d       	mov	r24, r6
    1b02:	6e 2d       	mov	r22, r14
    1b04:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1b08:	ff 24       	eor	r15, r15
    1b0a:	fa 94       	dec	r15
    1b0c:	11 23       	and	r17, r17
    1b0e:	09 f0       	breq	.+2      	; 0x1b12 <gfx_draw_xbm+0x172>
    1b10:	8c cf       	rjmp	.-232    	; 0x1a2a <gfx_draw_xbm+0x8a>
    1b12:	26 96       	adiw	r28, 0x06	; 6
    1b14:	0f b6       	in	r0, 0x3f	; 63
    1b16:	f8 94       	cli
    1b18:	de bf       	out	0x3e, r29	; 62
    1b1a:	0f be       	out	0x3f, r0	; 63
    1b1c:	cd bf       	out	0x3d, r28	; 61
    1b1e:	cf 91       	pop	r28
    1b20:	df 91       	pop	r29
    1b22:	1f 91       	pop	r17
    1b24:	0f 91       	pop	r16
    1b26:	ff 90       	pop	r15
    1b28:	ef 90       	pop	r14
    1b2a:	df 90       	pop	r13
    1b2c:	cf 90       	pop	r12
    1b2e:	bf 90       	pop	r11
    1b30:	af 90       	pop	r10
    1b32:	9f 90       	pop	r9
    1b34:	8f 90       	pop	r8
    1b36:	7f 90       	pop	r7
    1b38:	6f 90       	pop	r6
    1b3a:	5f 90       	pop	r5
    1b3c:	4f 90       	pop	r4
    1b3e:	3f 90       	pop	r3
    1b40:	2f 90       	pop	r2
    1b42:	08 95       	ret

00001b44 <gfx_box>:
    1b44:	af 92       	push	r10
    1b46:	bf 92       	push	r11
    1b48:	cf 92       	push	r12
    1b4a:	df 92       	push	r13
    1b4c:	ef 92       	push	r14
    1b4e:	ff 92       	push	r15
    1b50:	0f 93       	push	r16
    1b52:	1f 93       	push	r17
    1b54:	cf 93       	push	r28
    1b56:	df 93       	push	r29
    1b58:	a8 2e       	mov	r10, r24
    1b5a:	16 2f       	mov	r17, r22
    1b5c:	b0 90 88 06 	lds	r11, 0x0688
    1b60:	f0 90 91 06 	lds	r15, 0x0691
    1b64:	8f 2d       	mov	r24, r15
    1b66:	87 70       	andi	r24, 0x07	; 7
    1b68:	2f ef       	ldi	r18, 0xFF	; 255
    1b6a:	30 e0       	ldi	r19, 0x00	; 0
    1b6c:	02 2f       	mov	r16, r18
    1b6e:	01 c0       	rjmp	.+2      	; 0x1b72 <gfx_box+0x2e>
    1b70:	00 0f       	add	r16, r16
    1b72:	8a 95       	dec	r24
    1b74:	ea f7       	brpl	.-6      	; 0x1b70 <gfx_box+0x2c>
    1b76:	b8 e0       	ldi	r27, 0x08	; 8
    1b78:	cb 2e       	mov	r12, r27
    1b7a:	cf ef       	ldi	r28, 0xFF	; 255
    1b7c:	d0 e0       	ldi	r29, 0x00	; 0
    1b7e:	22 c0       	rjmp	.+68     	; 0x1bc4 <gfx_box+0x80>
    1b80:	8f 2d       	mov	r24, r15
    1b82:	87 70       	andi	r24, 0x07	; 7
    1b84:	ec 2c       	mov	r14, r12
    1b86:	e8 1a       	sub	r14, r24
    1b88:	1e 15       	cp	r17, r14
    1b8a:	48 f4       	brcc	.+18     	; 0x1b9e <gfx_box+0x5a>
    1b8c:	8e 2d       	mov	r24, r14
    1b8e:	81 1b       	sub	r24, r17
    1b90:	9e 01       	movw	r18, r28
    1b92:	02 c0       	rjmp	.+4      	; 0x1b98 <gfx_box+0x54>
    1b94:	35 95       	asr	r19
    1b96:	27 95       	ror	r18
    1b98:	8a 95       	dec	r24
    1b9a:	e2 f7       	brpl	.-8      	; 0x1b94 <gfx_box+0x50>
    1b9c:	02 23       	and	r16, r18
    1b9e:	da 2c       	mov	r13, r10
    1ba0:	05 c0       	rjmp	.+10     	; 0x1bac <gfx_box+0x68>
    1ba2:	80 2f       	mov	r24, r16
    1ba4:	60 2f       	mov	r22, r16
    1ba6:	0e 94 a3 0b 	call	0x1746	; 0x1746 <gfx_display_write2>
    1baa:	da 94       	dec	r13
    1bac:	dd 20       	and	r13, r13
    1bae:	c9 f7       	brne	.-14     	; 0x1ba2 <gfx_box+0x5e>
    1bb0:	1e 15       	cp	r17, r14
    1bb2:	08 f4       	brcc	.+2      	; 0x1bb6 <gfx_box+0x72>
    1bb4:	e1 2e       	mov	r14, r17
    1bb6:	1e 19       	sub	r17, r14
    1bb8:	fe 0c       	add	r15, r14
    1bba:	8b 2d       	mov	r24, r11
    1bbc:	6f 2d       	mov	r22, r15
    1bbe:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1bc2:	0f ef       	ldi	r16, 0xFF	; 255
    1bc4:	11 23       	and	r17, r17
    1bc6:	e1 f6       	brne	.-72     	; 0x1b80 <gfx_box+0x3c>
    1bc8:	df 91       	pop	r29
    1bca:	cf 91       	pop	r28
    1bcc:	1f 91       	pop	r17
    1bce:	0f 91       	pop	r16
    1bd0:	ff 90       	pop	r15
    1bd2:	ef 90       	pop	r14
    1bd4:	df 90       	pop	r13
    1bd6:	cf 90       	pop	r12
    1bd8:	bf 90       	pop	r11
    1bda:	af 90       	pop	r10
    1bdc:	08 95       	ret

00001bde <gfx_vline>:
    1bde:	68 2f       	mov	r22, r24
    1be0:	81 e0       	ldi	r24, 0x01	; 1
    1be2:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <gfx_box>
    1be6:	08 95       	ret

00001be8 <gfx_hline>:
    1be8:	0f 93       	push	r16
    1bea:	1f 93       	push	r17
    1bec:	18 2f       	mov	r17, r24
    1bee:	80 91 91 06 	lds	r24, 0x0691
    1bf2:	87 70       	andi	r24, 0x07	; 7
    1bf4:	21 e0       	ldi	r18, 0x01	; 1
    1bf6:	30 e0       	ldi	r19, 0x00	; 0
    1bf8:	02 2f       	mov	r16, r18
    1bfa:	01 c0       	rjmp	.+2      	; 0x1bfe <gfx_hline+0x16>
    1bfc:	00 0f       	add	r16, r16
    1bfe:	8a 95       	dec	r24
    1c00:	ea f7       	brpl	.-6      	; 0x1bfc <gfx_hline+0x14>
    1c02:	05 c0       	rjmp	.+10     	; 0x1c0e <gfx_hline+0x26>
    1c04:	80 2f       	mov	r24, r16
    1c06:	60 2f       	mov	r22, r16
    1c08:	0e 94 a3 0b 	call	0x1746	; 0x1746 <gfx_display_write2>
    1c0c:	11 50       	subi	r17, 0x01	; 1
    1c0e:	11 23       	and	r17, r17
    1c10:	c9 f7       	brne	.-14     	; 0x1c04 <gfx_hline+0x1c>
    1c12:	1f 91       	pop	r17
    1c14:	0f 91       	pop	r16
    1c16:	08 95       	ret

00001c18 <gfx_lineTo>:
    1c18:	9f 92       	push	r9
    1c1a:	af 92       	push	r10
    1c1c:	bf 92       	push	r11
    1c1e:	cf 92       	push	r12
    1c20:	df 92       	push	r13
    1c22:	ef 92       	push	r14
    1c24:	ff 92       	push	r15
    1c26:	0f 93       	push	r16
    1c28:	1f 93       	push	r17
    1c2a:	08 2f       	mov	r16, r24
    1c2c:	16 2f       	mov	r17, r22
    1c2e:	f0 90 88 06 	lds	r15, 0x0688
    1c32:	e0 90 91 06 	lds	r14, 0x0691
    1c36:	8f 15       	cp	r24, r15
    1c38:	61 f4       	brne	.+24     	; 0x1c52 <gfx_lineTo+0x3a>
    1c3a:	e6 16       	cp	r14, r22
    1c3c:	18 f4       	brcc	.+6      	; 0x1c44 <gfx_lineTo+0x2c>
    1c3e:	86 2f       	mov	r24, r22
    1c40:	8e 19       	sub	r24, r14
    1c42:	04 c0       	rjmp	.+8      	; 0x1c4c <gfx_lineTo+0x34>
    1c44:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1c48:	8e 2d       	mov	r24, r14
    1c4a:	81 1b       	sub	r24, r17
    1c4c:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <gfx_vline>
    1c50:	5e c0       	rjmp	.+188    	; 0x1d0e <gfx_lineTo+0xf6>
    1c52:	de 2c       	mov	r13, r14
    1c54:	6e 15       	cp	r22, r14
    1c56:	59 f4       	brne	.+22     	; 0x1c6e <gfx_lineTo+0x56>
    1c58:	f8 16       	cp	r15, r24
    1c5a:	10 f4       	brcc	.+4      	; 0x1c60 <gfx_lineTo+0x48>
    1c5c:	8f 19       	sub	r24, r15
    1c5e:	04 c0       	rjmp	.+8      	; 0x1c68 <gfx_lineTo+0x50>
    1c60:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1c64:	8f 2d       	mov	r24, r15
    1c66:	80 1b       	sub	r24, r16
    1c68:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <gfx_hline>
    1c6c:	50 c0       	rjmp	.+160    	; 0x1d0e <gfx_lineTo+0xf6>
    1c6e:	8f 15       	cp	r24, r15
    1c70:	28 f4       	brcc	.+10     	; 0x1c7c <gfx_lineTo+0x64>
    1c72:	af 2c       	mov	r10, r15
    1c74:	a8 1a       	sub	r10, r24
    1c76:	99 24       	eor	r9, r9
    1c78:	9a 94       	dec	r9
    1c7a:	09 c0       	rjmp	.+18     	; 0x1c8e <gfx_lineTo+0x76>
    1c7c:	f8 16       	cp	r15, r24
    1c7e:	18 f0       	brcs	.+6      	; 0x1c86 <gfx_lineTo+0x6e>
    1c80:	99 24       	eor	r9, r9
    1c82:	aa 24       	eor	r10, r10
    1c84:	04 c0       	rjmp	.+8      	; 0x1c8e <gfx_lineTo+0x76>
    1c86:	a8 2e       	mov	r10, r24
    1c88:	af 18       	sub	r10, r15
    1c8a:	99 24       	eor	r9, r9
    1c8c:	93 94       	inc	r9
    1c8e:	1e 15       	cp	r17, r14
    1c90:	28 f4       	brcc	.+10     	; 0x1c9c <gfx_lineTo+0x84>
    1c92:	be 2c       	mov	r11, r14
    1c94:	b1 1a       	sub	r11, r17
    1c96:	cc 24       	eor	r12, r12
    1c98:	ca 94       	dec	r12
    1c9a:	09 c0       	rjmp	.+18     	; 0x1cae <gfx_lineTo+0x96>
    1c9c:	e1 16       	cp	r14, r17
    1c9e:	18 f0       	brcs	.+6      	; 0x1ca6 <gfx_lineTo+0x8e>
    1ca0:	cc 24       	eor	r12, r12
    1ca2:	bb 24       	eor	r11, r11
    1ca4:	04 c0       	rjmp	.+8      	; 0x1cae <gfx_lineTo+0x96>
    1ca6:	b1 2e       	mov	r11, r17
    1ca8:	be 18       	sub	r11, r14
    1caa:	cc 24       	eor	r12, r12
    1cac:	c3 94       	inc	r12
    1cae:	81 e0       	ldi	r24, 0x01	; 1
    1cb0:	0e 94 eb 0b 	call	0x17d6	; 0x17d6 <gfx_pixel>
    1cb4:	ba 14       	cp	r11, r10
    1cb6:	b0 f4       	brcc	.+44     	; 0x1ce4 <gfx_lineTo+0xcc>
    1cb8:	ea 2c       	mov	r14, r10
    1cba:	e6 94       	lsr	r14
    1cbc:	e1 94       	neg	r14
    1cbe:	f9 0c       	add	r15, r9
    1cc0:	eb 0c       	add	r14, r11
    1cc2:	1e 14       	cp	r1, r14
    1cc4:	14 f4       	brge	.+4      	; 0x1cca <gfx_lineTo+0xb2>
    1cc6:	ea 18       	sub	r14, r10
    1cc8:	dc 0c       	add	r13, r12
    1cca:	8f 2d       	mov	r24, r15
    1ccc:	6d 2d       	mov	r22, r13
    1cce:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1cd2:	81 e0       	ldi	r24, 0x01	; 1
    1cd4:	0e 94 eb 0b 	call	0x17d6	; 0x17d6 <gfx_pixel>
    1cd8:	f9 0c       	add	r15, r9
    1cda:	8f 2d       	mov	r24, r15
    1cdc:	89 19       	sub	r24, r9
    1cde:	80 17       	cp	r24, r16
    1ce0:	79 f7       	brne	.-34     	; 0x1cc0 <gfx_lineTo+0xa8>
    1ce2:	15 c0       	rjmp	.+42     	; 0x1d0e <gfx_lineTo+0xf6>
    1ce4:	db 2c       	mov	r13, r11
    1ce6:	d6 94       	lsr	r13
    1ce8:	d1 94       	neg	r13
    1cea:	ec 0c       	add	r14, r12
    1cec:	da 0c       	add	r13, r10
    1cee:	1d 14       	cp	r1, r13
    1cf0:	14 f4       	brge	.+4      	; 0x1cf6 <gfx_lineTo+0xde>
    1cf2:	db 18       	sub	r13, r11
    1cf4:	f9 0c       	add	r15, r9
    1cf6:	8f 2d       	mov	r24, r15
    1cf8:	6e 2d       	mov	r22, r14
    1cfa:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1cfe:	81 e0       	ldi	r24, 0x01	; 1
    1d00:	0e 94 eb 0b 	call	0x17d6	; 0x17d6 <gfx_pixel>
    1d04:	ec 0c       	add	r14, r12
    1d06:	8e 2d       	mov	r24, r14
    1d08:	8c 19       	sub	r24, r12
    1d0a:	81 17       	cp	r24, r17
    1d0c:	79 f7       	brne	.-34     	; 0x1cec <gfx_lineTo+0xd4>
    1d0e:	80 2f       	mov	r24, r16
    1d10:	61 2f       	mov	r22, r17
    1d12:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1d16:	1f 91       	pop	r17
    1d18:	0f 91       	pop	r16
    1d1a:	ff 90       	pop	r15
    1d1c:	ef 90       	pop	r14
    1d1e:	df 90       	pop	r13
    1d20:	cf 90       	pop	r12
    1d22:	bf 90       	pop	r11
    1d24:	af 90       	pop	r10
    1d26:	9f 90       	pop	r9
    1d28:	08 95       	ret

00001d2a <gfx_print_char_base>:
    1d2a:	8f 92       	push	r8
    1d2c:	9f 92       	push	r9
    1d2e:	af 92       	push	r10
    1d30:	bf 92       	push	r11
    1d32:	cf 92       	push	r12
    1d34:	df 92       	push	r13
    1d36:	ef 92       	push	r14
    1d38:	ff 92       	push	r15
    1d3a:	0f 93       	push	r16
    1d3c:	1f 93       	push	r17
    1d3e:	cf 93       	push	r28
    1d40:	df 93       	push	r29
    1d42:	06 2f       	mov	r16, r22
    1d44:	98 2f       	mov	r25, r24
    1d46:	90 52       	subi	r25, 0x20	; 32
    1d48:	90 36       	cpi	r25, 0x60	; 96
    1d4a:	08 f0       	brcs	.+2      	; 0x1d4e <gfx_print_char_base+0x24>
    1d4c:	80 e8       	ldi	r24, 0x80	; 128
    1d4e:	80 52       	subi	r24, 0x20	; 32
    1d50:	96 e0       	ldi	r25, 0x06	; 6
    1d52:	89 9f       	mul	r24, r25
    1d54:	e0 01       	movw	r28, r0
    1d56:	11 24       	eor	r1, r1
    1d58:	c2 5c       	subi	r28, 0xC2	; 194
    1d5a:	dd 4f       	sbci	r29, 0xFD	; 253
    1d5c:	18 81       	ld	r17, Y
    1d5e:	80 91 87 06 	lds	r24, 0x0687
    1d62:	88 23       	and	r24, r24
    1d64:	09 f4       	brne	.+2      	; 0x1d68 <gfx_print_char_base+0x3e>
    1d66:	1f e1       	ldi	r17, 0x1F	; 31
    1d68:	e0 2e       	mov	r14, r16
    1d6a:	ff 24       	eor	r15, r15
    1d6c:	e7 fc       	sbrc	r14, 7
    1d6e:	f0 94       	com	r15
    1d70:	8f ef       	ldi	r24, 0xFF	; 255
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	6c 01       	movw	r12, r24
    1d76:	0e 2c       	mov	r0, r14
    1d78:	02 c0       	rjmp	.+4      	; 0x1d7e <gfx_print_char_base+0x54>
    1d7a:	cc 0c       	add	r12, r12
    1d7c:	dd 1c       	adc	r13, r13
    1d7e:	0a 94       	dec	r0
    1d80:	e2 f7       	brpl	.-8      	; 0x1d7a <gfx_print_char_base+0x50>
    1d82:	aa 24       	eor	r10, r10
    1d84:	bb 24       	eor	r11, r11
    1d86:	ae 18       	sub	r10, r14
    1d88:	bf 08       	sbc	r11, r15
    1d8a:	0a 2c       	mov	r0, r10
    1d8c:	02 c0       	rjmp	.+4      	; 0x1d92 <gfx_print_char_base+0x68>
    1d8e:	95 95       	asr	r25
    1d90:	87 95       	ror	r24
    1d92:	0a 94       	dec	r0
    1d94:	e2 f7       	brpl	.-8      	; 0x1d8e <gfx_print_char_base+0x64>
    1d96:	d8 2e       	mov	r13, r24
    1d98:	85 e0       	ldi	r24, 0x05	; 5
    1d9a:	88 2e       	mov	r8, r24
    1d9c:	91 2c       	mov	r9, r1
    1d9e:	8c 0e       	add	r8, r28
    1da0:	9d 1e       	adc	r9, r29
    1da2:	10 ff       	sbrs	r17, 0
    1da4:	16 c0       	rjmp	.+44     	; 0x1dd2 <gfx_print_char_base+0xa8>
    1da6:	89 81       	ldd	r24, Y+1	; 0x01
    1da8:	07 fd       	sbrc	r16, 7
    1daa:	09 c0       	rjmp	.+18     	; 0x1dbe <gfx_print_char_base+0x94>
    1dac:	90 e0       	ldi	r25, 0x00	; 0
    1dae:	0e 2c       	mov	r0, r14
    1db0:	02 c0       	rjmp	.+4      	; 0x1db6 <gfx_print_char_base+0x8c>
    1db2:	88 0f       	add	r24, r24
    1db4:	99 1f       	adc	r25, r25
    1db6:	0a 94       	dec	r0
    1db8:	e2 f7       	brpl	.-8      	; 0x1db2 <gfx_print_char_base+0x88>
    1dba:	6c 2d       	mov	r22, r12
    1dbc:	08 c0       	rjmp	.+16     	; 0x1dce <gfx_print_char_base+0xa4>
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	0a 2c       	mov	r0, r10
    1dc2:	02 c0       	rjmp	.+4      	; 0x1dc8 <gfx_print_char_base+0x9e>
    1dc4:	95 95       	asr	r25
    1dc6:	87 95       	ror	r24
    1dc8:	0a 94       	dec	r0
    1dca:	e2 f7       	brpl	.-8      	; 0x1dc4 <gfx_print_char_base+0x9a>
    1dcc:	6d 2d       	mov	r22, r13
    1dce:	0e 94 a3 0b 	call	0x1746	; 0x1746 <gfx_display_write2>
    1dd2:	21 96       	adiw	r28, 0x01	; 1
    1dd4:	c8 15       	cp	r28, r8
    1dd6:	d9 05       	cpc	r29, r9
    1dd8:	11 f0       	breq	.+4      	; 0x1dde <gfx_print_char_base+0xb4>
    1dda:	16 95       	lsr	r17
    1ddc:	e2 cf       	rjmp	.-60     	; 0x1da2 <gfx_print_char_base+0x78>
    1dde:	07 fd       	sbrc	r16, 7
    1de0:	03 c0       	rjmp	.+6      	; 0x1de8 <gfx_print_char_base+0xbe>
    1de2:	80 e0       	ldi	r24, 0x00	; 0
    1de4:	6c 2d       	mov	r22, r12
    1de6:	02 c0       	rjmp	.+4      	; 0x1dec <gfx_print_char_base+0xc2>
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	6d 2d       	mov	r22, r13
    1dec:	0e 94 a3 0b 	call	0x1746	; 0x1746 <gfx_display_write2>
    1df0:	df 91       	pop	r29
    1df2:	cf 91       	pop	r28
    1df4:	1f 91       	pop	r17
    1df6:	0f 91       	pop	r16
    1df8:	ff 90       	pop	r15
    1dfa:	ef 90       	pop	r14
    1dfc:	df 90       	pop	r13
    1dfe:	cf 90       	pop	r12
    1e00:	bf 90       	pop	r11
    1e02:	af 90       	pop	r10
    1e04:	9f 90       	pop	r9
    1e06:	8f 90       	pop	r8
    1e08:	08 95       	ret

00001e0a <gfx_print_char>:
    1e0a:	ff 92       	push	r15
    1e0c:	0f 93       	push	r16
    1e0e:	1f 93       	push	r17
    1e10:	08 2f       	mov	r16, r24
    1e12:	f0 90 88 06 	lds	r15, 0x0688
    1e16:	10 91 91 06 	lds	r17, 0x0691
    1e1a:	17 70       	andi	r17, 0x07	; 7
    1e1c:	61 2f       	mov	r22, r17
    1e1e:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <gfx_print_char_base>
    1e22:	11 23       	and	r17, r17
    1e24:	91 f0       	breq	.+36     	; 0x1e4a <gfx_print_char+0x40>
    1e26:	60 91 91 06 	lds	r22, 0x0691
    1e2a:	68 5f       	subi	r22, 0xF8	; 248
    1e2c:	8f 2d       	mov	r24, r15
    1e2e:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1e32:	61 2f       	mov	r22, r17
    1e34:	68 50       	subi	r22, 0x08	; 8
    1e36:	80 2f       	mov	r24, r16
    1e38:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <gfx_print_char_base>
    1e3c:	60 91 91 06 	lds	r22, 0x0691
    1e40:	68 50       	subi	r22, 0x08	; 8
    1e42:	80 91 88 06 	lds	r24, 0x0688
    1e46:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1e4a:	1f 91       	pop	r17
    1e4c:	0f 91       	pop	r16
    1e4e:	ff 90       	pop	r15
    1e50:	08 95       	ret

00001e52 <gfx_term_print>:
    1e52:	1f 93       	push	r17
    1e54:	cf 93       	push	r28
    1e56:	df 93       	push	r29
    1e58:	ec 01       	movw	r28, r24
    1e5a:	10 92 87 06 	sts	0x0687, r1
    1e5e:	36 c0       	rjmp	.+108    	; 0x1ecc <gfx_term_print+0x7a>
    1e60:	1a 30       	cpi	r17, 0x0A	; 10
    1e62:	69 f4       	brne	.+26     	; 0x1e7e <gfx_term_print+0x2c>
    1e64:	10 92 92 06 	sts	0x0692, r1
    1e68:	80 91 86 06 	lds	r24, 0x0686
    1e6c:	8f 5f       	subi	r24, 0xFF	; 255
    1e6e:	80 93 86 06 	sts	0x0686, r24
    1e72:	88 30       	cpi	r24, 0x08	; 8
    1e74:	59 f5       	brne	.+86     	; 0x1ecc <gfx_term_print+0x7a>
    1e76:	81 e0       	ldi	r24, 0x01	; 1
    1e78:	0e 94 31 0b 	call	0x1662	; 0x1662 <gfx_term_scroll>
    1e7c:	27 c0       	rjmp	.+78     	; 0x1ecc <gfx_term_print+0x7a>
    1e7e:	1d 30       	cpi	r17, 0x0D	; 13
    1e80:	29 f1       	breq	.+74     	; 0x1ecc <gfx_term_print+0x7a>
    1e82:	80 91 92 06 	lds	r24, 0x0692
    1e86:	85 31       	cpi	r24, 0x15	; 21
    1e88:	60 f0       	brcs	.+24     	; 0x1ea2 <gfx_term_print+0x50>
    1e8a:	10 92 92 06 	sts	0x0692, r1
    1e8e:	80 91 86 06 	lds	r24, 0x0686
    1e92:	8f 5f       	subi	r24, 0xFF	; 255
    1e94:	80 93 86 06 	sts	0x0686, r24
    1e98:	88 30       	cpi	r24, 0x08	; 8
    1e9a:	19 f4       	brne	.+6      	; 0x1ea2 <gfx_term_print+0x50>
    1e9c:	81 e0       	ldi	r24, 0x01	; 1
    1e9e:	0e 94 31 0b 	call	0x1662	; 0x1662 <gfx_term_scroll>
    1ea2:	90 91 92 06 	lds	r25, 0x0692
    1ea6:	89 2f       	mov	r24, r25
    1ea8:	88 0f       	add	r24, r24
    1eaa:	89 0f       	add	r24, r25
    1eac:	60 91 86 06 	lds	r22, 0x0686
    1eb0:	66 0f       	add	r22, r22
    1eb2:	66 0f       	add	r22, r22
    1eb4:	66 0f       	add	r22, r22
    1eb6:	88 0f       	add	r24, r24
    1eb8:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <gfx_move>
    1ebc:	81 2f       	mov	r24, r17
    1ebe:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <gfx_print_char>
    1ec2:	80 91 92 06 	lds	r24, 0x0692
    1ec6:	8f 5f       	subi	r24, 0xFF	; 255
    1ec8:	80 93 92 06 	sts	0x0692, r24
    1ecc:	19 91       	ld	r17, Y+
    1ece:	11 23       	and	r17, r17
    1ed0:	39 f6       	brne	.-114    	; 0x1e60 <gfx_term_print+0xe>
    1ed2:	df 91       	pop	r29
    1ed4:	cf 91       	pop	r28
    1ed6:	1f 91       	pop	r17
    1ed8:	08 95       	ret

00001eda <gfx_print_text_P>:
    1eda:	cf 93       	push	r28
    1edc:	df 93       	push	r29
    1ede:	ec 01       	movw	r28, r24
    1ee0:	05 c0       	rjmp	.+10     	; 0x1eec <gfx_print_text_P+0x12>
    1ee2:	21 96       	adiw	r28, 0x01	; 1
    1ee4:	f9 01       	movw	r30, r18
    1ee6:	84 91       	lpm	r24, Z+
    1ee8:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <gfx_print_char>
    1eec:	9e 01       	movw	r18, r28
    1eee:	fe 01       	movw	r30, r28
    1ef0:	94 91       	lpm	r25, Z+
    1ef2:	99 23       	and	r25, r25
    1ef4:	b1 f7       	brne	.-20     	; 0x1ee2 <gfx_print_text_P+0x8>
    1ef6:	df 91       	pop	r29
    1ef8:	cf 91       	pop	r28
    1efa:	08 95       	ret

00001efc <gfx_print_text>:
    1efc:	cf 93       	push	r28
    1efe:	df 93       	push	r29
    1f00:	ec 01       	movw	r28, r24
    1f02:	03 c0       	rjmp	.+6      	; 0x1f0a <gfx_print_text+0xe>
    1f04:	21 96       	adiw	r28, 0x01	; 1
    1f06:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <gfx_print_char>
    1f0a:	88 81       	ld	r24, Y
    1f0c:	88 23       	and	r24, r24
    1f0e:	d1 f7       	brne	.-12     	; 0x1f04 <gfx_print_text+0x8>
    1f10:	df 91       	pop	r29
    1f12:	cf 91       	pop	r28
    1f14:	08 95       	ret

00001f16 <_copro_check_busy>:
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	28 2f       	mov	r18, r24
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	f9 01       	movw	r30, r18
    1f1e:	83 e0       	ldi	r24, 0x03	; 3
    1f20:	ee 0f       	add	r30, r30
    1f22:	ff 1f       	adc	r31, r31
    1f24:	8a 95       	dec	r24
    1f26:	e1 f7       	brne	.-8      	; 0x1f20 <_copro_check_busy+0xa>
    1f28:	e2 1b       	sub	r30, r18
    1f2a:	f3 0b       	sbc	r31, r19
    1f2c:	e7 56       	subi	r30, 0x67	; 103
    1f2e:	f9 4f       	sbci	r31, 0xF9	; 249
    1f30:	80 81       	ld	r24, Z
    1f32:	8f 3f       	cpi	r24, 0xFF	; 255
    1f34:	09 f0       	breq	.+2      	; 0x1f38 <_copro_check_busy+0x22>
    1f36:	91 e0       	ldi	r25, 0x01	; 1
    1f38:	89 2f       	mov	r24, r25
    1f3a:	08 95       	ret

00001f3c <copro_update>:
    1f3c:	f8 94       	cli
    1f3e:	90 91 d1 06 	lds	r25, 0x06D1
    1f42:	80 e0       	ldi	r24, 0x00	; 0
    1f44:	e1 ed       	ldi	r30, 0xD1	; 209
    1f46:	f6 e0       	ldi	r31, 0x06	; 6
    1f48:	22 91       	ld	r18, -Z
    1f4a:	82 0f       	add	r24, r18
    1f4c:	91 1d       	adc	r25, r1
    1f4e:	90 93 b3 06 	sts	0x06B3, r25
    1f52:	80 93 b2 06 	sts	0x06B2, r24
    1f56:	93 81       	ldd	r25, Z+3	; 0x03
    1f58:	80 e0       	ldi	r24, 0x00	; 0
    1f5a:	22 81       	ldd	r18, Z+2	; 0x02
    1f5c:	82 0f       	add	r24, r18
    1f5e:	91 1d       	adc	r25, r1
    1f60:	90 93 b5 06 	sts	0x06B5, r25
    1f64:	80 93 b4 06 	sts	0x06B4, r24
    1f68:	95 81       	ldd	r25, Z+5	; 0x05
    1f6a:	80 e0       	ldi	r24, 0x00	; 0
    1f6c:	24 81       	ldd	r18, Z+4	; 0x04
    1f6e:	82 0f       	add	r24, r18
    1f70:	91 1d       	adc	r25, r1
    1f72:	90 93 b7 06 	sts	0x06B7, r25
    1f76:	80 93 b6 06 	sts	0x06B6, r24
    1f7a:	97 81       	ldd	r25, Z+7	; 0x07
    1f7c:	80 e0       	ldi	r24, 0x00	; 0
    1f7e:	26 81       	ldd	r18, Z+6	; 0x06
    1f80:	82 0f       	add	r24, r18
    1f82:	91 1d       	adc	r25, r1
    1f84:	90 93 b9 06 	sts	0x06B9, r25
    1f88:	80 93 b8 06 	sts	0x06B8, r24
    1f8c:	91 85       	ldd	r25, Z+9	; 0x09
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	20 85       	ldd	r18, Z+8	; 0x08
    1f92:	82 0f       	add	r24, r18
    1f94:	91 1d       	adc	r25, r1
    1f96:	90 93 bb 06 	sts	0x06BB, r25
    1f9a:	80 93 ba 06 	sts	0x06BA, r24
    1f9e:	78 94       	sei
    1fa0:	f8 94       	cli
    1fa2:	20 91 da 06 	lds	r18, 0x06DA
    1fa6:	80 91 95 06 	lds	r24, 0x0695
    1faa:	90 91 96 06 	lds	r25, 0x0696
    1fae:	82 0f       	add	r24, r18
    1fb0:	91 1d       	adc	r25, r1
    1fb2:	30 91 db 06 	lds	r19, 0x06DB
    1fb6:	20 e0       	ldi	r18, 0x00	; 0
    1fb8:	82 0f       	add	r24, r18
    1fba:	93 1f       	adc	r25, r19
    1fbc:	90 93 af 06 	sts	0x06AF, r25
    1fc0:	80 93 ae 06 	sts	0x06AE, r24
    1fc4:	20 91 dc 06 	lds	r18, 0x06DC
    1fc8:	80 91 93 06 	lds	r24, 0x0693
    1fcc:	90 91 94 06 	lds	r25, 0x0694
    1fd0:	82 0f       	add	r24, r18
    1fd2:	91 1d       	adc	r25, r1
    1fd4:	30 91 dd 06 	lds	r19, 0x06DD
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	82 0f       	add	r24, r18
    1fdc:	93 1f       	adc	r25, r19
    1fde:	90 93 c7 06 	sts	0x06C7, r25
    1fe2:	80 93 c6 06 	sts	0x06C6, r24
    1fe6:	90 91 df 06 	lds	r25, 0x06DF
    1fea:	80 e0       	ldi	r24, 0x00	; 0
    1fec:	20 91 de 06 	lds	r18, 0x06DE
    1ff0:	82 0f       	add	r24, r18
    1ff2:	91 1d       	adc	r25, r1
    1ff4:	90 93 ef 06 	sts	0x06EF, r25
    1ff8:	80 93 ee 06 	sts	0x06EE, r24
    1ffc:	90 91 e1 06 	lds	r25, 0x06E1
    2000:	80 e0       	ldi	r24, 0x00	; 0
    2002:	20 91 e0 06 	lds	r18, 0x06E0
    2006:	82 0f       	add	r24, r18
    2008:	91 1d       	adc	r25, r1
    200a:	90 93 c5 06 	sts	0x06C5, r25
    200e:	80 93 c4 06 	sts	0x06C4, r24
    2012:	90 91 e3 06 	lds	r25, 0x06E3
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	20 91 e2 06 	lds	r18, 0x06E2
    201c:	82 0f       	add	r24, r18
    201e:	91 1d       	adc	r25, r1
    2020:	90 93 98 06 	sts	0x0698, r25
    2024:	80 93 97 06 	sts	0x0697, r24
    2028:	90 91 e5 06 	lds	r25, 0x06E5
    202c:	80 e0       	ldi	r24, 0x00	; 0
    202e:	20 91 e4 06 	lds	r18, 0x06E4
    2032:	82 0f       	add	r24, r18
    2034:	91 1d       	adc	r25, r1
    2036:	90 93 cf 06 	sts	0x06CF, r25
    203a:	80 93 ce 06 	sts	0x06CE, r24
    203e:	78 94       	sei
    2040:	f8 94       	cli
    2042:	90 91 e8 06 	lds	r25, 0x06E8
    2046:	80 e0       	ldi	r24, 0x00	; 0
    2048:	20 91 e7 06 	lds	r18, 0x06E7
    204c:	82 0f       	add	r24, r18
    204e:	91 1d       	adc	r25, r1
    2050:	90 93 b1 06 	sts	0x06B1, r25
    2054:	80 93 b0 06 	sts	0x06B0, r24
    2058:	90 91 ea 06 	lds	r25, 0x06EA
    205c:	80 e0       	ldi	r24, 0x00	; 0
    205e:	20 91 e9 06 	lds	r18, 0x06E9
    2062:	82 0f       	add	r24, r18
    2064:	91 1d       	adc	r25, r1
    2066:	90 93 ec 06 	sts	0x06EC, r25
    206a:	80 93 eb 06 	sts	0x06EB, r24
    206e:	78 94       	sei
    2070:	81 e0       	ldi	r24, 0x01	; 1
    2072:	08 95       	ret

00002074 <copro_stop>:
    2074:	f8 94       	cli
    2076:	81 e0       	ldi	r24, 0x01	; 1
    2078:	80 93 99 06 	sts	0x0699, r24
    207c:	78 94       	sei
    207e:	08 95       	ret

00002080 <copro_stopImmediate>:
    2080:	f8 94       	cli
    2082:	8a e0       	ldi	r24, 0x0A	; 10
    2084:	80 93 99 06 	sts	0x0699, r24
    2088:	78 94       	sei
    208a:	81 e0       	ldi	r24, 0x01	; 1
    208c:	08 95       	ret

0000208e <copro_setPWM>:
    208e:	f8 94       	cli
    2090:	25 e0       	ldi	r18, 0x05	; 5
    2092:	20 93 99 06 	sts	0x0699, r18
    2096:	80 93 9a 06 	sts	0x069A, r24
    209a:	90 93 9b 06 	sts	0x069B, r25
    209e:	60 93 9c 06 	sts	0x069C, r22
    20a2:	70 93 9d 06 	sts	0x069D, r23
    20a6:	78 94       	sei
    20a8:	81 e0       	ldi	r24, 0x01	; 1
    20aa:	08 95       	ret

000020ac <copro_setSpeed>:
    20ac:	f8 94       	cli
    20ae:	22 e0       	ldi	r18, 0x02	; 2
    20b0:	20 93 99 06 	sts	0x0699, r18
    20b4:	80 93 9a 06 	sts	0x069A, r24
    20b8:	90 93 9b 06 	sts	0x069B, r25
    20bc:	60 93 9c 06 	sts	0x069C, r22
    20c0:	70 93 9d 06 	sts	0x069D, r23
    20c4:	78 94       	sei
    20c6:	81 e0       	ldi	r24, 0x01	; 1
    20c8:	08 95       	ret

000020ca <copro_setTargetAbs>:
    20ca:	20 91 95 06 	lds	r18, 0x0695
    20ce:	30 91 96 06 	lds	r19, 0x0696
    20d2:	fc 01       	movw	r30, r24
    20d4:	e2 1b       	sub	r30, r18
    20d6:	f3 0b       	sbc	r31, r19
    20d8:	9f 01       	movw	r18, r30
    20da:	80 91 93 06 	lds	r24, 0x0693
    20de:	90 91 94 06 	lds	r25, 0x0694
    20e2:	68 1b       	sub	r22, r24
    20e4:	79 0b       	sbc	r23, r25
    20e6:	f8 94       	cli
    20e8:	83 e0       	ldi	r24, 0x03	; 3
    20ea:	80 93 99 06 	sts	0x0699, r24
    20ee:	e0 93 9a 06 	sts	0x069A, r30
    20f2:	30 93 9b 06 	sts	0x069B, r19
    20f6:	60 93 9c 06 	sts	0x069C, r22
    20fa:	70 93 9d 06 	sts	0x069D, r23
    20fe:	40 93 9e 06 	sts	0x069E, r20
    2102:	50 93 9f 06 	sts	0x069F, r21
    2106:	78 94       	sei
    2108:	81 e0       	ldi	r24, 0x01	; 1
    210a:	08 95       	ret

0000210c <copro_setTargetRel>:
    210c:	f8 94       	cli
    210e:	24 e0       	ldi	r18, 0x04	; 4
    2110:	20 93 99 06 	sts	0x0699, r18
    2114:	80 93 9a 06 	sts	0x069A, r24
    2118:	90 93 9b 06 	sts	0x069B, r25
    211c:	60 93 9c 06 	sts	0x069C, r22
    2120:	70 93 9d 06 	sts	0x069D, r23
    2124:	40 93 9e 06 	sts	0x069E, r20
    2128:	50 93 9f 06 	sts	0x069F, r21
    212c:	78 94       	sei
    212e:	81 e0       	ldi	r24, 0x01	; 1
    2130:	08 95       	ret

00002132 <copro_setSpeedParameters>:
    2132:	78 94       	sei
    2134:	90 91 a7 06 	lds	r25, 0x06A7
    2138:	20 e1       	ldi	r18, 0x10	; 16
    213a:	37 e2       	ldi	r19, 0x27	; 39
    213c:	21 50       	subi	r18, 0x01	; 1
    213e:	30 40       	sbci	r19, 0x00	; 0
    2140:	11 f0       	breq	.+4      	; 0x2146 <copro_setSpeedParameters+0x14>
    2142:	9f 3f       	cpi	r25, 0xFF	; 255
    2144:	d9 f7       	brne	.-10     	; 0x213c <copro_setSpeedParameters+0xa>
    2146:	f8 94       	cli
    2148:	96 e0       	ldi	r25, 0x06	; 6
    214a:	90 93 a7 06 	sts	0x06A7, r25
    214e:	80 93 a8 06 	sts	0x06A8, r24
    2152:	60 93 a9 06 	sts	0x06A9, r22
    2156:	40 93 aa 06 	sts	0x06AA, r20
    215a:	78 94       	sei
    215c:	81 e0       	ldi	r24, 0x01	; 1
    215e:	08 95       	ret

00002160 <copro_setPositionParameters>:
    2160:	81 e0       	ldi	r24, 0x01	; 1
    2162:	08 95       	ret

00002164 <copro_resetOdometry>:
    2164:	f8 94       	cli
    2166:	30 91 dd 06 	lds	r19, 0x06DD
    216a:	20 e0       	ldi	r18, 0x00	; 0
    216c:	40 91 dc 06 	lds	r20, 0x06DC
    2170:	f9 01       	movw	r30, r18
    2172:	e4 0f       	add	r30, r20
    2174:	f1 1d       	adc	r31, r1
    2176:	af 01       	movw	r20, r30
    2178:	30 91 db 06 	lds	r19, 0x06DB
    217c:	20 e0       	ldi	r18, 0x00	; 0
    217e:	e0 91 da 06 	lds	r30, 0x06DA
    2182:	2e 0f       	add	r18, r30
    2184:	31 1d       	adc	r19, r1
    2186:	fc 01       	movw	r30, r24
    2188:	e2 1b       	sub	r30, r18
    218a:	f3 0b       	sbc	r31, r19
    218c:	f0 93 96 06 	sts	0x0696, r31
    2190:	e0 93 95 06 	sts	0x0695, r30
    2194:	9b 01       	movw	r18, r22
    2196:	24 1b       	sub	r18, r20
    2198:	35 0b       	sbc	r19, r21
    219a:	30 93 94 06 	sts	0x0694, r19
    219e:	20 93 93 06 	sts	0x0693, r18
    21a2:	90 93 af 06 	sts	0x06AF, r25
    21a6:	80 93 ae 06 	sts	0x06AE, r24
    21aa:	70 93 c7 06 	sts	0x06C7, r23
    21ae:	60 93 c6 06 	sts	0x06C6, r22
    21b2:	78 94       	sei
    21b4:	81 e0       	ldi	r24, 0x01	; 1
    21b6:	08 95       	ret

000021b8 <copro_ir_stop>:
    21b8:	78 94       	sei
    21ba:	20 91 a0 06 	lds	r18, 0x06A0
    21be:	80 e1       	ldi	r24, 0x10	; 16
    21c0:	97 e2       	ldi	r25, 0x27	; 39
    21c2:	01 97       	sbiw	r24, 0x01	; 1
    21c4:	11 f0       	breq	.+4      	; 0x21ca <copro_ir_stop+0x12>
    21c6:	2f 3f       	cpi	r18, 0xFF	; 255
    21c8:	e1 f7       	brne	.-8      	; 0x21c2 <copro_ir_stop+0xa>
    21ca:	f8 94       	cli
    21cc:	88 e0       	ldi	r24, 0x08	; 8
    21ce:	80 93 a0 06 	sts	0x06A0, r24
    21d2:	78 94       	sei
    21d4:	81 e0       	ldi	r24, 0x01	; 1
    21d6:	08 95       	ret

000021d8 <copro_ir_startMeasure>:
    21d8:	78 94       	sei
    21da:	20 91 a0 06 	lds	r18, 0x06A0
    21de:	80 e1       	ldi	r24, 0x10	; 16
    21e0:	97 e2       	ldi	r25, 0x27	; 39
    21e2:	01 97       	sbiw	r24, 0x01	; 1
    21e4:	11 f0       	breq	.+4      	; 0x21ea <copro_ir_startMeasure+0x12>
    21e6:	2f 3f       	cpi	r18, 0xFF	; 255
    21e8:	e1 f7       	brne	.-8      	; 0x21e2 <copro_ir_startMeasure+0xa>
    21ea:	f8 94       	cli
    21ec:	87 e0       	ldi	r24, 0x07	; 7
    21ee:	80 93 a0 06 	sts	0x06A0, r24
    21f2:	78 94       	sei
    21f4:	81 e0       	ldi	r24, 0x01	; 1
    21f6:	08 95       	ret

000021f8 <copro_transmitRC5>:
    21f8:	78 94       	sei
    21fa:	40 91 a0 06 	lds	r20, 0x06A0
    21fe:	20 e1       	ldi	r18, 0x10	; 16
    2200:	37 e2       	ldi	r19, 0x27	; 39
    2202:	21 50       	subi	r18, 0x01	; 1
    2204:	30 40       	sbci	r19, 0x00	; 0
    2206:	11 f0       	breq	.+4      	; 0x220c <copro_transmitRC5+0x14>
    2208:	4f 3f       	cpi	r20, 0xFF	; 255
    220a:	d9 f7       	brne	.-10     	; 0x2202 <copro_transmitRC5+0xa>
    220c:	f8 94       	cli
    220e:	29 e0       	ldi	r18, 0x09	; 9
    2210:	20 93 a0 06 	sts	0x06A0, r18
    2214:	80 93 a1 06 	sts	0x06A1, r24
    2218:	90 93 a2 06 	sts	0x06A2, r25
    221c:	78 94       	sei
    221e:	81 e0       	ldi	r24, 0x01	; 1
    2220:	08 95       	ret

00002222 <spi_finished_callback>:
    2222:	90 91 ed 06 	lds	r25, 0x06ED
    2226:	9f 5f       	subi	r25, 0xFF	; 255
    2228:	90 93 ed 06 	sts	0x06ED, r25
    222c:	8b 31       	cpi	r24, 0x1B	; 27
    222e:	41 f4       	brne	.+16     	; 0x2240 <spi_finished_callback+0x1e>
    2230:	a0 ed       	ldi	r26, 0xD0	; 208
    2232:	b6 e0       	ldi	r27, 0x06	; 6
    2234:	e7 e6       	ldi	r30, 0x67	; 103
    2236:	f6 e0       	ldi	r31, 0x06	; 6
    2238:	01 90       	ld	r0, Z+
    223a:	0d 92       	st	X+, r0
    223c:	81 50       	subi	r24, 0x01	; 1
    223e:	e1 f7       	brne	.-8      	; 0x2238 <spi_finished_callback+0x16>
    2240:	8f ef       	ldi	r24, 0xFF	; 255
    2242:	80 93 55 06 	sts	0x0655, r24
    2246:	80 93 4e 06 	sts	0x064E, r24
    224a:	80 93 47 06 	sts	0x0647, r24
    224e:	80 91 99 06 	lds	r24, 0x0699
    2252:	8f 3f       	cpi	r24, 0xFF	; 255
    2254:	11 f4       	brne	.+4      	; 0x225a <spi_finished_callback+0x38>
    2256:	80 e0       	ldi	r24, 0x00	; 0
    2258:	0d c0       	rjmp	.+26     	; 0x2274 <spi_finished_callback+0x52>
    225a:	a7 e4       	ldi	r26, 0x47	; 71
    225c:	b6 e0       	ldi	r27, 0x06	; 6
    225e:	e9 e9       	ldi	r30, 0x99	; 153
    2260:	f6 e0       	ldi	r31, 0x06	; 6
    2262:	87 e0       	ldi	r24, 0x07	; 7
    2264:	01 90       	ld	r0, Z+
    2266:	0d 92       	st	X+, r0
    2268:	81 50       	subi	r24, 0x01	; 1
    226a:	e1 f7       	brne	.-8      	; 0x2264 <spi_finished_callback+0x42>
    226c:	8f ef       	ldi	r24, 0xFF	; 255
    226e:	80 93 99 06 	sts	0x0699, r24
    2272:	87 e0       	ldi	r24, 0x07	; 7
    2274:	90 91 a0 06 	lds	r25, 0x06A0
    2278:	9f 3f       	cpi	r25, 0xFF	; 255
    227a:	79 f0       	breq	.+30     	; 0x229a <spi_finished_callback+0x78>
    227c:	e8 2f       	mov	r30, r24
    227e:	f0 e0       	ldi	r31, 0x00	; 0
    2280:	e9 5b       	subi	r30, 0xB9	; 185
    2282:	f9 4f       	sbci	r31, 0xF9	; 249
    2284:	a0 ea       	ldi	r26, 0xA0	; 160
    2286:	b6 e0       	ldi	r27, 0x06	; 6
    2288:	97 e0       	ldi	r25, 0x07	; 7
    228a:	0d 90       	ld	r0, X+
    228c:	01 92       	st	Z+, r0
    228e:	91 50       	subi	r25, 0x01	; 1
    2290:	e1 f7       	brne	.-8      	; 0x228a <spi_finished_callback+0x68>
    2292:	9f ef       	ldi	r25, 0xFF	; 255
    2294:	90 93 a0 06 	sts	0x06A0, r25
    2298:	89 5f       	subi	r24, 0xF9	; 249
    229a:	90 91 a7 06 	lds	r25, 0x06A7
    229e:	9f 3f       	cpi	r25, 0xFF	; 255
    22a0:	81 f0       	breq	.+32     	; 0x22c2 <spi_finished_callback+0xa0>
    22a2:	e8 2f       	mov	r30, r24
    22a4:	f0 e0       	ldi	r31, 0x00	; 0
    22a6:	e9 5b       	subi	r30, 0xB9	; 185
    22a8:	f9 4f       	sbci	r31, 0xF9	; 249
    22aa:	a7 ea       	ldi	r26, 0xA7	; 167
    22ac:	b6 e0       	ldi	r27, 0x06	; 6
    22ae:	87 e0       	ldi	r24, 0x07	; 7
    22b0:	0d 90       	ld	r0, X+
    22b2:	01 92       	st	Z+, r0
    22b4:	81 50       	subi	r24, 0x01	; 1
    22b6:	e1 f7       	brne	.-8      	; 0x22b0 <spi_finished_callback+0x8e>
    22b8:	8f ef       	ldi	r24, 0xFF	; 255
    22ba:	80 93 a7 06 	sts	0x06A7, r24
    22be:	85 e1       	ldi	r24, 0x15	; 21
    22c0:	08 95       	ret
    22c2:	88 23       	and	r24, r24
    22c4:	11 f4       	brne	.+4      	; 0x22ca <spi_finished_callback+0xa8>
    22c6:	87 e0       	ldi	r24, 0x07	; 7
    22c8:	08 95       	ret
    22ca:	85 e1       	ldi	r24, 0x15	; 21
    22cc:	08 95       	ret

000022ce <bot_update>:
    22ce:	87 e0       	ldi	r24, 0x07	; 7
    22d0:	0e 94 c7 12 	call	0x258e	; 0x258e <adc_read>
    22d4:	90 93 f1 06 	sts	0x06F1, r25
    22d8:	80 93 f0 06 	sts	0x06F0, r24
    22dc:	08 95       	ret

000022de <bot_init>:
    22de:	8f 9a       	sbi	0x11, 7	; 17
    22e0:	97 98       	cbi	0x12, 7	; 18
    22e2:	8a e0       	ldi	r24, 0x0A	; 10
    22e4:	90 e0       	ldi	r25, 0x00	; 0
    22e6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
    22ea:	97 9a       	sbi	0x12, 7	; 18
    22ec:	84 e6       	ldi	r24, 0x64	; 100
    22ee:	90 e0       	ldi	r25, 0x00	; 0
    22f0:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <delay>
    22f4:	08 95       	ret

000022f6 <leds_init>:
    22f6:	bf 9a       	sbi	0x17, 7	; 23
    22f8:	c7 9a       	sbi	0x18, 7	; 24
    22fa:	bd 9a       	sbi	0x17, 5	; 23
    22fc:	be 9a       	sbi	0x17, 6	; 23
    22fe:	8f ef       	ldi	r24, 0xFF	; 255
    2300:	82 b9       	out	0x02, r24	; 2
    2302:	84 bb       	out	0x14, r24	; 20
    2304:	08 95       	ret

00002306 <leds_set_status>:
    2306:	48 2f       	mov	r20, r24
    2308:	80 ff       	sbrs	r24, 0
    230a:	0b c0       	rjmp	.+22     	; 0x2322 <leds_set_status+0x1c>
    230c:	95 b3       	in	r25, 0x15	; 21
    230e:	21 e0       	ldi	r18, 0x01	; 1
    2310:	30 e0       	ldi	r19, 0x00	; 0
    2312:	06 2e       	mov	r0, r22
    2314:	02 c0       	rjmp	.+4      	; 0x231a <leds_set_status+0x14>
    2316:	22 0f       	add	r18, r18
    2318:	33 1f       	adc	r19, r19
    231a:	0a 94       	dec	r0
    231c:	e2 f7       	brpl	.-8      	; 0x2316 <leds_set_status+0x10>
    231e:	92 2b       	or	r25, r18
    2320:	0c c0       	rjmp	.+24     	; 0x233a <leds_set_status+0x34>
    2322:	85 b3       	in	r24, 0x15	; 21
    2324:	21 e0       	ldi	r18, 0x01	; 1
    2326:	30 e0       	ldi	r19, 0x00	; 0
    2328:	06 2e       	mov	r0, r22
    232a:	02 c0       	rjmp	.+4      	; 0x2330 <leds_set_status+0x2a>
    232c:	22 0f       	add	r18, r18
    232e:	33 1f       	adc	r19, r19
    2330:	0a 94       	dec	r0
    2332:	e2 f7       	brpl	.-8      	; 0x232c <leds_set_status+0x26>
    2334:	92 2f       	mov	r25, r18
    2336:	90 95       	com	r25
    2338:	98 23       	and	r25, r24
    233a:	95 bb       	out	0x15, r25	; 21
    233c:	41 ff       	sbrs	r20, 1
    233e:	0a c0       	rjmp	.+20     	; 0x2354 <leds_set_status+0x4e>
    2340:	83 b1       	in	r24, 0x03	; 3
    2342:	21 e0       	ldi	r18, 0x01	; 1
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	02 c0       	rjmp	.+4      	; 0x234c <leds_set_status+0x46>
    2348:	22 0f       	add	r18, r18
    234a:	33 1f       	adc	r19, r19
    234c:	6a 95       	dec	r22
    234e:	e2 f7       	brpl	.-8      	; 0x2348 <leds_set_status+0x42>
    2350:	82 2b       	or	r24, r18
    2352:	0a c0       	rjmp	.+20     	; 0x2368 <leds_set_status+0x62>
    2354:	23 b1       	in	r18, 0x03	; 3
    2356:	81 e0       	ldi	r24, 0x01	; 1
    2358:	90 e0       	ldi	r25, 0x00	; 0
    235a:	02 c0       	rjmp	.+4      	; 0x2360 <leds_set_status+0x5a>
    235c:	88 0f       	add	r24, r24
    235e:	99 1f       	adc	r25, r25
    2360:	6a 95       	dec	r22
    2362:	e2 f7       	brpl	.-8      	; 0x235c <leds_set_status+0x56>
    2364:	80 95       	com	r24
    2366:	82 23       	and	r24, r18
    2368:	83 b9       	out	0x03, r24	; 3
    236a:	08 95       	ret

0000236c <leds_set_status_intensity>:
    236c:	90 93 f9 06 	sts	0x06F9, r25
    2370:	80 93 f8 06 	sts	0x06F8, r24
    2374:	08 95       	ret

00002376 <leds_get_status_intensity>:
    2376:	80 91 f8 06 	lds	r24, 0x06F8
    237a:	90 91 f9 06 	lds	r25, 0x06F9
    237e:	08 95       	ret

00002380 <leds_set_headlights>:
    2380:	90 93 f3 06 	sts	0x06F3, r25
    2384:	80 93 f2 06 	sts	0x06F2, r24
    2388:	08 95       	ret

0000238a <leds_get_headlights>:
    238a:	80 91 f2 06 	lds	r24, 0x06F2
    238e:	90 91 f3 06 	lds	r25, 0x06F3
    2392:	08 95       	ret

00002394 <leds_set_displaylight>:
    2394:	90 93 f5 06 	sts	0x06F5, r25
    2398:	80 93 f4 06 	sts	0x06F4, r24
    239c:	08 95       	ret

0000239e <leds_get_displaylight>:
    239e:	80 91 f4 06 	lds	r24, 0x06F4
    23a2:	90 91 f5 06 	lds	r25, 0x06F5
    23a6:	08 95       	ret

000023a8 <sound_init>:
    23a8:	bc 9a       	sbi	0x17, 4	; 23
    23aa:	08 95       	ret

000023ac <sound_tone>:
    23ac:	45 e3       	ldi	r20, 0x35	; 53
    23ae:	22 c0       	rjmp	.+68     	; 0x23f4 <sound_tone+0x48>
    23b0:	c4 98       	cbi	0x18, 4	; 24
    23b2:	28 2f       	mov	r18, r24
    23b4:	39 2f       	mov	r19, r25
    23b6:	0a c0       	rjmp	.+20     	; 0x23cc <sound_tone+0x20>
    23b8:	61 50       	subi	r22, 0x01	; 1
    23ba:	70 40       	sbci	r23, 0x00	; 0
    23bc:	54 2f       	mov	r21, r20
    23be:	5a 95       	dec	r21
    23c0:	f1 f7       	brne	.-4      	; 0x23be <sound_tone+0x12>
    23c2:	61 15       	cp	r22, r1
    23c4:	71 05       	cpc	r23, r1
    23c6:	29 f0       	breq	.+10     	; 0x23d2 <sound_tone+0x26>
    23c8:	21 50       	subi	r18, 0x01	; 1
    23ca:	30 40       	sbci	r19, 0x00	; 0
    23cc:	21 15       	cp	r18, r1
    23ce:	31 05       	cpc	r19, r1
    23d0:	99 f7       	brne	.-26     	; 0x23b8 <sound_tone+0xc>
    23d2:	c4 9a       	sbi	0x18, 4	; 24
    23d4:	28 2f       	mov	r18, r24
    23d6:	39 2f       	mov	r19, r25
    23d8:	07 c0       	rjmp	.+14     	; 0x23e8 <sound_tone+0x3c>
    23da:	61 50       	subi	r22, 0x01	; 1
    23dc:	70 40       	sbci	r23, 0x00	; 0
    23de:	21 50       	subi	r18, 0x01	; 1
    23e0:	30 40       	sbci	r19, 0x00	; 0
    23e2:	54 2f       	mov	r21, r20
    23e4:	5a 95       	dec	r21
    23e6:	f1 f7       	brne	.-4      	; 0x23e4 <sound_tone+0x38>
    23e8:	61 15       	cp	r22, r1
    23ea:	71 05       	cpc	r23, r1
    23ec:	19 f0       	breq	.+6      	; 0x23f4 <sound_tone+0x48>
    23ee:	21 15       	cp	r18, r1
    23f0:	31 05       	cpc	r19, r1
    23f2:	99 f7       	brne	.-26     	; 0x23da <sound_tone+0x2e>
    23f4:	61 15       	cp	r22, r1
    23f6:	71 05       	cpc	r23, r1
    23f8:	d9 f6       	brne	.-74     	; 0x23b0 <sound_tone+0x4>
    23fa:	08 95       	ret

000023fc <pwm_init>:
    23fc:	10 92 fb 06 	sts	0x06FB, r1
    2400:	10 92 fa 06 	sts	0x06FA, r1
    2404:	10 92 f7 06 	sts	0x06F7, r1
    2408:	10 92 f6 06 	sts	0x06F6, r1
    240c:	10 92 fc 06 	sts	0x06FC, r1
    2410:	10 92 fd 06 	sts	0x06FD, r1
    2414:	10 92 fe 06 	sts	0x06FE, r1
    2418:	10 92 ff 06 	sts	0x06FF, r1
    241c:	10 92 f3 06 	sts	0x06F3, r1
    2420:	10 92 f2 06 	sts	0x06F2, r1
    2424:	10 92 f5 06 	sts	0x06F5, r1
    2428:	10 92 f4 06 	sts	0x06F4, r1
    242c:	8f ef       	ldi	r24, 0xFF	; 255
    242e:	93 e0       	ldi	r25, 0x03	; 3
    2430:	90 93 f9 06 	sts	0x06F9, r25
    2434:	80 93 f8 06 	sts	0x06F8, r24
    2438:	c5 98       	cbi	0x18, 5	; 24
    243a:	c6 98       	cbi	0x18, 6	; 24
    243c:	bd 9a       	sbi	0x17, 5	; 23
    243e:	be 9a       	sbi	0x17, 6	; 23
    2440:	bf 9a       	sbi	0x17, 7	; 23
    2442:	c7 9a       	sbi	0x18, 7	; 24
    2444:	1d bc       	out	0x2d, r1	; 45
    2446:	1c bc       	out	0x2c, r1	; 44
    2448:	8a ea       	ldi	r24, 0xAA	; 170
    244a:	8f bd       	out	0x2f, r24	; 47
    244c:	82 e1       	ldi	r24, 0x12	; 18
    244e:	8e bd       	out	0x2e, r24	; 46
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	94 e0       	ldi	r25, 0x04	; 4
    2454:	97 bd       	out	0x27, r25	; 39
    2456:	86 bd       	out	0x26, r24	; 38
    2458:	87 b7       	in	r24, 0x37	; 55
    245a:	84 60       	ori	r24, 0x04	; 4
    245c:	87 bf       	out	0x37, r24	; 55
    245e:	08 95       	ret

00002460 <__vector_14>:
    2460:	1f 92       	push	r1
    2462:	0f 92       	push	r0
    2464:	0f b6       	in	r0, 0x3f	; 63
    2466:	0f 92       	push	r0
    2468:	11 24       	eor	r1, r1
    246a:	2f 93       	push	r18
    246c:	3f 93       	push	r19
    246e:	4f 93       	push	r20
    2470:	8f 93       	push	r24
    2472:	9f 93       	push	r25
    2474:	af 93       	push	r26
    2476:	bf 93       	push	r27
    2478:	80 91 fa 06 	lds	r24, 0x06FA
    247c:	90 91 fb 06 	lds	r25, 0x06FB
    2480:	9c 01       	movw	r18, r24
    2482:	28 5e       	subi	r18, 0xE8	; 232
    2484:	3f 4f       	sbci	r19, 0xFF	; 255
    2486:	30 93 fb 06 	sts	0x06FB, r19
    248a:	20 93 fa 06 	sts	0x06FA, r18
    248e:	43 e0       	ldi	r20, 0x03	; 3
    2490:	28 3e       	cpi	r18, 0xE8	; 232
    2492:	34 07       	cpc	r19, r20
    2494:	78 f0       	brcs	.+30     	; 0x24b4 <__vector_14+0x54>
    2496:	80 5d       	subi	r24, 0xD0	; 208
    2498:	93 40       	sbci	r25, 0x03	; 3
    249a:	90 93 fb 06 	sts	0x06FB, r25
    249e:	80 93 fa 06 	sts	0x06FA, r24
    24a2:	80 91 f6 06 	lds	r24, 0x06F6
    24a6:	90 91 f7 06 	lds	r25, 0x06F7
    24aa:	01 96       	adiw	r24, 0x01	; 1
    24ac:	90 93 f7 06 	sts	0x06F7, r25
    24b0:	80 93 f6 06 	sts	0x06F6, r24
    24b4:	80 91 f6 06 	lds	r24, 0x06F6
    24b8:	90 91 f7 06 	lds	r25, 0x06F7
    24bc:	9c 01       	movw	r18, r24
    24be:	2f 5f       	subi	r18, 0xFF	; 255
    24c0:	3f 4f       	sbci	r19, 0xFF	; 255
    24c2:	30 93 f7 06 	sts	0x06F7, r19
    24c6:	20 93 f6 06 	sts	0x06F6, r18
    24ca:	43 e0       	ldi	r20, 0x03	; 3
    24cc:	28 3e       	cpi	r18, 0xE8	; 232
    24ce:	34 07       	cpc	r19, r20
    24d0:	c8 f0       	brcs	.+50     	; 0x2504 <__vector_14+0xa4>
    24d2:	87 5e       	subi	r24, 0xE7	; 231
    24d4:	93 40       	sbci	r25, 0x03	; 3
    24d6:	90 93 f7 06 	sts	0x06F7, r25
    24da:	80 93 f6 06 	sts	0x06F6, r24
    24de:	80 91 fc 06 	lds	r24, 0x06FC
    24e2:	90 91 fd 06 	lds	r25, 0x06FD
    24e6:	a0 91 fe 06 	lds	r26, 0x06FE
    24ea:	b0 91 ff 06 	lds	r27, 0x06FF
    24ee:	01 96       	adiw	r24, 0x01	; 1
    24f0:	a1 1d       	adc	r26, r1
    24f2:	b1 1d       	adc	r27, r1
    24f4:	80 93 fc 06 	sts	0x06FC, r24
    24f8:	90 93 fd 06 	sts	0x06FD, r25
    24fc:	a0 93 fe 06 	sts	0x06FE, r26
    2500:	b0 93 ff 06 	sts	0x06FF, r27
    2504:	80 91 f2 06 	lds	r24, 0x06F2
    2508:	90 91 f3 06 	lds	r25, 0x06F3
    250c:	23 e0       	ldi	r18, 0x03	; 3
    250e:	8f 3f       	cpi	r24, 0xFF	; 255
    2510:	92 07       	cpc	r25, r18
    2512:	10 f0       	brcs	.+4      	; 0x2518 <__vector_14+0xb8>
    2514:	80 e0       	ldi	r24, 0x00	; 0
    2516:	94 e0       	ldi	r25, 0x04	; 4
    2518:	9b bd       	out	0x2b, r25	; 43
    251a:	8a bd       	out	0x2a, r24	; 42
    251c:	80 91 f4 06 	lds	r24, 0x06F4
    2520:	90 91 f5 06 	lds	r25, 0x06F5
    2524:	43 e0       	ldi	r20, 0x03	; 3
    2526:	8f 3f       	cpi	r24, 0xFF	; 255
    2528:	94 07       	cpc	r25, r20
    252a:	10 f0       	brcs	.+4      	; 0x2530 <__vector_14+0xd0>
    252c:	80 e0       	ldi	r24, 0x00	; 0
    252e:	94 e0       	ldi	r25, 0x04	; 4
    2530:	99 bd       	out	0x29, r25	; 41
    2532:	88 bd       	out	0x28, r24	; 40
    2534:	80 91 f8 06 	lds	r24, 0x06F8
    2538:	90 91 f9 06 	lds	r25, 0x06F9
    253c:	23 e0       	ldi	r18, 0x03	; 3
    253e:	8f 3f       	cpi	r24, 0xFF	; 255
    2540:	92 07       	cpc	r25, r18
    2542:	10 f0       	brcs	.+4      	; 0x2548 <__vector_14+0xe8>
    2544:	80 e0       	ldi	r24, 0x00	; 0
    2546:	94 e0       	ldi	r25, 0x04	; 4
    2548:	90 93 79 00 	sts	0x0079, r25
    254c:	80 93 78 00 	sts	0x0078, r24
    2550:	bf 91       	pop	r27
    2552:	af 91       	pop	r26
    2554:	9f 91       	pop	r25
    2556:	8f 91       	pop	r24
    2558:	4f 91       	pop	r20
    255a:	3f 91       	pop	r19
    255c:	2f 91       	pop	r18
    255e:	0f 90       	pop	r0
    2560:	0f be       	out	0x3f, r0	; 63
    2562:	0f 90       	pop	r0
    2564:	1f 90       	pop	r1
    2566:	18 95       	reti

00002568 <adc_init>:
    2568:	e1 e6       	ldi	r30, 0x61	; 97
    256a:	f0 e0       	ldi	r31, 0x00	; 0
    256c:	90 81       	ld	r25, Z
    256e:	21 e0       	ldi	r18, 0x01	; 1
    2570:	30 e0       	ldi	r19, 0x00	; 0
    2572:	02 c0       	rjmp	.+4      	; 0x2578 <adc_init+0x10>
    2574:	22 0f       	add	r18, r18
    2576:	33 1f       	adc	r19, r19
    2578:	8a 95       	dec	r24
    257a:	e2 f7       	brpl	.-8      	; 0x2574 <adc_init+0xc>
    257c:	20 95       	com	r18
    257e:	92 23       	and	r25, r18
    2580:	90 83       	st	Z, r25
    2582:	e2 e6       	ldi	r30, 0x62	; 98
    2584:	f0 e0       	ldi	r31, 0x00	; 0
    2586:	80 81       	ld	r24, Z
    2588:	82 23       	and	r24, r18
    258a:	80 83       	st	Z, r24
    258c:	08 95       	ret

0000258e <adc_read>:
    258e:	90 e4       	ldi	r25, 0x40	; 64
    2590:	97 b9       	out	0x07, r25	; 7
    2592:	97 b1       	in	r25, 0x07	; 7
    2594:	87 70       	andi	r24, 0x07	; 7
    2596:	89 2b       	or	r24, r25
    2598:	87 b9       	out	0x07, r24	; 7
    259a:	87 ec       	ldi	r24, 0xC7	; 199
    259c:	86 b9       	out	0x06, r24	; 6
    259e:	01 c0       	rjmp	.+2      	; 0x25a2 <adc_read+0x14>
    25a0:	00 00       	nop
    25a2:	36 99       	sbic	0x06, 6	; 6
    25a4:	fd cf       	rjmp	.-6      	; 0x25a0 <adc_read+0x12>
    25a6:	84 b1       	in	r24, 0x04	; 4
    25a8:	95 b1       	in	r25, 0x05	; 5
    25aa:	39 2f       	mov	r19, r25
    25ac:	20 e0       	ldi	r18, 0x00	; 0
    25ae:	28 0f       	add	r18, r24
    25b0:	31 1d       	adc	r19, r1
    25b2:	80 91 00 07 	lds	r24, 0x0700
    25b6:	90 91 01 07 	lds	r25, 0x0701
    25ba:	82 0f       	add	r24, r18
    25bc:	93 1f       	adc	r25, r19
    25be:	90 93 01 07 	sts	0x0701, r25
    25c2:	80 93 00 07 	sts	0x0700, r24
    25c6:	c9 01       	movw	r24, r18
    25c8:	08 95       	ret

000025ca <adc_get_random_seed>:
    25ca:	80 91 00 07 	lds	r24, 0x0700
    25ce:	90 91 01 07 	lds	r25, 0x0701
    25d2:	08 95       	ret

000025d4 <__subsf3>:
    25d4:	50 58       	subi	r21, 0x80	; 128

000025d6 <__addsf3>:
    25d6:	bb 27       	eor	r27, r27
    25d8:	aa 27       	eor	r26, r26
    25da:	0e d0       	rcall	.+28     	; 0x25f8 <__addsf3x>
    25dc:	dc c0       	rjmp	.+440    	; 0x2796 <__fp_round>
    25de:	cd d0       	rcall	.+410    	; 0x277a <__fp_pscA>
    25e0:	30 f0       	brcs	.+12     	; 0x25ee <__addsf3+0x18>
    25e2:	d2 d0       	rcall	.+420    	; 0x2788 <__fp_pscB>
    25e4:	20 f0       	brcs	.+8      	; 0x25ee <__addsf3+0x18>
    25e6:	31 f4       	brne	.+12     	; 0x25f4 <__addsf3+0x1e>
    25e8:	9f 3f       	cpi	r25, 0xFF	; 255
    25ea:	11 f4       	brne	.+4      	; 0x25f0 <__addsf3+0x1a>
    25ec:	1e f4       	brtc	.+6      	; 0x25f4 <__addsf3+0x1e>
    25ee:	c2 c0       	rjmp	.+388    	; 0x2774 <__fp_nan>
    25f0:	0e f4       	brtc	.+2      	; 0x25f4 <__addsf3+0x1e>
    25f2:	e0 95       	com	r30
    25f4:	e7 fb       	bst	r30, 7
    25f6:	b8 c0       	rjmp	.+368    	; 0x2768 <__fp_inf>

000025f8 <__addsf3x>:
    25f8:	e9 2f       	mov	r30, r25
    25fa:	de d0       	rcall	.+444    	; 0x27b8 <__fp_split3>
    25fc:	80 f3       	brcs	.-32     	; 0x25de <__addsf3+0x8>
    25fe:	ba 17       	cp	r27, r26
    2600:	62 07       	cpc	r22, r18
    2602:	73 07       	cpc	r23, r19
    2604:	84 07       	cpc	r24, r20
    2606:	95 07       	cpc	r25, r21
    2608:	18 f0       	brcs	.+6      	; 0x2610 <__addsf3x+0x18>
    260a:	71 f4       	brne	.+28     	; 0x2628 <__addsf3x+0x30>
    260c:	9e f5       	brtc	.+102    	; 0x2674 <__addsf3x+0x7c>
    260e:	f6 c0       	rjmp	.+492    	; 0x27fc <__fp_zero>
    2610:	0e f4       	brtc	.+2      	; 0x2614 <__addsf3x+0x1c>
    2612:	e0 95       	com	r30
    2614:	0b 2e       	mov	r0, r27
    2616:	ba 2f       	mov	r27, r26
    2618:	a0 2d       	mov	r26, r0
    261a:	0b 01       	movw	r0, r22
    261c:	b9 01       	movw	r22, r18
    261e:	90 01       	movw	r18, r0
    2620:	0c 01       	movw	r0, r24
    2622:	ca 01       	movw	r24, r20
    2624:	a0 01       	movw	r20, r0
    2626:	11 24       	eor	r1, r1
    2628:	ff 27       	eor	r31, r31
    262a:	59 1b       	sub	r21, r25
    262c:	99 f0       	breq	.+38     	; 0x2654 <__addsf3x+0x5c>
    262e:	59 3f       	cpi	r21, 0xF9	; 249
    2630:	50 f4       	brcc	.+20     	; 0x2646 <__addsf3x+0x4e>
    2632:	50 3e       	cpi	r21, 0xE0	; 224
    2634:	68 f1       	brcs	.+90     	; 0x2690 <__addsf3x+0x98>
    2636:	1a 16       	cp	r1, r26
    2638:	f0 40       	sbci	r31, 0x00	; 0
    263a:	a2 2f       	mov	r26, r18
    263c:	23 2f       	mov	r18, r19
    263e:	34 2f       	mov	r19, r20
    2640:	44 27       	eor	r20, r20
    2642:	58 5f       	subi	r21, 0xF8	; 248
    2644:	f3 cf       	rjmp	.-26     	; 0x262c <__addsf3x+0x34>
    2646:	46 95       	lsr	r20
    2648:	37 95       	ror	r19
    264a:	27 95       	ror	r18
    264c:	a7 95       	ror	r26
    264e:	f0 40       	sbci	r31, 0x00	; 0
    2650:	53 95       	inc	r21
    2652:	c9 f7       	brne	.-14     	; 0x2646 <__addsf3x+0x4e>
    2654:	7e f4       	brtc	.+30     	; 0x2674 <__addsf3x+0x7c>
    2656:	1f 16       	cp	r1, r31
    2658:	ba 0b       	sbc	r27, r26
    265a:	62 0b       	sbc	r22, r18
    265c:	73 0b       	sbc	r23, r19
    265e:	84 0b       	sbc	r24, r20
    2660:	ba f0       	brmi	.+46     	; 0x2690 <__addsf3x+0x98>
    2662:	91 50       	subi	r25, 0x01	; 1
    2664:	a1 f0       	breq	.+40     	; 0x268e <__addsf3x+0x96>
    2666:	ff 0f       	add	r31, r31
    2668:	bb 1f       	adc	r27, r27
    266a:	66 1f       	adc	r22, r22
    266c:	77 1f       	adc	r23, r23
    266e:	88 1f       	adc	r24, r24
    2670:	c2 f7       	brpl	.-16     	; 0x2662 <__addsf3x+0x6a>
    2672:	0e c0       	rjmp	.+28     	; 0x2690 <__addsf3x+0x98>
    2674:	ba 0f       	add	r27, r26
    2676:	62 1f       	adc	r22, r18
    2678:	73 1f       	adc	r23, r19
    267a:	84 1f       	adc	r24, r20
    267c:	48 f4       	brcc	.+18     	; 0x2690 <__addsf3x+0x98>
    267e:	87 95       	ror	r24
    2680:	77 95       	ror	r23
    2682:	67 95       	ror	r22
    2684:	b7 95       	ror	r27
    2686:	f7 95       	ror	r31
    2688:	9e 3f       	cpi	r25, 0xFE	; 254
    268a:	08 f0       	brcs	.+2      	; 0x268e <__addsf3x+0x96>
    268c:	b3 cf       	rjmp	.-154    	; 0x25f4 <__addsf3+0x1e>
    268e:	93 95       	inc	r25
    2690:	88 0f       	add	r24, r24
    2692:	08 f0       	brcs	.+2      	; 0x2696 <__addsf3x+0x9e>
    2694:	99 27       	eor	r25, r25
    2696:	ee 0f       	add	r30, r30
    2698:	97 95       	ror	r25
    269a:	87 95       	ror	r24
    269c:	08 95       	ret

0000269e <__cmpsf2>:
    269e:	40 d0       	rcall	.+128    	; 0x2720 <__fp_cmp>
    26a0:	08 f4       	brcc	.+2      	; 0x26a4 <__cmpsf2+0x6>
    26a2:	81 e0       	ldi	r24, 0x01	; 1
    26a4:	08 95       	ret

000026a6 <__floatunsisf>:
    26a6:	e8 94       	clt
    26a8:	09 c0       	rjmp	.+18     	; 0x26bc <__floatsisf+0x12>

000026aa <__floatsisf>:
    26aa:	97 fb       	bst	r25, 7
    26ac:	3e f4       	brtc	.+14     	; 0x26bc <__floatsisf+0x12>
    26ae:	90 95       	com	r25
    26b0:	80 95       	com	r24
    26b2:	70 95       	com	r23
    26b4:	61 95       	neg	r22
    26b6:	7f 4f       	sbci	r23, 0xFF	; 255
    26b8:	8f 4f       	sbci	r24, 0xFF	; 255
    26ba:	9f 4f       	sbci	r25, 0xFF	; 255
    26bc:	99 23       	and	r25, r25
    26be:	a9 f0       	breq	.+42     	; 0x26ea <__floatsisf+0x40>
    26c0:	f9 2f       	mov	r31, r25
    26c2:	96 e9       	ldi	r25, 0x96	; 150
    26c4:	bb 27       	eor	r27, r27
    26c6:	93 95       	inc	r25
    26c8:	f6 95       	lsr	r31
    26ca:	87 95       	ror	r24
    26cc:	77 95       	ror	r23
    26ce:	67 95       	ror	r22
    26d0:	b7 95       	ror	r27
    26d2:	f1 11       	cpse	r31, r1
    26d4:	f8 cf       	rjmp	.-16     	; 0x26c6 <__floatsisf+0x1c>
    26d6:	fa f4       	brpl	.+62     	; 0x2716 <__floatsisf+0x6c>
    26d8:	bb 0f       	add	r27, r27
    26da:	11 f4       	brne	.+4      	; 0x26e0 <__floatsisf+0x36>
    26dc:	60 ff       	sbrs	r22, 0
    26de:	1b c0       	rjmp	.+54     	; 0x2716 <__floatsisf+0x6c>
    26e0:	6f 5f       	subi	r22, 0xFF	; 255
    26e2:	7f 4f       	sbci	r23, 0xFF	; 255
    26e4:	8f 4f       	sbci	r24, 0xFF	; 255
    26e6:	9f 4f       	sbci	r25, 0xFF	; 255
    26e8:	16 c0       	rjmp	.+44     	; 0x2716 <__floatsisf+0x6c>
    26ea:	88 23       	and	r24, r24
    26ec:	11 f0       	breq	.+4      	; 0x26f2 <__floatsisf+0x48>
    26ee:	96 e9       	ldi	r25, 0x96	; 150
    26f0:	11 c0       	rjmp	.+34     	; 0x2714 <__floatsisf+0x6a>
    26f2:	77 23       	and	r23, r23
    26f4:	21 f0       	breq	.+8      	; 0x26fe <__floatsisf+0x54>
    26f6:	9e e8       	ldi	r25, 0x8E	; 142
    26f8:	87 2f       	mov	r24, r23
    26fa:	76 2f       	mov	r23, r22
    26fc:	05 c0       	rjmp	.+10     	; 0x2708 <__floatsisf+0x5e>
    26fe:	66 23       	and	r22, r22
    2700:	71 f0       	breq	.+28     	; 0x271e <__floatsisf+0x74>
    2702:	96 e8       	ldi	r25, 0x86	; 134
    2704:	86 2f       	mov	r24, r22
    2706:	70 e0       	ldi	r23, 0x00	; 0
    2708:	60 e0       	ldi	r22, 0x00	; 0
    270a:	2a f0       	brmi	.+10     	; 0x2716 <__floatsisf+0x6c>
    270c:	9a 95       	dec	r25
    270e:	66 0f       	add	r22, r22
    2710:	77 1f       	adc	r23, r23
    2712:	88 1f       	adc	r24, r24
    2714:	da f7       	brpl	.-10     	; 0x270c <__floatsisf+0x62>
    2716:	88 0f       	add	r24, r24
    2718:	96 95       	lsr	r25
    271a:	87 95       	ror	r24
    271c:	97 f9       	bld	r25, 7
    271e:	08 95       	ret

00002720 <__fp_cmp>:
    2720:	99 0f       	add	r25, r25
    2722:	00 08       	sbc	r0, r0
    2724:	55 0f       	add	r21, r21
    2726:	aa 0b       	sbc	r26, r26
    2728:	e0 e8       	ldi	r30, 0x80	; 128
    272a:	fe ef       	ldi	r31, 0xFE	; 254
    272c:	16 16       	cp	r1, r22
    272e:	17 06       	cpc	r1, r23
    2730:	e8 07       	cpc	r30, r24
    2732:	f9 07       	cpc	r31, r25
    2734:	c0 f0       	brcs	.+48     	; 0x2766 <__fp_cmp+0x46>
    2736:	12 16       	cp	r1, r18
    2738:	13 06       	cpc	r1, r19
    273a:	e4 07       	cpc	r30, r20
    273c:	f5 07       	cpc	r31, r21
    273e:	98 f0       	brcs	.+38     	; 0x2766 <__fp_cmp+0x46>
    2740:	62 1b       	sub	r22, r18
    2742:	73 0b       	sbc	r23, r19
    2744:	84 0b       	sbc	r24, r20
    2746:	95 0b       	sbc	r25, r21
    2748:	39 f4       	brne	.+14     	; 0x2758 <__fp_cmp+0x38>
    274a:	0a 26       	eor	r0, r26
    274c:	61 f0       	breq	.+24     	; 0x2766 <__fp_cmp+0x46>
    274e:	23 2b       	or	r18, r19
    2750:	24 2b       	or	r18, r20
    2752:	25 2b       	or	r18, r21
    2754:	21 f4       	brne	.+8      	; 0x275e <__fp_cmp+0x3e>
    2756:	08 95       	ret
    2758:	0a 26       	eor	r0, r26
    275a:	09 f4       	brne	.+2      	; 0x275e <__fp_cmp+0x3e>
    275c:	a1 40       	sbci	r26, 0x01	; 1
    275e:	a6 95       	lsr	r26
    2760:	8f ef       	ldi	r24, 0xFF	; 255
    2762:	81 1d       	adc	r24, r1
    2764:	81 1d       	adc	r24, r1
    2766:	08 95       	ret

00002768 <__fp_inf>:
    2768:	97 f9       	bld	r25, 7
    276a:	9f 67       	ori	r25, 0x7F	; 127
    276c:	80 e8       	ldi	r24, 0x80	; 128
    276e:	70 e0       	ldi	r23, 0x00	; 0
    2770:	60 e0       	ldi	r22, 0x00	; 0
    2772:	08 95       	ret

00002774 <__fp_nan>:
    2774:	9f ef       	ldi	r25, 0xFF	; 255
    2776:	80 ec       	ldi	r24, 0xC0	; 192
    2778:	08 95       	ret

0000277a <__fp_pscA>:
    277a:	00 24       	eor	r0, r0
    277c:	0a 94       	dec	r0
    277e:	16 16       	cp	r1, r22
    2780:	17 06       	cpc	r1, r23
    2782:	18 06       	cpc	r1, r24
    2784:	09 06       	cpc	r0, r25
    2786:	08 95       	ret

00002788 <__fp_pscB>:
    2788:	00 24       	eor	r0, r0
    278a:	0a 94       	dec	r0
    278c:	12 16       	cp	r1, r18
    278e:	13 06       	cpc	r1, r19
    2790:	14 06       	cpc	r1, r20
    2792:	05 06       	cpc	r0, r21
    2794:	08 95       	ret

00002796 <__fp_round>:
    2796:	09 2e       	mov	r0, r25
    2798:	03 94       	inc	r0
    279a:	00 0c       	add	r0, r0
    279c:	11 f4       	brne	.+4      	; 0x27a2 <__fp_round+0xc>
    279e:	88 23       	and	r24, r24
    27a0:	52 f0       	brmi	.+20     	; 0x27b6 <__fp_round+0x20>
    27a2:	bb 0f       	add	r27, r27
    27a4:	40 f4       	brcc	.+16     	; 0x27b6 <__fp_round+0x20>
    27a6:	bf 2b       	or	r27, r31
    27a8:	11 f4       	brne	.+4      	; 0x27ae <__fp_round+0x18>
    27aa:	60 ff       	sbrs	r22, 0
    27ac:	04 c0       	rjmp	.+8      	; 0x27b6 <__fp_round+0x20>
    27ae:	6f 5f       	subi	r22, 0xFF	; 255
    27b0:	7f 4f       	sbci	r23, 0xFF	; 255
    27b2:	8f 4f       	sbci	r24, 0xFF	; 255
    27b4:	9f 4f       	sbci	r25, 0xFF	; 255
    27b6:	08 95       	ret

000027b8 <__fp_split3>:
    27b8:	57 fd       	sbrc	r21, 7
    27ba:	90 58       	subi	r25, 0x80	; 128
    27bc:	44 0f       	add	r20, r20
    27be:	55 1f       	adc	r21, r21
    27c0:	59 f0       	breq	.+22     	; 0x27d8 <__fp_splitA+0x10>
    27c2:	5f 3f       	cpi	r21, 0xFF	; 255
    27c4:	71 f0       	breq	.+28     	; 0x27e2 <__fp_splitA+0x1a>
    27c6:	47 95       	ror	r20

000027c8 <__fp_splitA>:
    27c8:	88 0f       	add	r24, r24
    27ca:	97 fb       	bst	r25, 7
    27cc:	99 1f       	adc	r25, r25
    27ce:	61 f0       	breq	.+24     	; 0x27e8 <__fp_splitA+0x20>
    27d0:	9f 3f       	cpi	r25, 0xFF	; 255
    27d2:	79 f0       	breq	.+30     	; 0x27f2 <__fp_splitA+0x2a>
    27d4:	87 95       	ror	r24
    27d6:	08 95       	ret
    27d8:	12 16       	cp	r1, r18
    27da:	13 06       	cpc	r1, r19
    27dc:	14 06       	cpc	r1, r20
    27de:	55 1f       	adc	r21, r21
    27e0:	f2 cf       	rjmp	.-28     	; 0x27c6 <__fp_split3+0xe>
    27e2:	46 95       	lsr	r20
    27e4:	f1 df       	rcall	.-30     	; 0x27c8 <__fp_splitA>
    27e6:	08 c0       	rjmp	.+16     	; 0x27f8 <__fp_splitA+0x30>
    27e8:	16 16       	cp	r1, r22
    27ea:	17 06       	cpc	r1, r23
    27ec:	18 06       	cpc	r1, r24
    27ee:	99 1f       	adc	r25, r25
    27f0:	f1 cf       	rjmp	.-30     	; 0x27d4 <__fp_splitA+0xc>
    27f2:	86 95       	lsr	r24
    27f4:	71 05       	cpc	r23, r1
    27f6:	61 05       	cpc	r22, r1
    27f8:	08 94       	sec
    27fa:	08 95       	ret

000027fc <__fp_zero>:
    27fc:	e8 94       	clt

000027fe <__fp_szero>:
    27fe:	bb 27       	eor	r27, r27
    2800:	66 27       	eor	r22, r22
    2802:	77 27       	eor	r23, r23
    2804:	cb 01       	movw	r24, r22
    2806:	97 f9       	bld	r25, 7
    2808:	08 95       	ret

0000280a <__mulsf3>:
    280a:	0b d0       	rcall	.+22     	; 0x2822 <__mulsf3x>
    280c:	c4 cf       	rjmp	.-120    	; 0x2796 <__fp_round>
    280e:	b5 df       	rcall	.-150    	; 0x277a <__fp_pscA>
    2810:	28 f0       	brcs	.+10     	; 0x281c <__mulsf3+0x12>
    2812:	ba df       	rcall	.-140    	; 0x2788 <__fp_pscB>
    2814:	18 f0       	brcs	.+6      	; 0x281c <__mulsf3+0x12>
    2816:	95 23       	and	r25, r21
    2818:	09 f0       	breq	.+2      	; 0x281c <__mulsf3+0x12>
    281a:	a6 cf       	rjmp	.-180    	; 0x2768 <__fp_inf>
    281c:	ab cf       	rjmp	.-170    	; 0x2774 <__fp_nan>
    281e:	11 24       	eor	r1, r1
    2820:	ee cf       	rjmp	.-36     	; 0x27fe <__fp_szero>

00002822 <__mulsf3x>:
    2822:	ca df       	rcall	.-108    	; 0x27b8 <__fp_split3>
    2824:	a0 f3       	brcs	.-24     	; 0x280e <__mulsf3+0x4>

00002826 <__mulsf3_pse>:
    2826:	95 9f       	mul	r25, r21
    2828:	d1 f3       	breq	.-12     	; 0x281e <__mulsf3+0x14>
    282a:	95 0f       	add	r25, r21
    282c:	50 e0       	ldi	r21, 0x00	; 0
    282e:	55 1f       	adc	r21, r21
    2830:	62 9f       	mul	r22, r18
    2832:	f0 01       	movw	r30, r0
    2834:	72 9f       	mul	r23, r18
    2836:	bb 27       	eor	r27, r27
    2838:	f0 0d       	add	r31, r0
    283a:	b1 1d       	adc	r27, r1
    283c:	63 9f       	mul	r22, r19
    283e:	aa 27       	eor	r26, r26
    2840:	f0 0d       	add	r31, r0
    2842:	b1 1d       	adc	r27, r1
    2844:	aa 1f       	adc	r26, r26
    2846:	64 9f       	mul	r22, r20
    2848:	66 27       	eor	r22, r22
    284a:	b0 0d       	add	r27, r0
    284c:	a1 1d       	adc	r26, r1
    284e:	66 1f       	adc	r22, r22
    2850:	82 9f       	mul	r24, r18
    2852:	22 27       	eor	r18, r18
    2854:	b0 0d       	add	r27, r0
    2856:	a1 1d       	adc	r26, r1
    2858:	62 1f       	adc	r22, r18
    285a:	73 9f       	mul	r23, r19
    285c:	b0 0d       	add	r27, r0
    285e:	a1 1d       	adc	r26, r1
    2860:	62 1f       	adc	r22, r18
    2862:	83 9f       	mul	r24, r19
    2864:	a0 0d       	add	r26, r0
    2866:	61 1d       	adc	r22, r1
    2868:	22 1f       	adc	r18, r18
    286a:	74 9f       	mul	r23, r20
    286c:	33 27       	eor	r19, r19
    286e:	a0 0d       	add	r26, r0
    2870:	61 1d       	adc	r22, r1
    2872:	23 1f       	adc	r18, r19
    2874:	84 9f       	mul	r24, r20
    2876:	60 0d       	add	r22, r0
    2878:	21 1d       	adc	r18, r1
    287a:	82 2f       	mov	r24, r18
    287c:	76 2f       	mov	r23, r22
    287e:	6a 2f       	mov	r22, r26
    2880:	11 24       	eor	r1, r1
    2882:	9f 57       	subi	r25, 0x7F	; 127
    2884:	50 40       	sbci	r21, 0x00	; 0
    2886:	8a f0       	brmi	.+34     	; 0x28aa <__mulsf3_pse+0x84>
    2888:	e1 f0       	breq	.+56     	; 0x28c2 <__mulsf3_pse+0x9c>
    288a:	88 23       	and	r24, r24
    288c:	4a f0       	brmi	.+18     	; 0x28a0 <__mulsf3_pse+0x7a>
    288e:	ee 0f       	add	r30, r30
    2890:	ff 1f       	adc	r31, r31
    2892:	bb 1f       	adc	r27, r27
    2894:	66 1f       	adc	r22, r22
    2896:	77 1f       	adc	r23, r23
    2898:	88 1f       	adc	r24, r24
    289a:	91 50       	subi	r25, 0x01	; 1
    289c:	50 40       	sbci	r21, 0x00	; 0
    289e:	a9 f7       	brne	.-22     	; 0x288a <__mulsf3_pse+0x64>
    28a0:	9e 3f       	cpi	r25, 0xFE	; 254
    28a2:	51 05       	cpc	r21, r1
    28a4:	70 f0       	brcs	.+28     	; 0x28c2 <__mulsf3_pse+0x9c>
    28a6:	60 cf       	rjmp	.-320    	; 0x2768 <__fp_inf>
    28a8:	aa cf       	rjmp	.-172    	; 0x27fe <__fp_szero>
    28aa:	5f 3f       	cpi	r21, 0xFF	; 255
    28ac:	ec f3       	brlt	.-6      	; 0x28a8 <__mulsf3_pse+0x82>
    28ae:	98 3e       	cpi	r25, 0xE8	; 232
    28b0:	dc f3       	brlt	.-10     	; 0x28a8 <__mulsf3_pse+0x82>
    28b2:	86 95       	lsr	r24
    28b4:	77 95       	ror	r23
    28b6:	67 95       	ror	r22
    28b8:	b7 95       	ror	r27
    28ba:	f7 95       	ror	r31
    28bc:	e7 95       	ror	r30
    28be:	9f 5f       	subi	r25, 0xFF	; 255
    28c0:	c1 f7       	brne	.-16     	; 0x28b2 <__mulsf3_pse+0x8c>
    28c2:	fe 2b       	or	r31, r30
    28c4:	88 0f       	add	r24, r24
    28c6:	91 1d       	adc	r25, r1
    28c8:	96 95       	lsr	r25
    28ca:	87 95       	ror	r24
    28cc:	97 f9       	bld	r25, 7
    28ce:	08 95       	ret

000028d0 <vfprintf>:
    28d0:	2f 92       	push	r2
    28d2:	3f 92       	push	r3
    28d4:	4f 92       	push	r4
    28d6:	5f 92       	push	r5
    28d8:	6f 92       	push	r6
    28da:	7f 92       	push	r7
    28dc:	8f 92       	push	r8
    28de:	9f 92       	push	r9
    28e0:	af 92       	push	r10
    28e2:	bf 92       	push	r11
    28e4:	cf 92       	push	r12
    28e6:	df 92       	push	r13
    28e8:	ef 92       	push	r14
    28ea:	ff 92       	push	r15
    28ec:	0f 93       	push	r16
    28ee:	1f 93       	push	r17
    28f0:	df 93       	push	r29
    28f2:	cf 93       	push	r28
    28f4:	cd b7       	in	r28, 0x3d	; 61
    28f6:	de b7       	in	r29, 0x3e	; 62
    28f8:	61 97       	sbiw	r28, 0x11	; 17
    28fa:	0f b6       	in	r0, 0x3f	; 63
    28fc:	f8 94       	cli
    28fe:	de bf       	out	0x3e, r29	; 62
    2900:	0f be       	out	0x3f, r0	; 63
    2902:	cd bf       	out	0x3d, r28	; 61
    2904:	3c 01       	movw	r6, r24
    2906:	7f 87       	std	Y+15, r23	; 0x0f
    2908:	6e 87       	std	Y+14, r22	; 0x0e
    290a:	6a 01       	movw	r12, r20
    290c:	fc 01       	movw	r30, r24
    290e:	17 82       	std	Z+7, r1	; 0x07
    2910:	16 82       	std	Z+6, r1	; 0x06
    2912:	83 81       	ldd	r24, Z+3	; 0x03
    2914:	81 fd       	sbrc	r24, 1
    2916:	03 c0       	rjmp	.+6      	; 0x291e <vfprintf+0x4e>
    2918:	6f ef       	ldi	r22, 0xFF	; 255
    291a:	7f ef       	ldi	r23, 0xFF	; 255
    291c:	71 c3       	rjmp	.+1762   	; 0x3000 <vfprintf+0x730>
    291e:	9e 01       	movw	r18, r28
    2920:	2f 5f       	subi	r18, 0xFF	; 255
    2922:	3f 4f       	sbci	r19, 0xFF	; 255
    2924:	39 8b       	std	Y+17, r19	; 0x11
    2926:	28 8b       	std	Y+16, r18	; 0x10
    2928:	f3 01       	movw	r30, r6
    292a:	23 81       	ldd	r18, Z+3	; 0x03
    292c:	ee 85       	ldd	r30, Y+14	; 0x0e
    292e:	ff 85       	ldd	r31, Y+15	; 0x0f
    2930:	23 fd       	sbrc	r18, 3
    2932:	85 91       	lpm	r24, Z+
    2934:	23 ff       	sbrs	r18, 3
    2936:	81 91       	ld	r24, Z+
    2938:	ff 87       	std	Y+15, r31	; 0x0f
    293a:	ee 87       	std	Y+14, r30	; 0x0e
    293c:	88 23       	and	r24, r24
    293e:	09 f4       	brne	.+2      	; 0x2942 <vfprintf+0x72>
    2940:	5c c3       	rjmp	.+1720   	; 0x2ffa <vfprintf+0x72a>
    2942:	85 32       	cpi	r24, 0x25	; 37
    2944:	51 f4       	brne	.+20     	; 0x295a <vfprintf+0x8a>
    2946:	ee 85       	ldd	r30, Y+14	; 0x0e
    2948:	ff 85       	ldd	r31, Y+15	; 0x0f
    294a:	23 fd       	sbrc	r18, 3
    294c:	85 91       	lpm	r24, Z+
    294e:	23 ff       	sbrs	r18, 3
    2950:	81 91       	ld	r24, Z+
    2952:	ff 87       	std	Y+15, r31	; 0x0f
    2954:	ee 87       	std	Y+14, r30	; 0x0e
    2956:	85 32       	cpi	r24, 0x25	; 37
    2958:	29 f4       	brne	.+10     	; 0x2964 <vfprintf+0x94>
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	b3 01       	movw	r22, r6
    295e:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2962:	e2 cf       	rjmp	.-60     	; 0x2928 <vfprintf+0x58>
    2964:	98 2f       	mov	r25, r24
    2966:	10 e0       	ldi	r17, 0x00	; 0
    2968:	88 24       	eor	r8, r8
    296a:	99 24       	eor	r9, r9
    296c:	10 32       	cpi	r17, 0x20	; 32
    296e:	b0 f4       	brcc	.+44     	; 0x299c <vfprintf+0xcc>
    2970:	9b 32       	cpi	r25, 0x2B	; 43
    2972:	69 f0       	breq	.+26     	; 0x298e <vfprintf+0xbe>
    2974:	9c 32       	cpi	r25, 0x2C	; 44
    2976:	28 f4       	brcc	.+10     	; 0x2982 <vfprintf+0xb2>
    2978:	90 32       	cpi	r25, 0x20	; 32
    297a:	51 f0       	breq	.+20     	; 0x2990 <vfprintf+0xc0>
    297c:	93 32       	cpi	r25, 0x23	; 35
    297e:	71 f4       	brne	.+28     	; 0x299c <vfprintf+0xcc>
    2980:	0b c0       	rjmp	.+22     	; 0x2998 <vfprintf+0xc8>
    2982:	9d 32       	cpi	r25, 0x2D	; 45
    2984:	39 f0       	breq	.+14     	; 0x2994 <vfprintf+0xc4>
    2986:	90 33       	cpi	r25, 0x30	; 48
    2988:	49 f4       	brne	.+18     	; 0x299c <vfprintf+0xcc>
    298a:	11 60       	ori	r17, 0x01	; 1
    298c:	28 c0       	rjmp	.+80     	; 0x29de <vfprintf+0x10e>
    298e:	12 60       	ori	r17, 0x02	; 2
    2990:	14 60       	ori	r17, 0x04	; 4
    2992:	25 c0       	rjmp	.+74     	; 0x29de <vfprintf+0x10e>
    2994:	18 60       	ori	r17, 0x08	; 8
    2996:	23 c0       	rjmp	.+70     	; 0x29de <vfprintf+0x10e>
    2998:	10 61       	ori	r17, 0x10	; 16
    299a:	21 c0       	rjmp	.+66     	; 0x29de <vfprintf+0x10e>
    299c:	17 fd       	sbrc	r17, 7
    299e:	2a c0       	rjmp	.+84     	; 0x29f4 <vfprintf+0x124>
    29a0:	89 2f       	mov	r24, r25
    29a2:	80 53       	subi	r24, 0x30	; 48
    29a4:	8a 30       	cpi	r24, 0x0A	; 10
    29a6:	78 f4       	brcc	.+30     	; 0x29c6 <vfprintf+0xf6>
    29a8:	16 ff       	sbrs	r17, 6
    29aa:	06 c0       	rjmp	.+12     	; 0x29b8 <vfprintf+0xe8>
    29ac:	fa e0       	ldi	r31, 0x0A	; 10
    29ae:	9f 9e       	mul	r9, r31
    29b0:	90 2c       	mov	r9, r0
    29b2:	11 24       	eor	r1, r1
    29b4:	98 0e       	add	r9, r24
    29b6:	13 c0       	rjmp	.+38     	; 0x29de <vfprintf+0x10e>
    29b8:	3a e0       	ldi	r19, 0x0A	; 10
    29ba:	83 9e       	mul	r8, r19
    29bc:	80 2c       	mov	r8, r0
    29be:	11 24       	eor	r1, r1
    29c0:	88 0e       	add	r8, r24
    29c2:	10 62       	ori	r17, 0x20	; 32
    29c4:	0c c0       	rjmp	.+24     	; 0x29de <vfprintf+0x10e>
    29c6:	9e 32       	cpi	r25, 0x2E	; 46
    29c8:	21 f4       	brne	.+8      	; 0x29d2 <vfprintf+0x102>
    29ca:	16 fd       	sbrc	r17, 6
    29cc:	16 c3       	rjmp	.+1580   	; 0x2ffa <vfprintf+0x72a>
    29ce:	10 64       	ori	r17, 0x40	; 64
    29d0:	06 c0       	rjmp	.+12     	; 0x29de <vfprintf+0x10e>
    29d2:	9c 36       	cpi	r25, 0x6C	; 108
    29d4:	11 f4       	brne	.+4      	; 0x29da <vfprintf+0x10a>
    29d6:	10 68       	ori	r17, 0x80	; 128
    29d8:	02 c0       	rjmp	.+4      	; 0x29de <vfprintf+0x10e>
    29da:	98 36       	cpi	r25, 0x68	; 104
    29dc:	59 f4       	brne	.+22     	; 0x29f4 <vfprintf+0x124>
    29de:	ee 85       	ldd	r30, Y+14	; 0x0e
    29e0:	ff 85       	ldd	r31, Y+15	; 0x0f
    29e2:	23 fd       	sbrc	r18, 3
    29e4:	95 91       	lpm	r25, Z+
    29e6:	23 ff       	sbrs	r18, 3
    29e8:	91 91       	ld	r25, Z+
    29ea:	ff 87       	std	Y+15, r31	; 0x0f
    29ec:	ee 87       	std	Y+14, r30	; 0x0e
    29ee:	99 23       	and	r25, r25
    29f0:	09 f0       	breq	.+2      	; 0x29f4 <vfprintf+0x124>
    29f2:	bc cf       	rjmp	.-136    	; 0x296c <vfprintf+0x9c>
    29f4:	89 2f       	mov	r24, r25
    29f6:	85 54       	subi	r24, 0x45	; 69
    29f8:	83 30       	cpi	r24, 0x03	; 3
    29fa:	20 f4       	brcc	.+8      	; 0x2a04 <vfprintf+0x134>
    29fc:	81 2f       	mov	r24, r17
    29fe:	80 61       	ori	r24, 0x10	; 16
    2a00:	90 5e       	subi	r25, 0xE0	; 224
    2a02:	07 c0       	rjmp	.+14     	; 0x2a12 <vfprintf+0x142>
    2a04:	89 2f       	mov	r24, r25
    2a06:	85 56       	subi	r24, 0x65	; 101
    2a08:	83 30       	cpi	r24, 0x03	; 3
    2a0a:	08 f0       	brcs	.+2      	; 0x2a0e <vfprintf+0x13e>
    2a0c:	a1 c1       	rjmp	.+834    	; 0x2d50 <vfprintf+0x480>
    2a0e:	81 2f       	mov	r24, r17
    2a10:	8f 7e       	andi	r24, 0xEF	; 239
    2a12:	86 fd       	sbrc	r24, 6
    2a14:	02 c0       	rjmp	.+4      	; 0x2a1a <vfprintf+0x14a>
    2a16:	76 e0       	ldi	r23, 0x06	; 6
    2a18:	97 2e       	mov	r9, r23
    2a1a:	6f e3       	ldi	r22, 0x3F	; 63
    2a1c:	f6 2e       	mov	r15, r22
    2a1e:	f8 22       	and	r15, r24
    2a20:	95 36       	cpi	r25, 0x65	; 101
    2a22:	19 f4       	brne	.+6      	; 0x2a2a <vfprintf+0x15a>
    2a24:	f0 e4       	ldi	r31, 0x40	; 64
    2a26:	ff 2a       	or	r15, r31
    2a28:	07 c0       	rjmp	.+14     	; 0x2a38 <vfprintf+0x168>
    2a2a:	96 36       	cpi	r25, 0x66	; 102
    2a2c:	19 f4       	brne	.+6      	; 0x2a34 <vfprintf+0x164>
    2a2e:	20 e8       	ldi	r18, 0x80	; 128
    2a30:	f2 2a       	or	r15, r18
    2a32:	02 c0       	rjmp	.+4      	; 0x2a38 <vfprintf+0x168>
    2a34:	91 10       	cpse	r9, r1
    2a36:	9a 94       	dec	r9
    2a38:	f7 fe       	sbrs	r15, 7
    2a3a:	0b c0       	rjmp	.+22     	; 0x2a52 <vfprintf+0x182>
    2a3c:	3b e3       	ldi	r19, 0x3B	; 59
    2a3e:	39 15       	cp	r19, r9
    2a40:	20 f4       	brcc	.+8      	; 0x2a4a <vfprintf+0x17a>
    2a42:	27 e0       	ldi	r18, 0x07	; 7
    2a44:	5c e3       	ldi	r21, 0x3C	; 60
    2a46:	b5 2e       	mov	r11, r21
    2a48:	0e c0       	rjmp	.+28     	; 0x2a66 <vfprintf+0x196>
    2a4a:	b9 2c       	mov	r11, r9
    2a4c:	b3 94       	inc	r11
    2a4e:	27 e0       	ldi	r18, 0x07	; 7
    2a50:	0a c0       	rjmp	.+20     	; 0x2a66 <vfprintf+0x196>
    2a52:	47 e0       	ldi	r20, 0x07	; 7
    2a54:	49 15       	cp	r20, r9
    2a56:	28 f4       	brcc	.+10     	; 0x2a62 <vfprintf+0x192>
    2a58:	27 e0       	ldi	r18, 0x07	; 7
    2a5a:	bb 24       	eor	r11, r11
    2a5c:	47 e0       	ldi	r20, 0x07	; 7
    2a5e:	94 2e       	mov	r9, r20
    2a60:	02 c0       	rjmp	.+4      	; 0x2a66 <vfprintf+0x196>
    2a62:	29 2d       	mov	r18, r9
    2a64:	bb 24       	eor	r11, r11
    2a66:	c6 01       	movw	r24, r12
    2a68:	04 96       	adiw	r24, 0x04	; 4
    2a6a:	9d 87       	std	Y+13, r25	; 0x0d
    2a6c:	8c 87       	std	Y+12, r24	; 0x0c
    2a6e:	f6 01       	movw	r30, r12
    2a70:	60 81       	ld	r22, Z
    2a72:	71 81       	ldd	r23, Z+1	; 0x01
    2a74:	82 81       	ldd	r24, Z+2	; 0x02
    2a76:	93 81       	ldd	r25, Z+3	; 0x03
    2a78:	ae 01       	movw	r20, r28
    2a7a:	4f 5f       	subi	r20, 0xFF	; 255
    2a7c:	5f 4f       	sbci	r21, 0xFF	; 255
    2a7e:	0b 2d       	mov	r16, r11
    2a80:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <__ftoa_engine>
    2a84:	6c 01       	movw	r12, r24
    2a86:	09 81       	ldd	r16, Y+1	; 0x01
    2a88:	20 2e       	mov	r2, r16
    2a8a:	33 24       	eor	r3, r3
    2a8c:	00 ff       	sbrs	r16, 0
    2a8e:	04 c0       	rjmp	.+8      	; 0x2a98 <vfprintf+0x1c8>
    2a90:	03 fd       	sbrc	r16, 3
    2a92:	02 c0       	rjmp	.+4      	; 0x2a98 <vfprintf+0x1c8>
    2a94:	1d e2       	ldi	r17, 0x2D	; 45
    2a96:	09 c0       	rjmp	.+18     	; 0x2aaa <vfprintf+0x1da>
    2a98:	f1 fe       	sbrs	r15, 1
    2a9a:	02 c0       	rjmp	.+4      	; 0x2aa0 <vfprintf+0x1d0>
    2a9c:	1b e2       	ldi	r17, 0x2B	; 43
    2a9e:	05 c0       	rjmp	.+10     	; 0x2aaa <vfprintf+0x1da>
    2aa0:	f2 fc       	sbrc	r15, 2
    2aa2:	02 c0       	rjmp	.+4      	; 0x2aa8 <vfprintf+0x1d8>
    2aa4:	10 e0       	ldi	r17, 0x00	; 0
    2aa6:	01 c0       	rjmp	.+2      	; 0x2aaa <vfprintf+0x1da>
    2aa8:	10 e2       	ldi	r17, 0x20	; 32
    2aaa:	c1 01       	movw	r24, r2
    2aac:	8c 70       	andi	r24, 0x0C	; 12
    2aae:	90 70       	andi	r25, 0x00	; 0
    2ab0:	89 2b       	or	r24, r25
    2ab2:	b9 f1       	breq	.+110    	; 0x2b22 <vfprintf+0x252>
    2ab4:	11 23       	and	r17, r17
    2ab6:	11 f4       	brne	.+4      	; 0x2abc <vfprintf+0x1ec>
    2ab8:	83 e0       	ldi	r24, 0x03	; 3
    2aba:	01 c0       	rjmp	.+2      	; 0x2abe <vfprintf+0x1ee>
    2abc:	84 e0       	ldi	r24, 0x04	; 4
    2abe:	88 15       	cp	r24, r8
    2ac0:	10 f0       	brcs	.+4      	; 0x2ac6 <vfprintf+0x1f6>
    2ac2:	88 24       	eor	r8, r8
    2ac4:	0a c0       	rjmp	.+20     	; 0x2ada <vfprintf+0x20a>
    2ac6:	88 1a       	sub	r8, r24
    2ac8:	f3 fc       	sbrc	r15, 3
    2aca:	07 c0       	rjmp	.+14     	; 0x2ada <vfprintf+0x20a>
    2acc:	80 e2       	ldi	r24, 0x20	; 32
    2ace:	90 e0       	ldi	r25, 0x00	; 0
    2ad0:	b3 01       	movw	r22, r6
    2ad2:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2ad6:	8a 94       	dec	r8
    2ad8:	c9 f7       	brne	.-14     	; 0x2acc <vfprintf+0x1fc>
    2ada:	11 23       	and	r17, r17
    2adc:	29 f0       	breq	.+10     	; 0x2ae8 <vfprintf+0x218>
    2ade:	81 2f       	mov	r24, r17
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	b3 01       	movw	r22, r6
    2ae4:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2ae8:	23 fe       	sbrs	r2, 3
    2aea:	03 c0       	rjmp	.+6      	; 0x2af2 <vfprintf+0x222>
    2aec:	09 e3       	ldi	r16, 0x39	; 57
    2aee:	12 e0       	ldi	r17, 0x02	; 2
    2af0:	0e c0       	rjmp	.+28     	; 0x2b0e <vfprintf+0x23e>
    2af2:	0d e3       	ldi	r16, 0x3D	; 61
    2af4:	12 e0       	ldi	r17, 0x02	; 2
    2af6:	0b c0       	rjmp	.+22     	; 0x2b0e <vfprintf+0x23e>
    2af8:	e1 14       	cp	r14, r1
    2afa:	f1 04       	cpc	r15, r1
    2afc:	09 f0       	breq	.+2      	; 0x2b00 <vfprintf+0x230>
    2afe:	80 52       	subi	r24, 0x20	; 32
    2b00:	90 e0       	ldi	r25, 0x00	; 0
    2b02:	b3 01       	movw	r22, r6
    2b04:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2b08:	0f 5f       	subi	r16, 0xFF	; 255
    2b0a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b0c:	05 c0       	rjmp	.+10     	; 0x2b18 <vfprintf+0x248>
    2b0e:	ef 2c       	mov	r14, r15
    2b10:	ff 24       	eor	r15, r15
    2b12:	f0 e1       	ldi	r31, 0x10	; 16
    2b14:	ef 22       	and	r14, r31
    2b16:	ff 24       	eor	r15, r15
    2b18:	f8 01       	movw	r30, r16
    2b1a:	84 91       	lpm	r24, Z+
    2b1c:	88 23       	and	r24, r24
    2b1e:	61 f7       	brne	.-40     	; 0x2af8 <vfprintf+0x228>
    2b20:	14 c1       	rjmp	.+552    	; 0x2d4a <vfprintf+0x47a>
    2b22:	f7 fe       	sbrs	r15, 7
    2b24:	12 c0       	rjmp	.+36     	; 0x2b4a <vfprintf+0x27a>
    2b26:	bc 0c       	add	r11, r12
    2b28:	24 fe       	sbrs	r2, 4
    2b2a:	04 c0       	rjmp	.+8      	; 0x2b34 <vfprintf+0x264>
    2b2c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b2e:	81 33       	cpi	r24, 0x31	; 49
    2b30:	09 f4       	brne	.+2      	; 0x2b34 <vfprintf+0x264>
    2b32:	ba 94       	dec	r11
    2b34:	1b 14       	cp	r1, r11
    2b36:	1c f0       	brlt	.+6      	; 0x2b3e <vfprintf+0x26e>
    2b38:	bb 24       	eor	r11, r11
    2b3a:	b3 94       	inc	r11
    2b3c:	2d c0       	rjmp	.+90     	; 0x2b98 <vfprintf+0x2c8>
    2b3e:	f8 e0       	ldi	r31, 0x08	; 8
    2b40:	fb 15       	cp	r31, r11
    2b42:	50 f5       	brcc	.+84     	; 0x2b98 <vfprintf+0x2c8>
    2b44:	38 e0       	ldi	r19, 0x08	; 8
    2b46:	b3 2e       	mov	r11, r19
    2b48:	27 c0       	rjmp	.+78     	; 0x2b98 <vfprintf+0x2c8>
    2b4a:	f6 fc       	sbrc	r15, 6
    2b4c:	25 c0       	rjmp	.+74     	; 0x2b98 <vfprintf+0x2c8>
    2b4e:	89 2d       	mov	r24, r9
    2b50:	90 e0       	ldi	r25, 0x00	; 0
    2b52:	8c 15       	cp	r24, r12
    2b54:	9d 05       	cpc	r25, r13
    2b56:	4c f0       	brlt	.+18     	; 0x2b6a <vfprintf+0x29a>
    2b58:	2c ef       	ldi	r18, 0xFC	; 252
    2b5a:	c2 16       	cp	r12, r18
    2b5c:	2f ef       	ldi	r18, 0xFF	; 255
    2b5e:	d2 06       	cpc	r13, r18
    2b60:	24 f0       	brlt	.+8      	; 0x2b6a <vfprintf+0x29a>
    2b62:	30 e8       	ldi	r19, 0x80	; 128
    2b64:	f3 2a       	or	r15, r19
    2b66:	01 c0       	rjmp	.+2      	; 0x2b6a <vfprintf+0x29a>
    2b68:	9a 94       	dec	r9
    2b6a:	99 20       	and	r9, r9
    2b6c:	49 f0       	breq	.+18     	; 0x2b80 <vfprintf+0x2b0>
    2b6e:	e2 e0       	ldi	r30, 0x02	; 2
    2b70:	f0 e0       	ldi	r31, 0x00	; 0
    2b72:	ec 0f       	add	r30, r28
    2b74:	fd 1f       	adc	r31, r29
    2b76:	e9 0d       	add	r30, r9
    2b78:	f1 1d       	adc	r31, r1
    2b7a:	80 81       	ld	r24, Z
    2b7c:	80 33       	cpi	r24, 0x30	; 48
    2b7e:	a1 f3       	breq	.-24     	; 0x2b68 <vfprintf+0x298>
    2b80:	f7 fe       	sbrs	r15, 7
    2b82:	0a c0       	rjmp	.+20     	; 0x2b98 <vfprintf+0x2c8>
    2b84:	b9 2c       	mov	r11, r9
    2b86:	b3 94       	inc	r11
    2b88:	89 2d       	mov	r24, r9
    2b8a:	90 e0       	ldi	r25, 0x00	; 0
    2b8c:	c8 16       	cp	r12, r24
    2b8e:	d9 06       	cpc	r13, r25
    2b90:	14 f0       	brlt	.+4      	; 0x2b96 <vfprintf+0x2c6>
    2b92:	99 24       	eor	r9, r9
    2b94:	01 c0       	rjmp	.+2      	; 0x2b98 <vfprintf+0x2c8>
    2b96:	9c 18       	sub	r9, r12
    2b98:	f7 fc       	sbrc	r15, 7
    2b9a:	03 c0       	rjmp	.+6      	; 0x2ba2 <vfprintf+0x2d2>
    2b9c:	25 e0       	ldi	r18, 0x05	; 5
    2b9e:	30 e0       	ldi	r19, 0x00	; 0
    2ba0:	09 c0       	rjmp	.+18     	; 0x2bb4 <vfprintf+0x2e4>
    2ba2:	1c 14       	cp	r1, r12
    2ba4:	1d 04       	cpc	r1, r13
    2ba6:	1c f0       	brlt	.+6      	; 0x2bae <vfprintf+0x2de>
    2ba8:	21 e0       	ldi	r18, 0x01	; 1
    2baa:	30 e0       	ldi	r19, 0x00	; 0
    2bac:	03 c0       	rjmp	.+6      	; 0x2bb4 <vfprintf+0x2e4>
    2bae:	96 01       	movw	r18, r12
    2bb0:	2f 5f       	subi	r18, 0xFF	; 255
    2bb2:	3f 4f       	sbci	r19, 0xFF	; 255
    2bb4:	11 23       	and	r17, r17
    2bb6:	11 f0       	breq	.+4      	; 0x2bbc <vfprintf+0x2ec>
    2bb8:	2f 5f       	subi	r18, 0xFF	; 255
    2bba:	3f 4f       	sbci	r19, 0xFF	; 255
    2bbc:	99 20       	and	r9, r9
    2bbe:	29 f0       	breq	.+10     	; 0x2bca <vfprintf+0x2fa>
    2bc0:	89 2d       	mov	r24, r9
    2bc2:	90 e0       	ldi	r25, 0x00	; 0
    2bc4:	01 96       	adiw	r24, 0x01	; 1
    2bc6:	28 0f       	add	r18, r24
    2bc8:	39 1f       	adc	r19, r25
    2bca:	88 2d       	mov	r24, r8
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	28 17       	cp	r18, r24
    2bd0:	39 07       	cpc	r19, r25
    2bd2:	14 f0       	brlt	.+4      	; 0x2bd8 <vfprintf+0x308>
    2bd4:	88 24       	eor	r8, r8
    2bd6:	01 c0       	rjmp	.+2      	; 0x2bda <vfprintf+0x30a>
    2bd8:	82 1a       	sub	r8, r18
    2bda:	4f 2c       	mov	r4, r15
    2bdc:	55 24       	eor	r5, r5
    2bde:	c2 01       	movw	r24, r4
    2be0:	89 70       	andi	r24, 0x09	; 9
    2be2:	90 70       	andi	r25, 0x00	; 0
    2be4:	89 2b       	or	r24, r25
    2be6:	39 f0       	breq	.+14     	; 0x2bf6 <vfprintf+0x326>
    2be8:	08 c0       	rjmp	.+16     	; 0x2bfa <vfprintf+0x32a>
    2bea:	80 e2       	ldi	r24, 0x20	; 32
    2bec:	90 e0       	ldi	r25, 0x00	; 0
    2bee:	b3 01       	movw	r22, r6
    2bf0:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2bf4:	8a 94       	dec	r8
    2bf6:	88 20       	and	r8, r8
    2bf8:	c1 f7       	brne	.-16     	; 0x2bea <vfprintf+0x31a>
    2bfa:	11 23       	and	r17, r17
    2bfc:	29 f0       	breq	.+10     	; 0x2c08 <vfprintf+0x338>
    2bfe:	81 2f       	mov	r24, r17
    2c00:	90 e0       	ldi	r25, 0x00	; 0
    2c02:	b3 01       	movw	r22, r6
    2c04:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2c08:	43 fe       	sbrs	r4, 3
    2c0a:	07 c0       	rjmp	.+14     	; 0x2c1a <vfprintf+0x34a>
    2c0c:	08 c0       	rjmp	.+16     	; 0x2c1e <vfprintf+0x34e>
    2c0e:	80 e3       	ldi	r24, 0x30	; 48
    2c10:	90 e0       	ldi	r25, 0x00	; 0
    2c12:	b3 01       	movw	r22, r6
    2c14:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2c18:	8a 94       	dec	r8
    2c1a:	88 20       	and	r8, r8
    2c1c:	c1 f7       	brne	.-16     	; 0x2c0e <vfprintf+0x33e>
    2c1e:	f7 fe       	sbrs	r15, 7
    2c20:	46 c0       	rjmp	.+140    	; 0x2cae <vfprintf+0x3de>
    2c22:	86 01       	movw	r16, r12
    2c24:	d7 fe       	sbrs	r13, 7
    2c26:	02 c0       	rjmp	.+4      	; 0x2c2c <vfprintf+0x35c>
    2c28:	00 e0       	ldi	r16, 0x00	; 0
    2c2a:	10 e0       	ldi	r17, 0x00	; 0
    2c2c:	76 01       	movw	r14, r12
    2c2e:	08 94       	sec
    2c30:	e1 1c       	adc	r14, r1
    2c32:	f1 1c       	adc	r15, r1
    2c34:	e0 1a       	sub	r14, r16
    2c36:	f1 0a       	sbc	r15, r17
    2c38:	41 e0       	ldi	r20, 0x01	; 1
    2c3a:	50 e0       	ldi	r21, 0x00	; 0
    2c3c:	4c 0f       	add	r20, r28
    2c3e:	5d 1f       	adc	r21, r29
    2c40:	e4 0e       	add	r14, r20
    2c42:	f5 1e       	adc	r15, r21
    2c44:	26 01       	movw	r4, r12
    2c46:	4b 18       	sub	r4, r11
    2c48:	51 08       	sbc	r5, r1
    2c4a:	89 2d       	mov	r24, r9
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	aa 24       	eor	r10, r10
    2c50:	bb 24       	eor	r11, r11
    2c52:	a8 1a       	sub	r10, r24
    2c54:	b9 0a       	sbc	r11, r25
    2c56:	5f ef       	ldi	r21, 0xFF	; 255
    2c58:	0f 3f       	cpi	r16, 0xFF	; 255
    2c5a:	15 07       	cpc	r17, r21
    2c5c:	29 f4       	brne	.+10     	; 0x2c68 <vfprintf+0x398>
    2c5e:	8e e2       	ldi	r24, 0x2E	; 46
    2c60:	90 e0       	ldi	r25, 0x00	; 0
    2c62:	b3 01       	movw	r22, r6
    2c64:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2c68:	c0 16       	cp	r12, r16
    2c6a:	d1 06       	cpc	r13, r17
    2c6c:	34 f0       	brlt	.+12     	; 0x2c7a <vfprintf+0x3aa>
    2c6e:	40 16       	cp	r4, r16
    2c70:	51 06       	cpc	r5, r17
    2c72:	1c f4       	brge	.+6      	; 0x2c7a <vfprintf+0x3aa>
    2c74:	f7 01       	movw	r30, r14
    2c76:	80 81       	ld	r24, Z
    2c78:	01 c0       	rjmp	.+2      	; 0x2c7c <vfprintf+0x3ac>
    2c7a:	80 e3       	ldi	r24, 0x30	; 48
    2c7c:	01 50       	subi	r16, 0x01	; 1
    2c7e:	10 40       	sbci	r17, 0x00	; 0
    2c80:	08 94       	sec
    2c82:	e1 1c       	adc	r14, r1
    2c84:	f1 1c       	adc	r15, r1
    2c86:	0a 15       	cp	r16, r10
    2c88:	1b 05       	cpc	r17, r11
    2c8a:	2c f0       	brlt	.+10     	; 0x2c96 <vfprintf+0x3c6>
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	b3 01       	movw	r22, r6
    2c90:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2c94:	e0 cf       	rjmp	.-64     	; 0x2c56 <vfprintf+0x386>
    2c96:	0c 15       	cp	r16, r12
    2c98:	1d 05       	cpc	r17, r13
    2c9a:	39 f4       	brne	.+14     	; 0x2caa <vfprintf+0x3da>
    2c9c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c9e:	96 33       	cpi	r25, 0x36	; 54
    2ca0:	18 f4       	brcc	.+6      	; 0x2ca8 <vfprintf+0x3d8>
    2ca2:	95 33       	cpi	r25, 0x35	; 53
    2ca4:	11 f4       	brne	.+4      	; 0x2caa <vfprintf+0x3da>
    2ca6:	24 fe       	sbrs	r2, 4
    2ca8:	81 e3       	ldi	r24, 0x31	; 49
    2caa:	90 e0       	ldi	r25, 0x00	; 0
    2cac:	4b c0       	rjmp	.+150    	; 0x2d44 <vfprintf+0x474>
    2cae:	8a 81       	ldd	r24, Y+2	; 0x02
    2cb0:	81 33       	cpi	r24, 0x31	; 49
    2cb2:	09 f0       	breq	.+2      	; 0x2cb6 <vfprintf+0x3e6>
    2cb4:	0f 7e       	andi	r16, 0xEF	; 239
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	b3 01       	movw	r22, r6
    2cba:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2cbe:	99 20       	and	r9, r9
    2cc0:	a1 f0       	breq	.+40     	; 0x2cea <vfprintf+0x41a>
    2cc2:	8e e2       	ldi	r24, 0x2E	; 46
    2cc4:	90 e0       	ldi	r25, 0x00	; 0
    2cc6:	b3 01       	movw	r22, r6
    2cc8:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2ccc:	12 e0       	ldi	r17, 0x02	; 2
    2cce:	e1 e0       	ldi	r30, 0x01	; 1
    2cd0:	f0 e0       	ldi	r31, 0x00	; 0
    2cd2:	ec 0f       	add	r30, r28
    2cd4:	fd 1f       	adc	r31, r29
    2cd6:	e1 0f       	add	r30, r17
    2cd8:	f1 1d       	adc	r31, r1
    2cda:	1f 5f       	subi	r17, 0xFF	; 255
    2cdc:	80 81       	ld	r24, Z
    2cde:	90 e0       	ldi	r25, 0x00	; 0
    2ce0:	b3 01       	movw	r22, r6
    2ce2:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2ce6:	9a 94       	dec	r9
    2ce8:	91 f7       	brne	.-28     	; 0x2cce <vfprintf+0x3fe>
    2cea:	44 fc       	sbrc	r4, 4
    2cec:	03 c0       	rjmp	.+6      	; 0x2cf4 <vfprintf+0x424>
    2cee:	85 e6       	ldi	r24, 0x65	; 101
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	02 c0       	rjmp	.+4      	; 0x2cf8 <vfprintf+0x428>
    2cf4:	85 e4       	ldi	r24, 0x45	; 69
    2cf6:	90 e0       	ldi	r25, 0x00	; 0
    2cf8:	b3 01       	movw	r22, r6
    2cfa:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2cfe:	d7 fc       	sbrc	r13, 7
    2d00:	05 c0       	rjmp	.+10     	; 0x2d0c <vfprintf+0x43c>
    2d02:	c1 14       	cp	r12, r1
    2d04:	d1 04       	cpc	r13, r1
    2d06:	41 f4       	brne	.+16     	; 0x2d18 <vfprintf+0x448>
    2d08:	04 ff       	sbrs	r16, 4
    2d0a:	06 c0       	rjmp	.+12     	; 0x2d18 <vfprintf+0x448>
    2d0c:	d0 94       	com	r13
    2d0e:	c1 94       	neg	r12
    2d10:	d1 08       	sbc	r13, r1
    2d12:	d3 94       	inc	r13
    2d14:	8d e2       	ldi	r24, 0x2D	; 45
    2d16:	01 c0       	rjmp	.+2      	; 0x2d1a <vfprintf+0x44a>
    2d18:	8b e2       	ldi	r24, 0x2B	; 43
    2d1a:	90 e0       	ldi	r25, 0x00	; 0
    2d1c:	b3 01       	movw	r22, r6
    2d1e:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2d22:	80 e3       	ldi	r24, 0x30	; 48
    2d24:	05 c0       	rjmp	.+10     	; 0x2d30 <vfprintf+0x460>
    2d26:	8f 5f       	subi	r24, 0xFF	; 255
    2d28:	26 ef       	ldi	r18, 0xF6	; 246
    2d2a:	3f ef       	ldi	r19, 0xFF	; 255
    2d2c:	c2 0e       	add	r12, r18
    2d2e:	d3 1e       	adc	r13, r19
    2d30:	3a e0       	ldi	r19, 0x0A	; 10
    2d32:	c3 16       	cp	r12, r19
    2d34:	d1 04       	cpc	r13, r1
    2d36:	bc f7       	brge	.-18     	; 0x2d26 <vfprintf+0x456>
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	b3 01       	movw	r22, r6
    2d3c:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2d40:	c6 01       	movw	r24, r12
    2d42:	c0 96       	adiw	r24, 0x30	; 48
    2d44:	b3 01       	movw	r22, r6
    2d46:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2d4a:	cc 84       	ldd	r12, Y+12	; 0x0c
    2d4c:	dd 84       	ldd	r13, Y+13	; 0x0d
    2d4e:	52 c1       	rjmp	.+676    	; 0x2ff4 <vfprintf+0x724>
    2d50:	93 36       	cpi	r25, 0x63	; 99
    2d52:	31 f0       	breq	.+12     	; 0x2d60 <vfprintf+0x490>
    2d54:	93 37       	cpi	r25, 0x73	; 115
    2d56:	99 f0       	breq	.+38     	; 0x2d7e <vfprintf+0x4ae>
    2d58:	93 35       	cpi	r25, 0x53	; 83
    2d5a:	09 f0       	breq	.+2      	; 0x2d5e <vfprintf+0x48e>
    2d5c:	59 c0       	rjmp	.+178    	; 0x2e10 <vfprintf+0x540>
    2d5e:	23 c0       	rjmp	.+70     	; 0x2da6 <vfprintf+0x4d6>
    2d60:	f6 01       	movw	r30, r12
    2d62:	80 81       	ld	r24, Z
    2d64:	89 83       	std	Y+1, r24	; 0x01
    2d66:	5e 01       	movw	r10, r28
    2d68:	08 94       	sec
    2d6a:	a1 1c       	adc	r10, r1
    2d6c:	b1 1c       	adc	r11, r1
    2d6e:	22 e0       	ldi	r18, 0x02	; 2
    2d70:	30 e0       	ldi	r19, 0x00	; 0
    2d72:	c2 0e       	add	r12, r18
    2d74:	d3 1e       	adc	r13, r19
    2d76:	21 e0       	ldi	r18, 0x01	; 1
    2d78:	e2 2e       	mov	r14, r18
    2d7a:	f1 2c       	mov	r15, r1
    2d7c:	12 c0       	rjmp	.+36     	; 0x2da2 <vfprintf+0x4d2>
    2d7e:	f6 01       	movw	r30, r12
    2d80:	a0 80       	ld	r10, Z
    2d82:	b1 80       	ldd	r11, Z+1	; 0x01
    2d84:	16 fd       	sbrc	r17, 6
    2d86:	03 c0       	rjmp	.+6      	; 0x2d8e <vfprintf+0x4be>
    2d88:	6f ef       	ldi	r22, 0xFF	; 255
    2d8a:	7f ef       	ldi	r23, 0xFF	; 255
    2d8c:	02 c0       	rjmp	.+4      	; 0x2d92 <vfprintf+0x4c2>
    2d8e:	69 2d       	mov	r22, r9
    2d90:	70 e0       	ldi	r23, 0x00	; 0
    2d92:	22 e0       	ldi	r18, 0x02	; 2
    2d94:	30 e0       	ldi	r19, 0x00	; 0
    2d96:	c2 0e       	add	r12, r18
    2d98:	d3 1e       	adc	r13, r19
    2d9a:	c5 01       	movw	r24, r10
    2d9c:	0e 94 e4 1b 	call	0x37c8	; 0x37c8 <strnlen>
    2da0:	7c 01       	movw	r14, r24
    2da2:	1f 77       	andi	r17, 0x7F	; 127
    2da4:	13 c0       	rjmp	.+38     	; 0x2dcc <vfprintf+0x4fc>
    2da6:	f6 01       	movw	r30, r12
    2da8:	a0 80       	ld	r10, Z
    2daa:	b1 80       	ldd	r11, Z+1	; 0x01
    2dac:	16 fd       	sbrc	r17, 6
    2dae:	03 c0       	rjmp	.+6      	; 0x2db6 <vfprintf+0x4e6>
    2db0:	6f ef       	ldi	r22, 0xFF	; 255
    2db2:	7f ef       	ldi	r23, 0xFF	; 255
    2db4:	02 c0       	rjmp	.+4      	; 0x2dba <vfprintf+0x4ea>
    2db6:	69 2d       	mov	r22, r9
    2db8:	70 e0       	ldi	r23, 0x00	; 0
    2dba:	22 e0       	ldi	r18, 0x02	; 2
    2dbc:	30 e0       	ldi	r19, 0x00	; 0
    2dbe:	c2 0e       	add	r12, r18
    2dc0:	d3 1e       	adc	r13, r19
    2dc2:	c5 01       	movw	r24, r10
    2dc4:	0e 94 d2 1b 	call	0x37a4	; 0x37a4 <strnlen_P>
    2dc8:	7c 01       	movw	r14, r24
    2dca:	10 68       	ori	r17, 0x80	; 128
    2dcc:	13 ff       	sbrs	r17, 3
    2dce:	07 c0       	rjmp	.+14     	; 0x2dde <vfprintf+0x50e>
    2dd0:	1b c0       	rjmp	.+54     	; 0x2e08 <vfprintf+0x538>
    2dd2:	80 e2       	ldi	r24, 0x20	; 32
    2dd4:	90 e0       	ldi	r25, 0x00	; 0
    2dd6:	b3 01       	movw	r22, r6
    2dd8:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2ddc:	8a 94       	dec	r8
    2dde:	88 2d       	mov	r24, r8
    2de0:	90 e0       	ldi	r25, 0x00	; 0
    2de2:	e8 16       	cp	r14, r24
    2de4:	f9 06       	cpc	r15, r25
    2de6:	a8 f3       	brcs	.-22     	; 0x2dd2 <vfprintf+0x502>
    2de8:	0f c0       	rjmp	.+30     	; 0x2e08 <vfprintf+0x538>
    2dea:	f5 01       	movw	r30, r10
    2dec:	17 fd       	sbrc	r17, 7
    2dee:	85 91       	lpm	r24, Z+
    2df0:	17 ff       	sbrs	r17, 7
    2df2:	81 91       	ld	r24, Z+
    2df4:	5f 01       	movw	r10, r30
    2df6:	90 e0       	ldi	r25, 0x00	; 0
    2df8:	b3 01       	movw	r22, r6
    2dfa:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2dfe:	81 10       	cpse	r8, r1
    2e00:	8a 94       	dec	r8
    2e02:	08 94       	sec
    2e04:	e1 08       	sbc	r14, r1
    2e06:	f1 08       	sbc	r15, r1
    2e08:	e1 14       	cp	r14, r1
    2e0a:	f1 04       	cpc	r15, r1
    2e0c:	71 f7       	brne	.-36     	; 0x2dea <vfprintf+0x51a>
    2e0e:	f2 c0       	rjmp	.+484    	; 0x2ff4 <vfprintf+0x724>
    2e10:	94 36       	cpi	r25, 0x64	; 100
    2e12:	11 f0       	breq	.+4      	; 0x2e18 <vfprintf+0x548>
    2e14:	99 36       	cpi	r25, 0x69	; 105
    2e16:	89 f5       	brne	.+98     	; 0x2e7a <vfprintf+0x5aa>
    2e18:	17 ff       	sbrs	r17, 7
    2e1a:	08 c0       	rjmp	.+16     	; 0x2e2c <vfprintf+0x55c>
    2e1c:	f6 01       	movw	r30, r12
    2e1e:	20 81       	ld	r18, Z
    2e20:	31 81       	ldd	r19, Z+1	; 0x01
    2e22:	42 81       	ldd	r20, Z+2	; 0x02
    2e24:	53 81       	ldd	r21, Z+3	; 0x03
    2e26:	84 e0       	ldi	r24, 0x04	; 4
    2e28:	90 e0       	ldi	r25, 0x00	; 0
    2e2a:	0a c0       	rjmp	.+20     	; 0x2e40 <vfprintf+0x570>
    2e2c:	f6 01       	movw	r30, r12
    2e2e:	80 81       	ld	r24, Z
    2e30:	91 81       	ldd	r25, Z+1	; 0x01
    2e32:	9c 01       	movw	r18, r24
    2e34:	44 27       	eor	r20, r20
    2e36:	37 fd       	sbrc	r19, 7
    2e38:	40 95       	com	r20
    2e3a:	54 2f       	mov	r21, r20
    2e3c:	82 e0       	ldi	r24, 0x02	; 2
    2e3e:	90 e0       	ldi	r25, 0x00	; 0
    2e40:	c8 0e       	add	r12, r24
    2e42:	d9 1e       	adc	r13, r25
    2e44:	9f e6       	ldi	r25, 0x6F	; 111
    2e46:	f9 2e       	mov	r15, r25
    2e48:	f1 22       	and	r15, r17
    2e4a:	57 ff       	sbrs	r21, 7
    2e4c:	09 c0       	rjmp	.+18     	; 0x2e60 <vfprintf+0x590>
    2e4e:	50 95       	com	r21
    2e50:	40 95       	com	r20
    2e52:	30 95       	com	r19
    2e54:	21 95       	neg	r18
    2e56:	3f 4f       	sbci	r19, 0xFF	; 255
    2e58:	4f 4f       	sbci	r20, 0xFF	; 255
    2e5a:	5f 4f       	sbci	r21, 0xFF	; 255
    2e5c:	90 e8       	ldi	r25, 0x80	; 128
    2e5e:	f9 2a       	or	r15, r25
    2e60:	ca 01       	movw	r24, r20
    2e62:	b9 01       	movw	r22, r18
    2e64:	ae 01       	movw	r20, r28
    2e66:	4f 5f       	subi	r20, 0xFF	; 255
    2e68:	5f 4f       	sbci	r21, 0xFF	; 255
    2e6a:	2a e0       	ldi	r18, 0x0A	; 10
    2e6c:	30 e0       	ldi	r19, 0x00	; 0
    2e6e:	0e 94 4c 1c 	call	0x3898	; 0x3898 <__ultoa_invert>
    2e72:	e8 2e       	mov	r14, r24
    2e74:	e8 89       	ldd	r30, Y+16	; 0x10
    2e76:	ee 1a       	sub	r14, r30
    2e78:	41 c0       	rjmp	.+130    	; 0x2efc <vfprintf+0x62c>
    2e7a:	95 37       	cpi	r25, 0x75	; 117
    2e7c:	21 f4       	brne	.+8      	; 0x2e86 <vfprintf+0x5b6>
    2e7e:	1f 7e       	andi	r17, 0xEF	; 239
    2e80:	2a e0       	ldi	r18, 0x0A	; 10
    2e82:	30 e0       	ldi	r19, 0x00	; 0
    2e84:	1c c0       	rjmp	.+56     	; 0x2ebe <vfprintf+0x5ee>
    2e86:	19 7f       	andi	r17, 0xF9	; 249
    2e88:	9f 36       	cpi	r25, 0x6F	; 111
    2e8a:	61 f0       	breq	.+24     	; 0x2ea4 <vfprintf+0x5d4>
    2e8c:	90 37       	cpi	r25, 0x70	; 112
    2e8e:	20 f4       	brcc	.+8      	; 0x2e98 <vfprintf+0x5c8>
    2e90:	98 35       	cpi	r25, 0x58	; 88
    2e92:	09 f0       	breq	.+2      	; 0x2e96 <vfprintf+0x5c6>
    2e94:	b2 c0       	rjmp	.+356    	; 0x2ffa <vfprintf+0x72a>
    2e96:	0f c0       	rjmp	.+30     	; 0x2eb6 <vfprintf+0x5e6>
    2e98:	90 37       	cpi	r25, 0x70	; 112
    2e9a:	39 f0       	breq	.+14     	; 0x2eaa <vfprintf+0x5da>
    2e9c:	98 37       	cpi	r25, 0x78	; 120
    2e9e:	09 f0       	breq	.+2      	; 0x2ea2 <vfprintf+0x5d2>
    2ea0:	ac c0       	rjmp	.+344    	; 0x2ffa <vfprintf+0x72a>
    2ea2:	04 c0       	rjmp	.+8      	; 0x2eac <vfprintf+0x5dc>
    2ea4:	28 e0       	ldi	r18, 0x08	; 8
    2ea6:	30 e0       	ldi	r19, 0x00	; 0
    2ea8:	0a c0       	rjmp	.+20     	; 0x2ebe <vfprintf+0x5ee>
    2eaa:	10 61       	ori	r17, 0x10	; 16
    2eac:	14 fd       	sbrc	r17, 4
    2eae:	14 60       	ori	r17, 0x04	; 4
    2eb0:	20 e1       	ldi	r18, 0x10	; 16
    2eb2:	30 e0       	ldi	r19, 0x00	; 0
    2eb4:	04 c0       	rjmp	.+8      	; 0x2ebe <vfprintf+0x5ee>
    2eb6:	14 fd       	sbrc	r17, 4
    2eb8:	16 60       	ori	r17, 0x06	; 6
    2eba:	20 e1       	ldi	r18, 0x10	; 16
    2ebc:	32 e0       	ldi	r19, 0x02	; 2
    2ebe:	17 ff       	sbrs	r17, 7
    2ec0:	08 c0       	rjmp	.+16     	; 0x2ed2 <vfprintf+0x602>
    2ec2:	f6 01       	movw	r30, r12
    2ec4:	60 81       	ld	r22, Z
    2ec6:	71 81       	ldd	r23, Z+1	; 0x01
    2ec8:	82 81       	ldd	r24, Z+2	; 0x02
    2eca:	93 81       	ldd	r25, Z+3	; 0x03
    2ecc:	44 e0       	ldi	r20, 0x04	; 4
    2ece:	50 e0       	ldi	r21, 0x00	; 0
    2ed0:	08 c0       	rjmp	.+16     	; 0x2ee2 <vfprintf+0x612>
    2ed2:	f6 01       	movw	r30, r12
    2ed4:	80 81       	ld	r24, Z
    2ed6:	91 81       	ldd	r25, Z+1	; 0x01
    2ed8:	bc 01       	movw	r22, r24
    2eda:	80 e0       	ldi	r24, 0x00	; 0
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	42 e0       	ldi	r20, 0x02	; 2
    2ee0:	50 e0       	ldi	r21, 0x00	; 0
    2ee2:	c4 0e       	add	r12, r20
    2ee4:	d5 1e       	adc	r13, r21
    2ee6:	ae 01       	movw	r20, r28
    2ee8:	4f 5f       	subi	r20, 0xFF	; 255
    2eea:	5f 4f       	sbci	r21, 0xFF	; 255
    2eec:	0e 94 4c 1c 	call	0x3898	; 0x3898 <__ultoa_invert>
    2ef0:	e8 2e       	mov	r14, r24
    2ef2:	58 89       	ldd	r21, Y+16	; 0x10
    2ef4:	e5 1a       	sub	r14, r21
    2ef6:	8f e7       	ldi	r24, 0x7F	; 127
    2ef8:	f8 2e       	mov	r15, r24
    2efa:	f1 22       	and	r15, r17
    2efc:	f6 fe       	sbrs	r15, 6
    2efe:	0b c0       	rjmp	.+22     	; 0x2f16 <vfprintf+0x646>
    2f00:	8e ef       	ldi	r24, 0xFE	; 254
    2f02:	f8 22       	and	r15, r24
    2f04:	e9 14       	cp	r14, r9
    2f06:	38 f4       	brcc	.+14     	; 0x2f16 <vfprintf+0x646>
    2f08:	f4 fe       	sbrs	r15, 4
    2f0a:	07 c0       	rjmp	.+14     	; 0x2f1a <vfprintf+0x64a>
    2f0c:	f2 fc       	sbrc	r15, 2
    2f0e:	05 c0       	rjmp	.+10     	; 0x2f1a <vfprintf+0x64a>
    2f10:	9f ee       	ldi	r25, 0xEF	; 239
    2f12:	f9 22       	and	r15, r25
    2f14:	02 c0       	rjmp	.+4      	; 0x2f1a <vfprintf+0x64a>
    2f16:	1e 2d       	mov	r17, r14
    2f18:	01 c0       	rjmp	.+2      	; 0x2f1c <vfprintf+0x64c>
    2f1a:	19 2d       	mov	r17, r9
    2f1c:	f4 fe       	sbrs	r15, 4
    2f1e:	0d c0       	rjmp	.+26     	; 0x2f3a <vfprintf+0x66a>
    2f20:	fe 01       	movw	r30, r28
    2f22:	ee 0d       	add	r30, r14
    2f24:	f1 1d       	adc	r31, r1
    2f26:	80 81       	ld	r24, Z
    2f28:	80 33       	cpi	r24, 0x30	; 48
    2f2a:	19 f4       	brne	.+6      	; 0x2f32 <vfprintf+0x662>
    2f2c:	e9 ee       	ldi	r30, 0xE9	; 233
    2f2e:	fe 22       	and	r15, r30
    2f30:	08 c0       	rjmp	.+16     	; 0x2f42 <vfprintf+0x672>
    2f32:	1f 5f       	subi	r17, 0xFF	; 255
    2f34:	f2 fe       	sbrs	r15, 2
    2f36:	05 c0       	rjmp	.+10     	; 0x2f42 <vfprintf+0x672>
    2f38:	03 c0       	rjmp	.+6      	; 0x2f40 <vfprintf+0x670>
    2f3a:	8f 2d       	mov	r24, r15
    2f3c:	86 78       	andi	r24, 0x86	; 134
    2f3e:	09 f0       	breq	.+2      	; 0x2f42 <vfprintf+0x672>
    2f40:	1f 5f       	subi	r17, 0xFF	; 255
    2f42:	0f 2d       	mov	r16, r15
    2f44:	f3 fc       	sbrc	r15, 3
    2f46:	14 c0       	rjmp	.+40     	; 0x2f70 <vfprintf+0x6a0>
    2f48:	f0 fe       	sbrs	r15, 0
    2f4a:	0f c0       	rjmp	.+30     	; 0x2f6a <vfprintf+0x69a>
    2f4c:	18 15       	cp	r17, r8
    2f4e:	10 f0       	brcs	.+4      	; 0x2f54 <vfprintf+0x684>
    2f50:	9e 2c       	mov	r9, r14
    2f52:	0b c0       	rjmp	.+22     	; 0x2f6a <vfprintf+0x69a>
    2f54:	9e 2c       	mov	r9, r14
    2f56:	98 0c       	add	r9, r8
    2f58:	91 1a       	sub	r9, r17
    2f5a:	18 2d       	mov	r17, r8
    2f5c:	06 c0       	rjmp	.+12     	; 0x2f6a <vfprintf+0x69a>
    2f5e:	80 e2       	ldi	r24, 0x20	; 32
    2f60:	90 e0       	ldi	r25, 0x00	; 0
    2f62:	b3 01       	movw	r22, r6
    2f64:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2f68:	1f 5f       	subi	r17, 0xFF	; 255
    2f6a:	18 15       	cp	r17, r8
    2f6c:	c0 f3       	brcs	.-16     	; 0x2f5e <vfprintf+0x68e>
    2f6e:	04 c0       	rjmp	.+8      	; 0x2f78 <vfprintf+0x6a8>
    2f70:	18 15       	cp	r17, r8
    2f72:	10 f4       	brcc	.+4      	; 0x2f78 <vfprintf+0x6a8>
    2f74:	81 1a       	sub	r8, r17
    2f76:	01 c0       	rjmp	.+2      	; 0x2f7a <vfprintf+0x6aa>
    2f78:	88 24       	eor	r8, r8
    2f7a:	04 ff       	sbrs	r16, 4
    2f7c:	0f c0       	rjmp	.+30     	; 0x2f9c <vfprintf+0x6cc>
    2f7e:	80 e3       	ldi	r24, 0x30	; 48
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	b3 01       	movw	r22, r6
    2f84:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2f88:	02 ff       	sbrs	r16, 2
    2f8a:	1d c0       	rjmp	.+58     	; 0x2fc6 <vfprintf+0x6f6>
    2f8c:	01 fd       	sbrc	r16, 1
    2f8e:	03 c0       	rjmp	.+6      	; 0x2f96 <vfprintf+0x6c6>
    2f90:	88 e7       	ldi	r24, 0x78	; 120
    2f92:	90 e0       	ldi	r25, 0x00	; 0
    2f94:	0e c0       	rjmp	.+28     	; 0x2fb2 <vfprintf+0x6e2>
    2f96:	88 e5       	ldi	r24, 0x58	; 88
    2f98:	90 e0       	ldi	r25, 0x00	; 0
    2f9a:	0b c0       	rjmp	.+22     	; 0x2fb2 <vfprintf+0x6e2>
    2f9c:	80 2f       	mov	r24, r16
    2f9e:	86 78       	andi	r24, 0x86	; 134
    2fa0:	91 f0       	breq	.+36     	; 0x2fc6 <vfprintf+0x6f6>
    2fa2:	01 ff       	sbrs	r16, 1
    2fa4:	02 c0       	rjmp	.+4      	; 0x2faa <vfprintf+0x6da>
    2fa6:	8b e2       	ldi	r24, 0x2B	; 43
    2fa8:	01 c0       	rjmp	.+2      	; 0x2fac <vfprintf+0x6dc>
    2faa:	80 e2       	ldi	r24, 0x20	; 32
    2fac:	f7 fc       	sbrc	r15, 7
    2fae:	8d e2       	ldi	r24, 0x2D	; 45
    2fb0:	90 e0       	ldi	r25, 0x00	; 0
    2fb2:	b3 01       	movw	r22, r6
    2fb4:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2fb8:	06 c0       	rjmp	.+12     	; 0x2fc6 <vfprintf+0x6f6>
    2fba:	80 e3       	ldi	r24, 0x30	; 48
    2fbc:	90 e0       	ldi	r25, 0x00	; 0
    2fbe:	b3 01       	movw	r22, r6
    2fc0:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2fc4:	9a 94       	dec	r9
    2fc6:	e9 14       	cp	r14, r9
    2fc8:	c0 f3       	brcs	.-16     	; 0x2fba <vfprintf+0x6ea>
    2fca:	ea 94       	dec	r14
    2fcc:	e1 e0       	ldi	r30, 0x01	; 1
    2fce:	f0 e0       	ldi	r31, 0x00	; 0
    2fd0:	ec 0f       	add	r30, r28
    2fd2:	fd 1f       	adc	r31, r29
    2fd4:	ee 0d       	add	r30, r14
    2fd6:	f1 1d       	adc	r31, r1
    2fd8:	80 81       	ld	r24, Z
    2fda:	90 e0       	ldi	r25, 0x00	; 0
    2fdc:	b3 01       	movw	r22, r6
    2fde:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2fe2:	ee 20       	and	r14, r14
    2fe4:	91 f7       	brne	.-28     	; 0x2fca <vfprintf+0x6fa>
    2fe6:	06 c0       	rjmp	.+12     	; 0x2ff4 <vfprintf+0x724>
    2fe8:	80 e2       	ldi	r24, 0x20	; 32
    2fea:	90 e0       	ldi	r25, 0x00	; 0
    2fec:	b3 01       	movw	r22, r6
    2fee:	0e 94 ef 1b 	call	0x37de	; 0x37de <fputc>
    2ff2:	8a 94       	dec	r8
    2ff4:	88 20       	and	r8, r8
    2ff6:	c1 f7       	brne	.-16     	; 0x2fe8 <vfprintf+0x718>
    2ff8:	97 cc       	rjmp	.-1746   	; 0x2928 <vfprintf+0x58>
    2ffa:	f3 01       	movw	r30, r6
    2ffc:	66 81       	ldd	r22, Z+6	; 0x06
    2ffe:	77 81       	ldd	r23, Z+7	; 0x07
    3000:	cb 01       	movw	r24, r22
    3002:	61 96       	adiw	r28, 0x11	; 17
    3004:	0f b6       	in	r0, 0x3f	; 63
    3006:	f8 94       	cli
    3008:	de bf       	out	0x3e, r29	; 62
    300a:	0f be       	out	0x3f, r0	; 63
    300c:	cd bf       	out	0x3d, r28	; 61
    300e:	cf 91       	pop	r28
    3010:	df 91       	pop	r29
    3012:	1f 91       	pop	r17
    3014:	0f 91       	pop	r16
    3016:	ff 90       	pop	r15
    3018:	ef 90       	pop	r14
    301a:	df 90       	pop	r13
    301c:	cf 90       	pop	r12
    301e:	bf 90       	pop	r11
    3020:	af 90       	pop	r10
    3022:	9f 90       	pop	r9
    3024:	8f 90       	pop	r8
    3026:	7f 90       	pop	r7
    3028:	6f 90       	pop	r6
    302a:	5f 90       	pop	r5
    302c:	4f 90       	pop	r4
    302e:	3f 90       	pop	r3
    3030:	2f 90       	pop	r2
    3032:	08 95       	ret

00003034 <i2c_start_transmission>:
    3034:	f8 94       	cli
    3036:	80 91 16 07 	lds	r24, 0x0716
    303a:	88 23       	and	r24, r24
    303c:	11 f4       	brne	.+4      	; 0x3042 <i2c_start_transmission+0xe>
    303e:	81 e1       	ldi	r24, 0x11	; 17
    3040:	05 c0       	rjmp	.+10     	; 0x304c <i2c_start_transmission+0x18>
    3042:	80 91 74 00 	lds	r24, 0x0074
    3046:	84 ff       	sbrs	r24, 4
    3048:	05 c0       	rjmp	.+10     	; 0x3054 <i2c_start_transmission+0x20>
    304a:	82 e1       	ldi	r24, 0x12	; 18
    304c:	80 93 16 07 	sts	0x0716, r24
    3050:	80 e0       	ldi	r24, 0x00	; 0
    3052:	15 c0       	rjmp	.+42     	; 0x307e <i2c_start_transmission+0x4a>
    3054:	80 91 74 00 	lds	r24, 0x0074
    3058:	85 ff       	sbrs	r24, 5
    305a:	07 c0       	rjmp	.+14     	; 0x306a <i2c_start_transmission+0x36>
    305c:	10 92 74 00 	sts	0x0074, r1
    3060:	84 e0       	ldi	r24, 0x04	; 4
    3062:	80 93 74 00 	sts	0x0074, r24
    3066:	88 e1       	ldi	r24, 0x18	; 24
    3068:	f1 cf       	rjmp	.-30     	; 0x304c <i2c_start_transmission+0x18>
    306a:	10 92 16 07 	sts	0x0716, r1
    306e:	80 91 19 07 	lds	r24, 0x0719
    3072:	80 93 17 07 	sts	0x0717, r24
    3076:	85 ea       	ldi	r24, 0xA5	; 165
    3078:	80 93 74 00 	sts	0x0074, r24
    307c:	81 e0       	ldi	r24, 0x01	; 1
    307e:	78 94       	sei
    3080:	08 95       	ret

00003082 <i2c_wait_transmission>:
    3082:	80 e1       	ldi	r24, 0x10	; 16
    3084:	97 e2       	ldi	r25, 0x27	; 39
    3086:	35 e0       	ldi	r19, 0x05	; 5
    3088:	0d c0       	rjmp	.+26     	; 0x30a4 <i2c_wait_transmission+0x22>
    308a:	20 91 74 00 	lds	r18, 0x0074
    308e:	20 fd       	sbrc	r18, 0
    3090:	06 c0       	rjmp	.+12     	; 0x309e <i2c_wait_transmission+0x1c>
    3092:	20 91 74 00 	lds	r18, 0x0074
    3096:	24 fd       	sbrc	r18, 4
    3098:	02 c0       	rjmp	.+4      	; 0x309e <i2c_wait_transmission+0x1c>
    309a:	81 e0       	ldi	r24, 0x01	; 1
    309c:	08 95       	ret
    309e:	23 2f       	mov	r18, r19
    30a0:	2a 95       	dec	r18
    30a2:	f1 f7       	brne	.-4      	; 0x30a0 <i2c_wait_transmission+0x1e>
    30a4:	01 97       	sbiw	r24, 0x01	; 1
    30a6:	2f ef       	ldi	r18, 0xFF	; 255
    30a8:	8f 3f       	cpi	r24, 0xFF	; 255
    30aa:	92 07       	cpc	r25, r18
    30ac:	71 f7       	brne	.-36     	; 0x308a <i2c_wait_transmission+0x8>
    30ae:	f8 94       	cli
    30b0:	10 92 74 00 	sts	0x0074, r1
    30b4:	84 e0       	ldi	r24, 0x04	; 4
    30b6:	80 93 74 00 	sts	0x0074, r24
    30ba:	80 91 16 07 	lds	r24, 0x0716
    30be:	80 31       	cpi	r24, 0x10	; 16
    30c0:	18 f4       	brcc	.+6      	; 0x30c8 <i2c_wait_transmission+0x46>
    30c2:	83 e1       	ldi	r24, 0x13	; 19
    30c4:	80 93 16 07 	sts	0x0716, r24
    30c8:	78 94       	sei
    30ca:	80 e0       	ldi	r24, 0x00	; 0
    30cc:	08 95       	ret

000030ce <i2c_status>:
    30ce:	80 91 16 07 	lds	r24, 0x0716
    30d2:	08 95       	ret

000030d4 <i2c_init>:
    30d4:	e4 e7       	ldi	r30, 0x74	; 116
    30d6:	f0 e0       	ldi	r31, 0x00	; 0
    30d8:	10 82       	st	Z, r1
    30da:	88 e4       	ldi	r24, 0x48	; 72
    30dc:	80 93 70 00 	sts	0x0070, r24
    30e0:	8f ef       	ldi	r24, 0xFF	; 255
    30e2:	80 93 73 00 	sts	0x0073, r24
    30e6:	84 e0       	ldi	r24, 0x04	; 4
    30e8:	80 83       	st	Z, r24
    30ea:	81 e0       	ldi	r24, 0x01	; 1
    30ec:	80 93 16 07 	sts	0x0716, r24
    30f0:	08 95       	ret

000030f2 <__vector_33>:
    30f2:	1f 92       	push	r1
    30f4:	0f 92       	push	r0
    30f6:	0f b6       	in	r0, 0x3f	; 63
    30f8:	0f 92       	push	r0
    30fa:	0b b6       	in	r0, 0x3b	; 59
    30fc:	0f 92       	push	r0
    30fe:	11 24       	eor	r1, r1
    3100:	2f 93       	push	r18
    3102:	3f 93       	push	r19
    3104:	8f 93       	push	r24
    3106:	9f 93       	push	r25
    3108:	ef 93       	push	r30
    310a:	ff 93       	push	r31
    310c:	80 91 71 00 	lds	r24, 0x0071
    3110:	88 7f       	andi	r24, 0xF8	; 248
    3112:	80 93 18 07 	sts	0x0718, r24
    3116:	88 32       	cpi	r24, 0x28	; 40
    3118:	51 f1       	breq	.+84     	; 0x316e <__vector_33+0x7c>
    311a:	89 32       	cpi	r24, 0x29	; 41
    311c:	88 f4       	brcc	.+34     	; 0x3140 <__vector_33+0x4e>
    311e:	80 31       	cpi	r24, 0x10	; 16
    3120:	21 f1       	breq	.+72     	; 0x316a <__vector_33+0x78>
    3122:	81 31       	cpi	r24, 0x11	; 17
    3124:	38 f4       	brcc	.+14     	; 0x3134 <__vector_33+0x42>
    3126:	88 23       	and	r24, r24
    3128:	09 f4       	brne	.+2      	; 0x312c <__vector_33+0x3a>
    312a:	71 c0       	rjmp	.+226    	; 0x320e <__vector_33+0x11c>
    312c:	88 30       	cpi	r24, 0x08	; 8
    312e:	09 f0       	breq	.+2      	; 0x3132 <__vector_33+0x40>
    3130:	73 c0       	rjmp	.+230    	; 0x3218 <__vector_33+0x126>
    3132:	1b c0       	rjmp	.+54     	; 0x316a <__vector_33+0x78>
    3134:	88 31       	cpi	r24, 0x18	; 24
    3136:	d9 f0       	breq	.+54     	; 0x316e <__vector_33+0x7c>
    3138:	80 32       	cpi	r24, 0x20	; 32
    313a:	09 f0       	breq	.+2      	; 0x313e <__vector_33+0x4c>
    313c:	6d c0       	rjmp	.+218    	; 0x3218 <__vector_33+0x126>
    313e:	67 c0       	rjmp	.+206    	; 0x320e <__vector_33+0x11c>
    3140:	80 34       	cpi	r24, 0x40	; 64
    3142:	09 f4       	brne	.+2      	; 0x3146 <__vector_33+0x54>
    3144:	42 c0       	rjmp	.+132    	; 0x31ca <__vector_33+0xd8>
    3146:	81 34       	cpi	r24, 0x41	; 65
    3148:	38 f4       	brcc	.+14     	; 0x3158 <__vector_33+0x66>
    314a:	80 33       	cpi	r24, 0x30	; 48
    314c:	09 f4       	brne	.+2      	; 0x3150 <__vector_33+0x5e>
    314e:	5f c0       	rjmp	.+190    	; 0x320e <__vector_33+0x11c>
    3150:	88 33       	cpi	r24, 0x38	; 56
    3152:	09 f0       	breq	.+2      	; 0x3156 <__vector_33+0x64>
    3154:	61 c0       	rjmp	.+194    	; 0x3218 <__vector_33+0x126>
    3156:	56 c0       	rjmp	.+172    	; 0x3204 <__vector_33+0x112>
    3158:	80 35       	cpi	r24, 0x50	; 80
    315a:	59 f1       	breq	.+86     	; 0x31b2 <__vector_33+0xc0>
    315c:	88 35       	cpi	r24, 0x58	; 88
    315e:	09 f4       	brne	.+2      	; 0x3162 <__vector_33+0x70>
    3160:	42 c0       	rjmp	.+132    	; 0x31e6 <__vector_33+0xf4>
    3162:	88 34       	cpi	r24, 0x48	; 72
    3164:	09 f0       	breq	.+2      	; 0x3168 <__vector_33+0x76>
    3166:	58 c0       	rjmp	.+176    	; 0x3218 <__vector_33+0x126>
    3168:	52 c0       	rjmp	.+164    	; 0x320e <__vector_33+0x11c>
    316a:	10 92 1a 07 	sts	0x071A, r1
    316e:	90 91 1a 07 	lds	r25, 0x071A
    3172:	80 91 17 07 	lds	r24, 0x0717
    3176:	98 17       	cp	r25, r24
    3178:	68 f4       	brcc	.+26     	; 0x3194 <__vector_33+0xa2>
    317a:	80 91 1a 07 	lds	r24, 0x071A
    317e:	e8 2f       	mov	r30, r24
    3180:	f0 e0       	ldi	r31, 0x00	; 0
    3182:	ee 5f       	subi	r30, 0xFE	; 254
    3184:	f8 4f       	sbci	r31, 0xF8	; 248
    3186:	90 81       	ld	r25, Z
    3188:	8f 5f       	subi	r24, 0xFF	; 255
    318a:	80 93 1a 07 	sts	0x071A, r24
    318e:	90 93 73 00 	sts	0x0073, r25
    3192:	27 c0       	rjmp	.+78     	; 0x31e2 <__vector_33+0xf0>
    3194:	80 91 1b 07 	lds	r24, 0x071B
    3198:	88 23       	and	r24, r24
    319a:	69 f1       	breq	.+90     	; 0x31f6 <__vector_33+0x104>
    319c:	80 91 1b 07 	lds	r24, 0x071B
    31a0:	80 93 17 07 	sts	0x0717, r24
    31a4:	80 91 02 07 	lds	r24, 0x0702
    31a8:	81 60       	ori	r24, 0x01	; 1
    31aa:	80 93 02 07 	sts	0x0702, r24
    31ae:	85 ea       	ldi	r24, 0xA5	; 165
    31b0:	26 c0       	rjmp	.+76     	; 0x31fe <__vector_33+0x10c>
    31b2:	80 91 1a 07 	lds	r24, 0x071A
    31b6:	90 91 73 00 	lds	r25, 0x0073
    31ba:	e8 2f       	mov	r30, r24
    31bc:	f0 e0       	ldi	r31, 0x00	; 0
    31be:	ee 5f       	subi	r30, 0xFE	; 254
    31c0:	f8 4f       	sbci	r31, 0xF8	; 248
    31c2:	90 83       	st	Z, r25
    31c4:	8f 5f       	subi	r24, 0xFF	; 255
    31c6:	80 93 1a 07 	sts	0x071A, r24
    31ca:	80 91 1a 07 	lds	r24, 0x071A
    31ce:	20 91 17 07 	lds	r18, 0x0717
    31d2:	90 e0       	ldi	r25, 0x00	; 0
    31d4:	01 96       	adiw	r24, 0x01	; 1
    31d6:	30 e0       	ldi	r19, 0x00	; 0
    31d8:	82 17       	cp	r24, r18
    31da:	93 07       	cpc	r25, r19
    31dc:	14 f4       	brge	.+4      	; 0x31e2 <__vector_33+0xf0>
    31de:	85 ec       	ldi	r24, 0xC5	; 197
    31e0:	0e c0       	rjmp	.+28     	; 0x31fe <__vector_33+0x10c>
    31e2:	85 e8       	ldi	r24, 0x85	; 133
    31e4:	0c c0       	rjmp	.+24     	; 0x31fe <__vector_33+0x10c>
    31e6:	e0 91 1a 07 	lds	r30, 0x071A
    31ea:	80 91 73 00 	lds	r24, 0x0073
    31ee:	f0 e0       	ldi	r31, 0x00	; 0
    31f0:	ee 5f       	subi	r30, 0xFE	; 254
    31f2:	f8 4f       	sbci	r31, 0xF8	; 248
    31f4:	80 83       	st	Z, r24
    31f6:	82 e0       	ldi	r24, 0x02	; 2
    31f8:	80 93 16 07 	sts	0x0716, r24
    31fc:	84 e9       	ldi	r24, 0x94	; 148
    31fe:	80 93 74 00 	sts	0x0074, r24
    3202:	10 c0       	rjmp	.+32     	; 0x3224 <__vector_33+0x132>
    3204:	84 e8       	ldi	r24, 0x84	; 132
    3206:	80 93 74 00 	sts	0x0074, r24
    320a:	85 e1       	ldi	r24, 0x15	; 21
    320c:	09 c0       	rjmp	.+18     	; 0x3220 <__vector_33+0x12e>
    320e:	84 e9       	ldi	r24, 0x94	; 148
    3210:	80 93 74 00 	sts	0x0074, r24
    3214:	86 e1       	ldi	r24, 0x16	; 22
    3216:	04 c0       	rjmp	.+8      	; 0x3220 <__vector_33+0x12e>
    3218:	84 e8       	ldi	r24, 0x84	; 132
    321a:	80 93 74 00 	sts	0x0074, r24
    321e:	87 e1       	ldi	r24, 0x17	; 23
    3220:	80 93 16 07 	sts	0x0716, r24
    3224:	ff 91       	pop	r31
    3226:	ef 91       	pop	r30
    3228:	9f 91       	pop	r25
    322a:	8f 91       	pop	r24
    322c:	3f 91       	pop	r19
    322e:	2f 91       	pop	r18
    3230:	0f 90       	pop	r0
    3232:	0b be       	out	0x3b, r0	; 59
    3234:	0f 90       	pop	r0
    3236:	0f be       	out	0x3f, r0	; 63
    3238:	0f 90       	pop	r0
    323a:	1f 90       	pop	r1
    323c:	18 95       	reti

0000323e <nds3_init>:
    323e:	08 95       	ret

00003240 <nds3_transaction>:
    3240:	80 93 19 07 	sts	0x0719, r24
    3244:	60 93 1b 07 	sts	0x071B, r22
    3248:	0e 94 1a 18 	call	0x3034	; 0x3034 <i2c_start_transmission>
    324c:	0e 94 41 18 	call	0x3082	; 0x3082 <i2c_wait_transmission>
    3250:	08 95       	ret

00003252 <nds3_distcalib_commit>:
    3252:	84 e5       	ldi	r24, 0x54	; 84
    3254:	80 93 02 07 	sts	0x0702, r24
    3258:	84 e2       	ldi	r24, 0x24	; 36
    325a:	80 93 03 07 	sts	0x0703, r24
    325e:	80 91 da 07 	lds	r24, 0x07DA
    3262:	90 91 db 07 	lds	r25, 0x07DB
    3266:	90 93 04 07 	sts	0x0704, r25
    326a:	80 93 05 07 	sts	0x0705, r24
    326e:	80 91 dc 07 	lds	r24, 0x07DC
    3272:	90 91 dd 07 	lds	r25, 0x07DD
    3276:	90 93 06 07 	sts	0x0706, r25
    327a:	80 93 07 07 	sts	0x0707, r24
    327e:	80 91 1c 07 	lds	r24, 0x071C
    3282:	90 91 1d 07 	lds	r25, 0x071D
    3286:	90 93 08 07 	sts	0x0708, r25
    328a:	80 93 09 07 	sts	0x0709, r24
    328e:	88 e0       	ldi	r24, 0x08	; 8
    3290:	62 e0       	ldi	r22, 0x02	; 2
    3292:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    3296:	08 95       	ret

00003298 <nds3_distcalib_update>:
    3298:	84 e5       	ldi	r24, 0x54	; 84
    329a:	80 93 02 07 	sts	0x0702, r24
    329e:	83 e2       	ldi	r24, 0x23	; 35
    32a0:	80 93 03 07 	sts	0x0703, r24
    32a4:	82 e0       	ldi	r24, 0x02	; 2
    32a6:	67 e0       	ldi	r22, 0x07	; 7
    32a8:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    32ac:	90 91 03 07 	lds	r25, 0x0703
    32b0:	80 e0       	ldi	r24, 0x00	; 0
    32b2:	20 91 04 07 	lds	r18, 0x0704
    32b6:	82 0f       	add	r24, r18
    32b8:	91 1d       	adc	r25, r1
    32ba:	90 93 db 07 	sts	0x07DB, r25
    32be:	80 93 da 07 	sts	0x07DA, r24
    32c2:	90 91 05 07 	lds	r25, 0x0705
    32c6:	80 e0       	ldi	r24, 0x00	; 0
    32c8:	20 91 06 07 	lds	r18, 0x0706
    32cc:	82 0f       	add	r24, r18
    32ce:	91 1d       	adc	r25, r1
    32d0:	90 93 dd 07 	sts	0x07DD, r25
    32d4:	80 93 dc 07 	sts	0x07DC, r24
    32d8:	90 91 07 07 	lds	r25, 0x0707
    32dc:	80 e0       	ldi	r24, 0x00	; 0
    32de:	20 91 08 07 	lds	r18, 0x0708
    32e2:	82 0f       	add	r24, r18
    32e4:	91 1d       	adc	r25, r1
    32e6:	90 93 1d 07 	sts	0x071D, r25
    32ea:	80 93 1c 07 	sts	0x071C, r24
    32ee:	08 95       	ret

000032f0 <nds3_servocalib_commit>:
    32f0:	84 e5       	ldi	r24, 0x54	; 84
    32f2:	80 93 02 07 	sts	0x0702, r24
    32f6:	82 e2       	ldi	r24, 0x22	; 34
    32f8:	80 93 03 07 	sts	0x0703, r24
    32fc:	80 91 d8 07 	lds	r24, 0x07D8
    3300:	90 91 d9 07 	lds	r25, 0x07D9
    3304:	90 93 04 07 	sts	0x0704, r25
    3308:	80 93 05 07 	sts	0x0705, r24
    330c:	80 91 1e 07 	lds	r24, 0x071E
    3310:	90 91 1f 07 	lds	r25, 0x071F
    3314:	90 93 06 07 	sts	0x0706, r25
    3318:	80 93 07 07 	sts	0x0707, r24
    331c:	80 91 de 07 	lds	r24, 0x07DE
    3320:	90 91 df 07 	lds	r25, 0x07DF
    3324:	90 93 08 07 	sts	0x0708, r25
    3328:	80 93 09 07 	sts	0x0709, r24
    332c:	88 e0       	ldi	r24, 0x08	; 8
    332e:	62 e0       	ldi	r22, 0x02	; 2
    3330:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    3334:	08 95       	ret

00003336 <nds3_servocalib_update>:
    3336:	84 e5       	ldi	r24, 0x54	; 84
    3338:	80 93 02 07 	sts	0x0702, r24
    333c:	81 e2       	ldi	r24, 0x21	; 33
    333e:	80 93 03 07 	sts	0x0703, r24
    3342:	82 e0       	ldi	r24, 0x02	; 2
    3344:	67 e0       	ldi	r22, 0x07	; 7
    3346:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    334a:	90 91 03 07 	lds	r25, 0x0703
    334e:	80 e0       	ldi	r24, 0x00	; 0
    3350:	20 91 04 07 	lds	r18, 0x0704
    3354:	82 0f       	add	r24, r18
    3356:	91 1d       	adc	r25, r1
    3358:	90 93 d9 07 	sts	0x07D9, r25
    335c:	80 93 d8 07 	sts	0x07D8, r24
    3360:	90 91 05 07 	lds	r25, 0x0705
    3364:	80 e0       	ldi	r24, 0x00	; 0
    3366:	20 91 06 07 	lds	r18, 0x0706
    336a:	82 0f       	add	r24, r18
    336c:	91 1d       	adc	r25, r1
    336e:	90 93 1f 07 	sts	0x071F, r25
    3372:	80 93 1e 07 	sts	0x071E, r24
    3376:	90 91 07 07 	lds	r25, 0x0707
    337a:	80 e0       	ldi	r24, 0x00	; 0
    337c:	20 91 08 07 	lds	r18, 0x0708
    3380:	82 0f       	add	r24, r18
    3382:	91 1d       	adc	r25, r1
    3384:	90 93 df 07 	sts	0x07DF, r25
    3388:	80 93 de 07 	sts	0x07DE, r24
    338c:	08 95       	ret

0000338e <nds3_move_servo>:
    338e:	24 e5       	ldi	r18, 0x54	; 84
    3390:	20 93 02 07 	sts	0x0702, r18
    3394:	20 e2       	ldi	r18, 0x20	; 32
    3396:	20 93 03 07 	sts	0x0703, r18
    339a:	90 93 04 07 	sts	0x0704, r25
    339e:	80 93 05 07 	sts	0x0705, r24
    33a2:	84 e0       	ldi	r24, 0x04	; 4
    33a4:	62 e0       	ldi	r22, 0x02	; 2
    33a6:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    33aa:	08 95       	ret

000033ac <nds3_get_analog>:
    33ac:	94 e5       	ldi	r25, 0x54	; 84
    33ae:	90 93 02 07 	sts	0x0702, r25
    33b2:	93 e1       	ldi	r25, 0x13	; 19
    33b4:	90 93 03 07 	sts	0x0703, r25
    33b8:	80 93 04 07 	sts	0x0704, r24
    33bc:	83 e0       	ldi	r24, 0x03	; 3
    33be:	63 e0       	ldi	r22, 0x03	; 3
    33c0:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    33c4:	30 91 03 07 	lds	r19, 0x0703
    33c8:	20 e0       	ldi	r18, 0x00	; 0
    33ca:	80 91 04 07 	lds	r24, 0x0704
    33ce:	28 0f       	add	r18, r24
    33d0:	31 1d       	adc	r19, r1
    33d2:	c9 01       	movw	r24, r18
    33d4:	08 95       	ret

000033d6 <nds3_pin_update>:
    33d6:	84 e5       	ldi	r24, 0x54	; 84
    33d8:	80 93 02 07 	sts	0x0702, r24
    33dc:	82 e1       	ldi	r24, 0x12	; 18
    33de:	80 93 03 07 	sts	0x0703, r24
    33e2:	82 e0       	ldi	r24, 0x02	; 2
    33e4:	62 e0       	ldi	r22, 0x02	; 2
    33e6:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    33ea:	80 91 03 07 	lds	r24, 0x0703
    33ee:	80 93 20 07 	sts	0x0720, r24
    33f2:	08 95       	ret

000033f4 <nds3_port_commit>:
    33f4:	84 e5       	ldi	r24, 0x54	; 84
    33f6:	80 93 02 07 	sts	0x0702, r24
    33fa:	81 e1       	ldi	r24, 0x11	; 17
    33fc:	80 93 03 07 	sts	0x0703, r24
    3400:	80 91 d7 07 	lds	r24, 0x07D7
    3404:	80 93 04 07 	sts	0x0704, r24
    3408:	83 e0       	ldi	r24, 0x03	; 3
    340a:	62 e0       	ldi	r22, 0x02	; 2
    340c:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    3410:	08 95       	ret

00003412 <nds3_ddr_commit>:
    3412:	84 e5       	ldi	r24, 0x54	; 84
    3414:	80 93 02 07 	sts	0x0702, r24
    3418:	80 e1       	ldi	r24, 0x10	; 16
    341a:	80 93 03 07 	sts	0x0703, r24
    341e:	80 91 21 07 	lds	r24, 0x0721
    3422:	80 93 04 07 	sts	0x0704, r24
    3426:	83 e0       	ldi	r24, 0x03	; 3
    3428:	62 e0       	ldi	r22, 0x02	; 2
    342a:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    342e:	08 95       	ret

00003430 <nds3_get_busy>:
    3430:	84 e5       	ldi	r24, 0x54	; 84
    3432:	80 93 02 07 	sts	0x0702, r24
    3436:	86 e0       	ldi	r24, 0x06	; 6
    3438:	80 93 03 07 	sts	0x0703, r24
    343c:	82 e0       	ldi	r24, 0x02	; 2
    343e:	62 e0       	ldi	r22, 0x02	; 2
    3440:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    3444:	80 91 03 07 	lds	r24, 0x0703
    3448:	08 95       	ret

0000344a <nds3_get_dist>:
    344a:	84 e5       	ldi	r24, 0x54	; 84
    344c:	80 93 02 07 	sts	0x0702, r24
    3450:	85 e0       	ldi	r24, 0x05	; 5
    3452:	80 93 03 07 	sts	0x0703, r24
    3456:	82 e0       	ldi	r24, 0x02	; 2
    3458:	62 e0       	ldi	r22, 0x02	; 2
    345a:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    345e:	80 91 03 07 	lds	r24, 0x0703
    3462:	08 95       	ret

00003464 <nds3_get_pos>:
    3464:	84 e5       	ldi	r24, 0x54	; 84
    3466:	80 93 02 07 	sts	0x0702, r24
    346a:	84 e0       	ldi	r24, 0x04	; 4
    346c:	80 93 03 07 	sts	0x0703, r24
    3470:	82 e0       	ldi	r24, 0x02	; 2
    3472:	62 e0       	ldi	r22, 0x02	; 2
    3474:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    3478:	80 91 03 07 	lds	r24, 0x0703
    347c:	08 95       	ret

0000347e <nds3_read>:
    347e:	0f 93       	push	r16
    3480:	1f 93       	push	r17
    3482:	18 2f       	mov	r17, r24
    3484:	06 2f       	mov	r16, r22
    3486:	84 e5       	ldi	r24, 0x54	; 84
    3488:	80 93 02 07 	sts	0x0702, r24
    348c:	83 e0       	ldi	r24, 0x03	; 3
    348e:	80 93 03 07 	sts	0x0703, r24
    3492:	10 93 04 07 	sts	0x0704, r17
    3496:	60 93 05 07 	sts	0x0705, r22
    349a:	84 e0       	ldi	r24, 0x04	; 4
    349c:	61 e1       	ldi	r22, 0x11	; 17
    349e:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    34a2:	e3 e0       	ldi	r30, 0x03	; 3
    34a4:	f7 e0       	ldi	r31, 0x07	; 7
    34a6:	07 c0       	rjmp	.+14     	; 0x34b6 <nds3_read+0x38>
    34a8:	a1 2f       	mov	r26, r17
    34aa:	b0 e0       	ldi	r27, 0x00	; 0
    34ac:	ae 5d       	subi	r26, 0xDE	; 222
    34ae:	b8 4f       	sbci	r27, 0xF8	; 248
    34b0:	81 91       	ld	r24, Z+
    34b2:	8c 93       	st	X, r24
    34b4:	10 0f       	add	r17, r16
    34b6:	15 3b       	cpi	r17, 0xB5	; 181
    34b8:	20 f4       	brcc	.+8      	; 0x34c2 <nds3_read+0x44>
    34ba:	87 e0       	ldi	r24, 0x07	; 7
    34bc:	e3 31       	cpi	r30, 0x13	; 19
    34be:	f8 07       	cpc	r31, r24
    34c0:	99 f7       	brne	.-26     	; 0x34a8 <nds3_read+0x2a>
    34c2:	1f 91       	pop	r17
    34c4:	0f 91       	pop	r16
    34c6:	08 95       	ret

000034c8 <nds3_measure>:
    34c8:	94 e5       	ldi	r25, 0x54	; 84
    34ca:	90 93 02 07 	sts	0x0702, r25
    34ce:	92 e0       	ldi	r25, 0x02	; 2
    34d0:	90 93 03 07 	sts	0x0703, r25
    34d4:	80 93 04 07 	sts	0x0704, r24
    34d8:	60 93 05 07 	sts	0x0705, r22
    34dc:	84 e0       	ldi	r24, 0x04	; 4
    34de:	62 e0       	ldi	r22, 0x02	; 2
    34e0:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    34e4:	08 95       	ret

000034e6 <nds3_move>:
    34e6:	94 e5       	ldi	r25, 0x54	; 84
    34e8:	90 93 02 07 	sts	0x0702, r25
    34ec:	91 e0       	ldi	r25, 0x01	; 1
    34ee:	90 93 03 07 	sts	0x0703, r25
    34f2:	80 93 04 07 	sts	0x0704, r24
    34f6:	83 e0       	ldi	r24, 0x03	; 3
    34f8:	62 e0       	ldi	r22, 0x02	; 2
    34fa:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    34fe:	08 95       	ret

00003500 <nds3_reset>:
    3500:	84 e5       	ldi	r24, 0x54	; 84
    3502:	80 93 02 07 	sts	0x0702, r24
    3506:	10 92 03 07 	sts	0x0703, r1
    350a:	82 e0       	ldi	r24, 0x02	; 2
    350c:	62 e0       	ldi	r22, 0x02	; 2
    350e:	0e 94 20 19 	call	0x3240	; 0x3240 <nds3_transaction>
    3512:	08 95       	ret

00003514 <__udivmodqi4>:
    3514:	99 1b       	sub	r25, r25
    3516:	79 e0       	ldi	r23, 0x09	; 9
    3518:	04 c0       	rjmp	.+8      	; 0x3522 <__udivmodqi4_ep>

0000351a <__udivmodqi4_loop>:
    351a:	99 1f       	adc	r25, r25
    351c:	96 17       	cp	r25, r22
    351e:	08 f0       	brcs	.+2      	; 0x3522 <__udivmodqi4_ep>
    3520:	96 1b       	sub	r25, r22

00003522 <__udivmodqi4_ep>:
    3522:	88 1f       	adc	r24, r24
    3524:	7a 95       	dec	r23
    3526:	c9 f7       	brne	.-14     	; 0x351a <__udivmodqi4_loop>
    3528:	80 95       	com	r24
    352a:	08 95       	ret

0000352c <__divmodhi4>:
    352c:	97 fb       	bst	r25, 7
    352e:	09 2e       	mov	r0, r25
    3530:	07 26       	eor	r0, r23
    3532:	0a d0       	rcall	.+20     	; 0x3548 <__divmodhi4_neg1>
    3534:	77 fd       	sbrc	r23, 7
    3536:	04 d0       	rcall	.+8      	; 0x3540 <__divmodhi4_neg2>
    3538:	49 d0       	rcall	.+146    	; 0x35cc <__udivmodhi4>
    353a:	06 d0       	rcall	.+12     	; 0x3548 <__divmodhi4_neg1>
    353c:	00 20       	and	r0, r0
    353e:	1a f4       	brpl	.+6      	; 0x3546 <__divmodhi4_exit>

00003540 <__divmodhi4_neg2>:
    3540:	70 95       	com	r23
    3542:	61 95       	neg	r22
    3544:	7f 4f       	sbci	r23, 0xFF	; 255

00003546 <__divmodhi4_exit>:
    3546:	08 95       	ret

00003548 <__divmodhi4_neg1>:
    3548:	f6 f7       	brtc	.-4      	; 0x3546 <__divmodhi4_exit>
    354a:	90 95       	com	r25
    354c:	81 95       	neg	r24
    354e:	9f 4f       	sbci	r25, 0xFF	; 255
    3550:	08 95       	ret

00003552 <__udivmodsi4>:
    3552:	a1 e2       	ldi	r26, 0x21	; 33
    3554:	1a 2e       	mov	r1, r26
    3556:	aa 1b       	sub	r26, r26
    3558:	bb 1b       	sub	r27, r27
    355a:	fd 01       	movw	r30, r26
    355c:	0d c0       	rjmp	.+26     	; 0x3578 <__udivmodsi4_ep>

0000355e <__udivmodsi4_loop>:
    355e:	aa 1f       	adc	r26, r26
    3560:	bb 1f       	adc	r27, r27
    3562:	ee 1f       	adc	r30, r30
    3564:	ff 1f       	adc	r31, r31
    3566:	a2 17       	cp	r26, r18
    3568:	b3 07       	cpc	r27, r19
    356a:	e4 07       	cpc	r30, r20
    356c:	f5 07       	cpc	r31, r21
    356e:	20 f0       	brcs	.+8      	; 0x3578 <__udivmodsi4_ep>
    3570:	a2 1b       	sub	r26, r18
    3572:	b3 0b       	sbc	r27, r19
    3574:	e4 0b       	sbc	r30, r20
    3576:	f5 0b       	sbc	r31, r21

00003578 <__udivmodsi4_ep>:
    3578:	66 1f       	adc	r22, r22
    357a:	77 1f       	adc	r23, r23
    357c:	88 1f       	adc	r24, r24
    357e:	99 1f       	adc	r25, r25
    3580:	1a 94       	dec	r1
    3582:	69 f7       	brne	.-38     	; 0x355e <__udivmodsi4_loop>
    3584:	60 95       	com	r22
    3586:	70 95       	com	r23
    3588:	80 95       	com	r24
    358a:	90 95       	com	r25
    358c:	9b 01       	movw	r18, r22
    358e:	ac 01       	movw	r20, r24
    3590:	bd 01       	movw	r22, r26
    3592:	cf 01       	movw	r24, r30
    3594:	08 95       	ret

00003596 <__divmodsi4>:
    3596:	97 fb       	bst	r25, 7
    3598:	09 2e       	mov	r0, r25
    359a:	05 26       	eor	r0, r21
    359c:	0e d0       	rcall	.+28     	; 0x35ba <__divmodsi4_neg1>
    359e:	57 fd       	sbrc	r21, 7
    35a0:	04 d0       	rcall	.+8      	; 0x35aa <__divmodsi4_neg2>
    35a2:	d7 df       	rcall	.-82     	; 0x3552 <__udivmodsi4>
    35a4:	0a d0       	rcall	.+20     	; 0x35ba <__divmodsi4_neg1>
    35a6:	00 1c       	adc	r0, r0
    35a8:	38 f4       	brcc	.+14     	; 0x35b8 <__divmodsi4_exit>

000035aa <__divmodsi4_neg2>:
    35aa:	50 95       	com	r21
    35ac:	40 95       	com	r20
    35ae:	30 95       	com	r19
    35b0:	21 95       	neg	r18
    35b2:	3f 4f       	sbci	r19, 0xFF	; 255
    35b4:	4f 4f       	sbci	r20, 0xFF	; 255
    35b6:	5f 4f       	sbci	r21, 0xFF	; 255

000035b8 <__divmodsi4_exit>:
    35b8:	08 95       	ret

000035ba <__divmodsi4_neg1>:
    35ba:	f6 f7       	brtc	.-4      	; 0x35b8 <__divmodsi4_exit>
    35bc:	90 95       	com	r25
    35be:	80 95       	com	r24
    35c0:	70 95       	com	r23
    35c2:	61 95       	neg	r22
    35c4:	7f 4f       	sbci	r23, 0xFF	; 255
    35c6:	8f 4f       	sbci	r24, 0xFF	; 255
    35c8:	9f 4f       	sbci	r25, 0xFF	; 255
    35ca:	08 95       	ret

000035cc <__udivmodhi4>:
    35cc:	aa 1b       	sub	r26, r26
    35ce:	bb 1b       	sub	r27, r27
    35d0:	51 e1       	ldi	r21, 0x11	; 17
    35d2:	07 c0       	rjmp	.+14     	; 0x35e2 <__udivmodhi4_ep>

000035d4 <__udivmodhi4_loop>:
    35d4:	aa 1f       	adc	r26, r26
    35d6:	bb 1f       	adc	r27, r27
    35d8:	a6 17       	cp	r26, r22
    35da:	b7 07       	cpc	r27, r23
    35dc:	10 f0       	brcs	.+4      	; 0x35e2 <__udivmodhi4_ep>
    35de:	a6 1b       	sub	r26, r22
    35e0:	b7 0b       	sbc	r27, r23

000035e2 <__udivmodhi4_ep>:
    35e2:	88 1f       	adc	r24, r24
    35e4:	99 1f       	adc	r25, r25
    35e6:	5a 95       	dec	r21
    35e8:	a9 f7       	brne	.-22     	; 0x35d4 <__udivmodhi4_loop>
    35ea:	80 95       	com	r24
    35ec:	90 95       	com	r25
    35ee:	bc 01       	movw	r22, r24
    35f0:	cd 01       	movw	r24, r26
    35f2:	08 95       	ret

000035f4 <__ftoa_engine>:
    35f4:	28 30       	cpi	r18, 0x08	; 8
    35f6:	08 f0       	brcs	.+2      	; 0x35fa <__ftoa_engine+0x6>
    35f8:	27 e0       	ldi	r18, 0x07	; 7
    35fa:	33 27       	eor	r19, r19
    35fc:	da 01       	movw	r26, r20
    35fe:	99 0f       	add	r25, r25
    3600:	31 1d       	adc	r19, r1
    3602:	87 fd       	sbrc	r24, 7
    3604:	91 60       	ori	r25, 0x01	; 1
    3606:	00 96       	adiw	r24, 0x00	; 0
    3608:	61 05       	cpc	r22, r1
    360a:	71 05       	cpc	r23, r1
    360c:	39 f4       	brne	.+14     	; 0x361c <__ftoa_engine+0x28>
    360e:	32 60       	ori	r19, 0x02	; 2
    3610:	2e 5f       	subi	r18, 0xFE	; 254
    3612:	3d 93       	st	X+, r19
    3614:	30 e3       	ldi	r19, 0x30	; 48
    3616:	2a 95       	dec	r18
    3618:	e1 f7       	brne	.-8      	; 0x3612 <__ftoa_engine+0x1e>
    361a:	08 95       	ret
    361c:	9f 3f       	cpi	r25, 0xFF	; 255
    361e:	30 f0       	brcs	.+12     	; 0x362c <__ftoa_engine+0x38>
    3620:	80 38       	cpi	r24, 0x80	; 128
    3622:	71 05       	cpc	r23, r1
    3624:	61 05       	cpc	r22, r1
    3626:	09 f0       	breq	.+2      	; 0x362a <__ftoa_engine+0x36>
    3628:	3c 5f       	subi	r19, 0xFC	; 252
    362a:	3c 5f       	subi	r19, 0xFC	; 252
    362c:	3d 93       	st	X+, r19
    362e:	91 30       	cpi	r25, 0x01	; 1
    3630:	08 f0       	brcs	.+2      	; 0x3634 <__ftoa_engine+0x40>
    3632:	80 68       	ori	r24, 0x80	; 128
    3634:	91 1d       	adc	r25, r1
    3636:	df 93       	push	r29
    3638:	cf 93       	push	r28
    363a:	1f 93       	push	r17
    363c:	0f 93       	push	r16
    363e:	ff 92       	push	r15
    3640:	ef 92       	push	r14
    3642:	19 2f       	mov	r17, r25
    3644:	98 7f       	andi	r25, 0xF8	; 248
    3646:	96 95       	lsr	r25
    3648:	e9 2f       	mov	r30, r25
    364a:	96 95       	lsr	r25
    364c:	96 95       	lsr	r25
    364e:	e9 0f       	add	r30, r25
    3650:	ff 27       	eor	r31, r31
    3652:	e5 56       	subi	r30, 0x65	; 101
    3654:	fd 4f       	sbci	r31, 0xFD	; 253
    3656:	99 27       	eor	r25, r25
    3658:	33 27       	eor	r19, r19
    365a:	ee 24       	eor	r14, r14
    365c:	ff 24       	eor	r15, r15
    365e:	a7 01       	movw	r20, r14
    3660:	e7 01       	movw	r28, r14
    3662:	05 90       	lpm	r0, Z+
    3664:	08 94       	sec
    3666:	07 94       	ror	r0
    3668:	28 f4       	brcc	.+10     	; 0x3674 <__ftoa_engine+0x80>
    366a:	36 0f       	add	r19, r22
    366c:	e7 1e       	adc	r14, r23
    366e:	f8 1e       	adc	r15, r24
    3670:	49 1f       	adc	r20, r25
    3672:	51 1d       	adc	r21, r1
    3674:	66 0f       	add	r22, r22
    3676:	77 1f       	adc	r23, r23
    3678:	88 1f       	adc	r24, r24
    367a:	99 1f       	adc	r25, r25
    367c:	06 94       	lsr	r0
    367e:	a1 f7       	brne	.-24     	; 0x3668 <__ftoa_engine+0x74>
    3680:	05 90       	lpm	r0, Z+
    3682:	07 94       	ror	r0
    3684:	28 f4       	brcc	.+10     	; 0x3690 <__ftoa_engine+0x9c>
    3686:	e7 0e       	add	r14, r23
    3688:	f8 1e       	adc	r15, r24
    368a:	49 1f       	adc	r20, r25
    368c:	56 1f       	adc	r21, r22
    368e:	c1 1d       	adc	r28, r1
    3690:	77 0f       	add	r23, r23
    3692:	88 1f       	adc	r24, r24
    3694:	99 1f       	adc	r25, r25
    3696:	66 1f       	adc	r22, r22
    3698:	06 94       	lsr	r0
    369a:	a1 f7       	brne	.-24     	; 0x3684 <__ftoa_engine+0x90>
    369c:	05 90       	lpm	r0, Z+
    369e:	07 94       	ror	r0
    36a0:	28 f4       	brcc	.+10     	; 0x36ac <__ftoa_engine+0xb8>
    36a2:	f8 0e       	add	r15, r24
    36a4:	49 1f       	adc	r20, r25
    36a6:	56 1f       	adc	r21, r22
    36a8:	c7 1f       	adc	r28, r23
    36aa:	d1 1d       	adc	r29, r1
    36ac:	88 0f       	add	r24, r24
    36ae:	99 1f       	adc	r25, r25
    36b0:	66 1f       	adc	r22, r22
    36b2:	77 1f       	adc	r23, r23
    36b4:	06 94       	lsr	r0
    36b6:	a1 f7       	brne	.-24     	; 0x36a0 <__ftoa_engine+0xac>
    36b8:	05 90       	lpm	r0, Z+
    36ba:	07 94       	ror	r0
    36bc:	20 f4       	brcc	.+8      	; 0x36c6 <__ftoa_engine+0xd2>
    36be:	49 0f       	add	r20, r25
    36c0:	56 1f       	adc	r21, r22
    36c2:	c7 1f       	adc	r28, r23
    36c4:	d8 1f       	adc	r29, r24
    36c6:	99 0f       	add	r25, r25
    36c8:	66 1f       	adc	r22, r22
    36ca:	77 1f       	adc	r23, r23
    36cc:	88 1f       	adc	r24, r24
    36ce:	06 94       	lsr	r0
    36d0:	a9 f7       	brne	.-22     	; 0x36bc <__ftoa_engine+0xc8>
    36d2:	84 91       	lpm	r24, Z+
    36d4:	10 95       	com	r17
    36d6:	17 70       	andi	r17, 0x07	; 7
    36d8:	41 f0       	breq	.+16     	; 0x36ea <__ftoa_engine+0xf6>
    36da:	d6 95       	lsr	r29
    36dc:	c7 95       	ror	r28
    36de:	57 95       	ror	r21
    36e0:	47 95       	ror	r20
    36e2:	f7 94       	ror	r15
    36e4:	e7 94       	ror	r14
    36e6:	1a 95       	dec	r17
    36e8:	c1 f7       	brne	.-16     	; 0x36da <__ftoa_engine+0xe6>
    36ea:	e1 e4       	ldi	r30, 0x41	; 65
    36ec:	f2 e0       	ldi	r31, 0x02	; 2
    36ee:	68 94       	set
    36f0:	15 90       	lpm	r1, Z+
    36f2:	15 91       	lpm	r17, Z+
    36f4:	35 91       	lpm	r19, Z+
    36f6:	65 91       	lpm	r22, Z+
    36f8:	95 91       	lpm	r25, Z+
    36fa:	05 90       	lpm	r0, Z+
    36fc:	7f e2       	ldi	r23, 0x2F	; 47
    36fe:	73 95       	inc	r23
    3700:	e1 18       	sub	r14, r1
    3702:	f1 0a       	sbc	r15, r17
    3704:	43 0b       	sbc	r20, r19
    3706:	56 0b       	sbc	r21, r22
    3708:	c9 0b       	sbc	r28, r25
    370a:	d0 09       	sbc	r29, r0
    370c:	c0 f7       	brcc	.-16     	; 0x36fe <__ftoa_engine+0x10a>
    370e:	e1 0c       	add	r14, r1
    3710:	f1 1e       	adc	r15, r17
    3712:	43 1f       	adc	r20, r19
    3714:	56 1f       	adc	r21, r22
    3716:	c9 1f       	adc	r28, r25
    3718:	d0 1d       	adc	r29, r0
    371a:	7e f4       	brtc	.+30     	; 0x373a <__ftoa_engine+0x146>
    371c:	70 33       	cpi	r23, 0x30	; 48
    371e:	11 f4       	brne	.+4      	; 0x3724 <__ftoa_engine+0x130>
    3720:	8a 95       	dec	r24
    3722:	e6 cf       	rjmp	.-52     	; 0x36f0 <__ftoa_engine+0xfc>
    3724:	e8 94       	clt
    3726:	01 50       	subi	r16, 0x01	; 1
    3728:	30 f0       	brcs	.+12     	; 0x3736 <__ftoa_engine+0x142>
    372a:	08 0f       	add	r16, r24
    372c:	0a f4       	brpl	.+2      	; 0x3730 <__ftoa_engine+0x13c>
    372e:	00 27       	eor	r16, r16
    3730:	02 17       	cp	r16, r18
    3732:	08 f4       	brcc	.+2      	; 0x3736 <__ftoa_engine+0x142>
    3734:	20 2f       	mov	r18, r16
    3736:	23 95       	inc	r18
    3738:	02 2f       	mov	r16, r18
    373a:	7a 33       	cpi	r23, 0x3A	; 58
    373c:	28 f0       	brcs	.+10     	; 0x3748 <__ftoa_engine+0x154>
    373e:	79 e3       	ldi	r23, 0x39	; 57
    3740:	7d 93       	st	X+, r23
    3742:	2a 95       	dec	r18
    3744:	e9 f7       	brne	.-6      	; 0x3740 <__ftoa_engine+0x14c>
    3746:	10 c0       	rjmp	.+32     	; 0x3768 <__ftoa_engine+0x174>
    3748:	7d 93       	st	X+, r23
    374a:	2a 95       	dec	r18
    374c:	89 f6       	brne	.-94     	; 0x36f0 <__ftoa_engine+0xfc>
    374e:	06 94       	lsr	r0
    3750:	97 95       	ror	r25
    3752:	67 95       	ror	r22
    3754:	37 95       	ror	r19
    3756:	17 95       	ror	r17
    3758:	17 94       	ror	r1
    375a:	e1 18       	sub	r14, r1
    375c:	f1 0a       	sbc	r15, r17
    375e:	43 0b       	sbc	r20, r19
    3760:	56 0b       	sbc	r21, r22
    3762:	c9 0b       	sbc	r28, r25
    3764:	d0 09       	sbc	r29, r0
    3766:	98 f0       	brcs	.+38     	; 0x378e <__ftoa_engine+0x19a>
    3768:	23 95       	inc	r18
    376a:	7e 91       	ld	r23, -X
    376c:	73 95       	inc	r23
    376e:	7a 33       	cpi	r23, 0x3A	; 58
    3770:	08 f0       	brcs	.+2      	; 0x3774 <__ftoa_engine+0x180>
    3772:	70 e3       	ldi	r23, 0x30	; 48
    3774:	7c 93       	st	X, r23
    3776:	20 13       	cpse	r18, r16
    3778:	b8 f7       	brcc	.-18     	; 0x3768 <__ftoa_engine+0x174>
    377a:	7e 91       	ld	r23, -X
    377c:	70 61       	ori	r23, 0x10	; 16
    377e:	7d 93       	st	X+, r23
    3780:	30 f0       	brcs	.+12     	; 0x378e <__ftoa_engine+0x19a>
    3782:	83 95       	inc	r24
    3784:	71 e3       	ldi	r23, 0x31	; 49
    3786:	7d 93       	st	X+, r23
    3788:	70 e3       	ldi	r23, 0x30	; 48
    378a:	2a 95       	dec	r18
    378c:	e1 f7       	brne	.-8      	; 0x3786 <__ftoa_engine+0x192>
    378e:	11 24       	eor	r1, r1
    3790:	ef 90       	pop	r14
    3792:	ff 90       	pop	r15
    3794:	0f 91       	pop	r16
    3796:	1f 91       	pop	r17
    3798:	cf 91       	pop	r28
    379a:	df 91       	pop	r29
    379c:	99 27       	eor	r25, r25
    379e:	87 fd       	sbrc	r24, 7
    37a0:	90 95       	com	r25
    37a2:	08 95       	ret

000037a4 <strnlen_P>:
    37a4:	fc 01       	movw	r30, r24
    37a6:	05 90       	lpm	r0, Z+
    37a8:	61 50       	subi	r22, 0x01	; 1
    37aa:	70 40       	sbci	r23, 0x00	; 0
    37ac:	01 10       	cpse	r0, r1
    37ae:	d8 f7       	brcc	.-10     	; 0x37a6 <strnlen_P+0x2>
    37b0:	80 95       	com	r24
    37b2:	90 95       	com	r25
    37b4:	8e 0f       	add	r24, r30
    37b6:	9f 1f       	adc	r25, r31
    37b8:	08 95       	ret

000037ba <strcpy>:
    37ba:	fb 01       	movw	r30, r22
    37bc:	dc 01       	movw	r26, r24
    37be:	01 90       	ld	r0, Z+
    37c0:	0d 92       	st	X+, r0
    37c2:	00 20       	and	r0, r0
    37c4:	e1 f7       	brne	.-8      	; 0x37be <strcpy+0x4>
    37c6:	08 95       	ret

000037c8 <strnlen>:
    37c8:	fc 01       	movw	r30, r24
    37ca:	61 50       	subi	r22, 0x01	; 1
    37cc:	70 40       	sbci	r23, 0x00	; 0
    37ce:	01 90       	ld	r0, Z+
    37d0:	01 10       	cpse	r0, r1
    37d2:	d8 f7       	brcc	.-10     	; 0x37ca <strnlen+0x2>
    37d4:	80 95       	com	r24
    37d6:	90 95       	com	r25
    37d8:	8e 0f       	add	r24, r30
    37da:	9f 1f       	adc	r25, r31
    37dc:	08 95       	ret

000037de <fputc>:
    37de:	0f 93       	push	r16
    37e0:	1f 93       	push	r17
    37e2:	cf 93       	push	r28
    37e4:	df 93       	push	r29
    37e6:	8c 01       	movw	r16, r24
    37e8:	eb 01       	movw	r28, r22
    37ea:	8b 81       	ldd	r24, Y+3	; 0x03
    37ec:	81 ff       	sbrs	r24, 1
    37ee:	1b c0       	rjmp	.+54     	; 0x3826 <fputc+0x48>
    37f0:	82 ff       	sbrs	r24, 2
    37f2:	0d c0       	rjmp	.+26     	; 0x380e <fputc+0x30>
    37f4:	2e 81       	ldd	r18, Y+6	; 0x06
    37f6:	3f 81       	ldd	r19, Y+7	; 0x07
    37f8:	8c 81       	ldd	r24, Y+4	; 0x04
    37fa:	9d 81       	ldd	r25, Y+5	; 0x05
    37fc:	28 17       	cp	r18, r24
    37fe:	39 07       	cpc	r19, r25
    3800:	64 f4       	brge	.+24     	; 0x381a <fputc+0x3c>
    3802:	e8 81       	ld	r30, Y
    3804:	f9 81       	ldd	r31, Y+1	; 0x01
    3806:	01 93       	st	Z+, r16
    3808:	f9 83       	std	Y+1, r31	; 0x01
    380a:	e8 83       	st	Y, r30
    380c:	06 c0       	rjmp	.+12     	; 0x381a <fputc+0x3c>
    380e:	e8 85       	ldd	r30, Y+8	; 0x08
    3810:	f9 85       	ldd	r31, Y+9	; 0x09
    3812:	80 2f       	mov	r24, r16
    3814:	09 95       	icall
    3816:	89 2b       	or	r24, r25
    3818:	31 f4       	brne	.+12     	; 0x3826 <fputc+0x48>
    381a:	8e 81       	ldd	r24, Y+6	; 0x06
    381c:	9f 81       	ldd	r25, Y+7	; 0x07
    381e:	01 96       	adiw	r24, 0x01	; 1
    3820:	9f 83       	std	Y+7, r25	; 0x07
    3822:	8e 83       	std	Y+6, r24	; 0x06
    3824:	02 c0       	rjmp	.+4      	; 0x382a <fputc+0x4c>
    3826:	0f ef       	ldi	r16, 0xFF	; 255
    3828:	1f ef       	ldi	r17, 0xFF	; 255
    382a:	c8 01       	movw	r24, r16
    382c:	df 91       	pop	r29
    382e:	cf 91       	pop	r28
    3830:	1f 91       	pop	r17
    3832:	0f 91       	pop	r16
    3834:	08 95       	ret

00003836 <sprintf>:
    3836:	0f 93       	push	r16
    3838:	1f 93       	push	r17
    383a:	df 93       	push	r29
    383c:	cf 93       	push	r28
    383e:	cd b7       	in	r28, 0x3d	; 61
    3840:	de b7       	in	r29, 0x3e	; 62
    3842:	2e 97       	sbiw	r28, 0x0e	; 14
    3844:	0f b6       	in	r0, 0x3f	; 63
    3846:	f8 94       	cli
    3848:	de bf       	out	0x3e, r29	; 62
    384a:	0f be       	out	0x3f, r0	; 63
    384c:	cd bf       	out	0x3d, r28	; 61
    384e:	0d 89       	ldd	r16, Y+21	; 0x15
    3850:	1e 89       	ldd	r17, Y+22	; 0x16
    3852:	86 e0       	ldi	r24, 0x06	; 6
    3854:	8c 83       	std	Y+4, r24	; 0x04
    3856:	1a 83       	std	Y+2, r17	; 0x02
    3858:	09 83       	std	Y+1, r16	; 0x01
    385a:	8f ef       	ldi	r24, 0xFF	; 255
    385c:	9f e7       	ldi	r25, 0x7F	; 127
    385e:	9e 83       	std	Y+6, r25	; 0x06
    3860:	8d 83       	std	Y+5, r24	; 0x05
    3862:	9e 01       	movw	r18, r28
    3864:	27 5e       	subi	r18, 0xE7	; 231
    3866:	3f 4f       	sbci	r19, 0xFF	; 255
    3868:	ce 01       	movw	r24, r28
    386a:	01 96       	adiw	r24, 0x01	; 1
    386c:	6f 89       	ldd	r22, Y+23	; 0x17
    386e:	78 8d       	ldd	r23, Y+24	; 0x18
    3870:	a9 01       	movw	r20, r18
    3872:	0e 94 68 14 	call	0x28d0	; 0x28d0 <vfprintf>
    3876:	2f 81       	ldd	r18, Y+7	; 0x07
    3878:	38 85       	ldd	r19, Y+8	; 0x08
    387a:	02 0f       	add	r16, r18
    387c:	13 1f       	adc	r17, r19
    387e:	f8 01       	movw	r30, r16
    3880:	10 82       	st	Z, r1
    3882:	2e 96       	adiw	r28, 0x0e	; 14
    3884:	0f b6       	in	r0, 0x3f	; 63
    3886:	f8 94       	cli
    3888:	de bf       	out	0x3e, r29	; 62
    388a:	0f be       	out	0x3f, r0	; 63
    388c:	cd bf       	out	0x3d, r28	; 61
    388e:	cf 91       	pop	r28
    3890:	df 91       	pop	r29
    3892:	1f 91       	pop	r17
    3894:	0f 91       	pop	r16
    3896:	08 95       	ret

00003898 <__ultoa_invert>:
    3898:	fa 01       	movw	r30, r20
    389a:	aa 27       	eor	r26, r26
    389c:	28 30       	cpi	r18, 0x08	; 8
    389e:	51 f1       	breq	.+84     	; 0x38f4 <__ultoa_invert+0x5c>
    38a0:	20 31       	cpi	r18, 0x10	; 16
    38a2:	81 f1       	breq	.+96     	; 0x3904 <__ultoa_invert+0x6c>
    38a4:	e8 94       	clt
    38a6:	6f 93       	push	r22
    38a8:	6e 7f       	andi	r22, 0xFE	; 254
    38aa:	6e 5f       	subi	r22, 0xFE	; 254
    38ac:	7f 4f       	sbci	r23, 0xFF	; 255
    38ae:	8f 4f       	sbci	r24, 0xFF	; 255
    38b0:	9f 4f       	sbci	r25, 0xFF	; 255
    38b2:	af 4f       	sbci	r26, 0xFF	; 255
    38b4:	b1 e0       	ldi	r27, 0x01	; 1
    38b6:	3e d0       	rcall	.+124    	; 0x3934 <__ultoa_invert+0x9c>
    38b8:	b4 e0       	ldi	r27, 0x04	; 4
    38ba:	3c d0       	rcall	.+120    	; 0x3934 <__ultoa_invert+0x9c>
    38bc:	67 0f       	add	r22, r23
    38be:	78 1f       	adc	r23, r24
    38c0:	89 1f       	adc	r24, r25
    38c2:	9a 1f       	adc	r25, r26
    38c4:	a1 1d       	adc	r26, r1
    38c6:	68 0f       	add	r22, r24
    38c8:	79 1f       	adc	r23, r25
    38ca:	8a 1f       	adc	r24, r26
    38cc:	91 1d       	adc	r25, r1
    38ce:	a1 1d       	adc	r26, r1
    38d0:	6a 0f       	add	r22, r26
    38d2:	71 1d       	adc	r23, r1
    38d4:	81 1d       	adc	r24, r1
    38d6:	91 1d       	adc	r25, r1
    38d8:	a1 1d       	adc	r26, r1
    38da:	20 d0       	rcall	.+64     	; 0x391c <__ultoa_invert+0x84>
    38dc:	09 f4       	brne	.+2      	; 0x38e0 <__ultoa_invert+0x48>
    38de:	68 94       	set
    38e0:	3f 91       	pop	r19
    38e2:	2a e0       	ldi	r18, 0x0A	; 10
    38e4:	26 9f       	mul	r18, r22
    38e6:	11 24       	eor	r1, r1
    38e8:	30 19       	sub	r19, r0
    38ea:	30 5d       	subi	r19, 0xD0	; 208
    38ec:	31 93       	st	Z+, r19
    38ee:	de f6       	brtc	.-74     	; 0x38a6 <__ultoa_invert+0xe>
    38f0:	cf 01       	movw	r24, r30
    38f2:	08 95       	ret
    38f4:	46 2f       	mov	r20, r22
    38f6:	47 70       	andi	r20, 0x07	; 7
    38f8:	40 5d       	subi	r20, 0xD0	; 208
    38fa:	41 93       	st	Z+, r20
    38fc:	b3 e0       	ldi	r27, 0x03	; 3
    38fe:	0f d0       	rcall	.+30     	; 0x391e <__ultoa_invert+0x86>
    3900:	c9 f7       	brne	.-14     	; 0x38f4 <__ultoa_invert+0x5c>
    3902:	f6 cf       	rjmp	.-20     	; 0x38f0 <__ultoa_invert+0x58>
    3904:	46 2f       	mov	r20, r22
    3906:	4f 70       	andi	r20, 0x0F	; 15
    3908:	40 5d       	subi	r20, 0xD0	; 208
    390a:	4a 33       	cpi	r20, 0x3A	; 58
    390c:	18 f0       	brcs	.+6      	; 0x3914 <__ultoa_invert+0x7c>
    390e:	49 5d       	subi	r20, 0xD9	; 217
    3910:	31 fd       	sbrc	r19, 1
    3912:	40 52       	subi	r20, 0x20	; 32
    3914:	41 93       	st	Z+, r20
    3916:	02 d0       	rcall	.+4      	; 0x391c <__ultoa_invert+0x84>
    3918:	a9 f7       	brne	.-22     	; 0x3904 <__ultoa_invert+0x6c>
    391a:	ea cf       	rjmp	.-44     	; 0x38f0 <__ultoa_invert+0x58>
    391c:	b4 e0       	ldi	r27, 0x04	; 4
    391e:	a6 95       	lsr	r26
    3920:	97 95       	ror	r25
    3922:	87 95       	ror	r24
    3924:	77 95       	ror	r23
    3926:	67 95       	ror	r22
    3928:	ba 95       	dec	r27
    392a:	c9 f7       	brne	.-14     	; 0x391e <__ultoa_invert+0x86>
    392c:	00 97       	sbiw	r24, 0x00	; 0
    392e:	61 05       	cpc	r22, r1
    3930:	71 05       	cpc	r23, r1
    3932:	08 95       	ret
    3934:	9b 01       	movw	r18, r22
    3936:	ac 01       	movw	r20, r24
    3938:	0a 2e       	mov	r0, r26
    393a:	06 94       	lsr	r0
    393c:	57 95       	ror	r21
    393e:	47 95       	ror	r20
    3940:	37 95       	ror	r19
    3942:	27 95       	ror	r18
    3944:	ba 95       	dec	r27
    3946:	c9 f7       	brne	.-14     	; 0x393a <__ultoa_invert+0xa2>
    3948:	62 0f       	add	r22, r18
    394a:	73 1f       	adc	r23, r19
    394c:	84 1f       	adc	r24, r20
    394e:	95 1f       	adc	r25, r21
    3950:	a0 1d       	adc	r26, r0
    3952:	08 95       	ret

00003954 <_exit>:
    3954:	f8 94       	cli

00003956 <__stop_program>:
    3956:	ff cf       	rjmp	.-2      	; 0x3956 <__stop_program>
